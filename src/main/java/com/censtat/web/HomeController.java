package com.censtat.web;

import java.net.UnknownHostException;
import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.censtat.db.connect.CensusAccess;
import com.censtat.db.connect.MongoApp;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;

/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {

	private static final Logger logger = LoggerFactory
			.getLogger(HomeController.class);
	static MongoApp app = null;
	static {
		app = new MongoApp();
		try {
			app.createConnection();
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}	
	
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		return "home";
	}
	
	/*@RequestMapping(value = "/robots.txt", method = RequestMethod.GET)
    public String getRobots(Locale locale, Model model) {
	return "robots";
	}
	 */

	@RequestMapping(value = "/home", method = RequestMethod.GET)
	public String homePage(Locale locale, Model model) {
		return "home";

	}

	@RequestMapping(value = "/content", method = RequestMethod.GET)
	public String content(Locale locale, Model model) {
		return "content";

	}
	
	@RequestMapping(value = "/comments", method = RequestMethod.GET)
	public String comments(Locale locale, Model model) {
		return "comments";

	}
	
	@RequestMapping(value = "/aboutus", method = RequestMethod.GET)
	public String aboutus(Locale locale, Model model) {
		return "aboutus";

	}
	
	@RequestMapping(value = "/privacy", method = RequestMethod.GET)
	public String privacy(Locale locale, Model model) {
		return "privacy";

	}
	
	@RequestMapping(value = "/results", method = RequestMethod.GET)
	public String results(Locale locale, Model model) {
		return "results";

	}
	
	
	
	@RequestMapping(value = "/contactus", method = RequestMethod.GET)
	public String contactus(Locale locale, Model model) {
		return "contactus";

	}


@RequestMapping(value = "/states/Maryland/cities/Middle-River", method = RequestMethod.GET)
	public String getMarylandCityMiddleRiver(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2452300");
		return "MarylandCityMiddleRiver";
	}   
@RequestMapping(value = "/states/New-York/metros/Elmira", method = RequestMethod.GET)
	public String getNew_YorkMetroElmira(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21300");
		return "New_YorkMetroElmira";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Central-city", method = RequestMethod.GET)
	public String getLouisianaCityCentralcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2213960");
		return "LouisianaCityCentralcity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Florence-town", method = RequestMethod.GET)
	public String getArizonaCityFlorencetown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "423760");
		return "ArizonaCityFlorencetown";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Lewisburg", method = RequestMethod.GET)
	public String getPennsylvaniaMicroLewisburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30260");
		return "PennsylvaniaMicroLewisburg";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Passaic-city", method = RequestMethod.GET)
	public String getNew_JerseyCityPassaiccity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3456550");
		return "New_JerseyCityPassaiccity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Greenfield-city", method = RequestMethod.GET)
	public String getWisconsinCityGreenfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5531175");
		return "WisconsinCityGreenfieldcity";
	}   
@RequestMapping(value = "/states/Indiana/metros/Muncie", method = RequestMethod.GET)
	public String getIndianaMetroMuncie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34620");
		return "IndianaMetroMuncie";
	}   
@RequestMapping(value = "/states/Utah/cities/Riverton-city", method = RequestMethod.GET)
	public String getUtahCityRivertoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4964340");
		return "UtahCityRivertoncity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Wentzville-city", method = RequestMethod.GET)
	public String getMissouriCityWentzvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2978442");
		return "MissouriCityWentzvillecity";
	}   
@RequestMapping(value = "/states/Texas/micros/Athens", method = RequestMethod.GET)
	public String getTexasMicroAthens(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11980");
		return "TexasMicroAthens";
	}   
@RequestMapping(value = "/states/Ohio/cities/Rocky-River-city", method = RequestMethod.GET)
	public String getOhioCityRockyRivercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3968056");
		return "OhioCityRockyRivercity";
	}   
@RequestMapping(value = "/states/Florida/cities/Northdale", method = RequestMethod.GET)
	public String getFloridaCityNorthdale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1249260");
		return "FloridaCityNorthdale";
	}   
@RequestMapping(value = "/states/Oregon/micros/La-Grande", method = RequestMethod.GET)
	public String getOregonMicroLaGrande(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29260");
		return "OregonMicroLaGrande";
	}   
@RequestMapping(value = "/states/Florida/cities/Dania-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityDaniaBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1216335");
		return "FloridaCityDaniaBeachcity";
	}   
@RequestMapping(value = "/states/Ohio/micros/Washington-Court-House", method = RequestMethod.GET)
	public String getOhioMicroWashingtonCourtHouse(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47920");
		return "OhioMicroWashingtonCourtHouse";
	}   
@RequestMapping(value = "/states/California/cities/Moorpark-city", method = RequestMethod.GET)
	public String getCaliforniaCityMoorparkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "649138");
		return "CaliforniaCityMoorparkcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Monroe-city", method = RequestMethod.GET)
	public String getMichiganCityMonroecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2655020");
		return "MichiganCityMonroecity";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Madisonville", method = RequestMethod.GET)
	public String getKentuckyMicroMadisonville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31580");
		return "KentuckyMicroMadisonville";
	}   
@RequestMapping(value = "/states/Florida/cities/Melbourne-city", method = RequestMethod.GET)
	public String getFloridaCityMelbournecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1243975");
		return "FloridaCityMelbournecity";
	}   
@RequestMapping(value = "/states/Alabama/metros-Alabama", method = RequestMethod.GET)
	public String getmetros_Alabama(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Alabama";
	}   
@RequestMapping(value = "/states/Alabama/micros-Alabama", method = RequestMethod.GET)
	public String getmicros_Alabama(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Alabama";
	}   
@RequestMapping(value = "/states/Alabama/cities-Alabama", method = RequestMethod.GET)
	public String getcities_Alabama(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Alabama";
	}   
@RequestMapping(value = "/states/Alabama/counties-Alabama", method = RequestMethod.GET)
	public String getcounties_Alabama(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Alabama";
	}   
@RequestMapping(value = "/states/Alabama", method = RequestMethod.GET)
	public String getAlabama(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1");
		return "Alabama";
	}   
@RequestMapping(value = "/states/Alaska/metros-Alaska", method = RequestMethod.GET)
	public String getmetros_Alaska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Alaska";
	}   
@RequestMapping(value = "/states/Alaska/micros-Alaska", method = RequestMethod.GET)
	public String getmicros_Alaska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Alaska";
	}   
@RequestMapping(value = "/states/Alaska/cities-Alaska", method = RequestMethod.GET)
	public String getcities_Alaska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Alaska";
	}   
@RequestMapping(value = "/states/Alaska/counties-Alaska", method = RequestMethod.GET)
	public String getcounties_Alaska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Alaska";
	}   
@RequestMapping(value = "/states/Alaska", method = RequestMethod.GET)
	public String getAlaska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2");
		return "Alaska";
	}   
@RequestMapping(value = "/states/Ohio/micros/Norwalk", method = RequestMethod.GET)
	public String getOhioMicroNorwalk(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35940");
		return "OhioMicroNorwalk";
	}   
@RequestMapping(value = "/states/Arizona/metros-Arizona", method = RequestMethod.GET)
	public String getmetros_Arizona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Arizona";
	}   
@RequestMapping(value = "/states/Arizona/micros-Arizona", method = RequestMethod.GET)
	public String getmicros_Arizona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Arizona";
	}   
@RequestMapping(value = "/states/Arizona/cities-Arizona", method = RequestMethod.GET)
	public String getcities_Arizona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Arizona";
	}   
@RequestMapping(value = "/states/Arizona/counties-Arizona", method = RequestMethod.GET)
	public String getcounties_Arizona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Arizona";
	}   
@RequestMapping(value = "/states/Arizona", method = RequestMethod.GET)
	public String getArizona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4");
		return "Arizona";
	}   
@RequestMapping(value = "/states/Arkansas/metros-Arkansas", method = RequestMethod.GET)
	public String getmetros_Arkansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Arkansas";
	}   
@RequestMapping(value = "/states/Arkansas/micros-Arkansas", method = RequestMethod.GET)
	public String getmicros_Arkansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Arkansas";
	}   
@RequestMapping(value = "/states/Arkansas/cities-Arkansas", method = RequestMethod.GET)
	public String getcities_Arkansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Arkansas";
	}   
@RequestMapping(value = "/states/Arkansas/counties-Arkansas", method = RequestMethod.GET)
	public String getcounties_Arkansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Arkansas";
	}   
@RequestMapping(value = "/states/Arkansas", method = RequestMethod.GET)
	public String getArkansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5");
		return "Arkansas";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Bella-Vista-town", method = RequestMethod.GET)
	public String getArkansasCityBellaVistatown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "504840");
		return "ArkansasCityBellaVistatown";
	}   
@RequestMapping(value = "/states/California/metros-California", method = RequestMethod.GET)
	public String getmetros_California(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_California";
	}   
@RequestMapping(value = "/states/California/micros-California", method = RequestMethod.GET)
	public String getmicros_California(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_California";
	}   
@RequestMapping(value = "/states/California/cities-California", method = RequestMethod.GET)
	public String getcities_California(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_California";
	}   
@RequestMapping(value = "/states/California/counties-California", method = RequestMethod.GET)
	public String getcounties_California(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_California";
	}   
@RequestMapping(value = "/states/California", method = RequestMethod.GET)
	public String getCalifornia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6");
		return "California";
	}   
@RequestMapping(value = "/states/Utah/cities/Kaysville-city", method = RequestMethod.GET)
	public String getUtahCityKaysvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4940360");
		return "UtahCityKaysvillecity";
	}   
@RequestMapping(value = "/states/California/cities/Pomona-city", method = RequestMethod.GET)
	public String getCaliforniaCityPomonacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "658072");
		return "CaliforniaCityPomonacity";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Albert-Lea", method = RequestMethod.GET)
	public String getMinnesotaMicroAlbertLea(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10660");
		return "MinnesotaMicroAlbertLea";
	}   
@RequestMapping(value = "/states/Colorado/metros-Colorado", method = RequestMethod.GET)
	public String getmetros_Colorado(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Colorado";
	}   
@RequestMapping(value = "/states/Colorado/micros-Colorado", method = RequestMethod.GET)
	public String getmicros_Colorado(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Colorado";
	}   
@RequestMapping(value = "/states/Colorado/cities-Colorado", method = RequestMethod.GET)
	public String getcities_Colorado(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Colorado";
	}   
@RequestMapping(value = "/states/Colorado/counties-Colorado", method = RequestMethod.GET)
	public String getcounties_Colorado(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Colorado";
	}   
@RequestMapping(value = "/states/Colorado", method = RequestMethod.GET)
	public String getColorado(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8");
		return "Colorado";
	}   
@RequestMapping(value = "/states/Connecticut/metros-Connecticut", method = RequestMethod.GET)
	public String getmetros_Connecticut(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Connecticut";
	}   
@RequestMapping(value = "/states/Connecticut/micros-Connecticut", method = RequestMethod.GET)
	public String getmicros_Connecticut(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Connecticut";
	}   
@RequestMapping(value = "/states/Connecticut/cities-Connecticut", method = RequestMethod.GET)
	public String getcities_Connecticut(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Connecticut";
	}   
@RequestMapping(value = "/states/Connecticut/counties-Connecticut", method = RequestMethod.GET)
	public String getcounties_Connecticut(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Connecticut";
	}   
@RequestMapping(value = "/states/Connecticut", method = RequestMethod.GET)
	public String getConnecticut(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9");
		return "Connecticut";
	}   
@RequestMapping(value = "/states/Illinois/cities/Homer-Glen-village", method = RequestMethod.GET)
	public String getIllinoisCityHomerGlenvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1735835");
		return "IllinoisCityHomerGlenvillage";
	}   
@RequestMapping(value = "/states/Illinois/cities/Mount-Prospect-village", method = RequestMethod.GET)
	public String getIllinoisCityMountProspectvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1751089");
		return "IllinoisCityMountProspectvillage";
	}   
@RequestMapping(value = "/states/California/cities/Spring-Valley", method = RequestMethod.GET)
	public String getCaliforniaCitySpringValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673696");
		return "CaliforniaCitySpringValley";
	}   
@RequestMapping(value = "/states/California/metros/Santa-Rosa", method = RequestMethod.GET)
	public String getCaliforniaMetroSantaRosa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42220");
		return "CaliforniaMetroSantaRosa";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Plymouth-city", method = RequestMethod.GET)
	public String getMinnesotaCityPlymouthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2751730");
		return "MinnesotaCityPlymouthcity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Sedalia-city", method = RequestMethod.GET)
	public String getMissouriCitySedaliacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2966440");
		return "MissouriCitySedaliacity";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Clarksdale", method = RequestMethod.GET)
	public String getMississippiMicroClarksdale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17260");
		return "MississippiMicroClarksdale";
	}   
@RequestMapping(value = "/states/Wyoming/micros/Gillette", method = RequestMethod.GET)
	public String getWyomingMicroGillette(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23940");
		return "WyomingMicroGillette";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Broken-Arrow-city", method = RequestMethod.GET)
	public String getOklahomaCityBrokenArrowcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4009050");
		return "OklahomaCityBrokenArrowcity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Reisterstown", method = RequestMethod.GET)
	public String getMarylandCityReisterstown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2465600");
		return "MarylandCityReisterstown";
	}   
@RequestMapping(value = "/states/West-Virginia/cities/Morgantown-city", method = RequestMethod.GET)
	public String getWest_VirginiaCityMorgantowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5455756");
		return "West_VirginiaCityMorgantowncity";
	}   
@RequestMapping(value = "/states/Idaho/cities/Meridian-city", method = RequestMethod.GET)
	public String getIdahoCityMeridiancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1652120");
		return "IdahoCityMeridiancity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Mansfield-city", method = RequestMethod.GET)
	public String getOhioCityMansfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3947138");
		return "OhioCityMansfieldcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Conroe-city", method = RequestMethod.GET)
	public String getTexasCityConroecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4816432");
		return "TexasCityConroecity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Iowa-City-city", method = RequestMethod.GET)
	public String getIowaCityIowaCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1938595");
		return "IowaCityIowaCitycity";
	}   
@RequestMapping(value = "/states/Virginia/metros/Washington-Arlington-Alexandria", method = RequestMethod.GET)
	public String getVirginiaMetroWashingtonArlingtonAlexandria(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47900");
		return "VirginiaMetroWashingtonArlingtonAlexandria";
	}   
@RequestMapping(value = "/states/Missouri/cities/St-Peters-city", method = RequestMethod.GET)
	public String getMissouriCityStPeterscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2965126");
		return "MissouriCityStPeterscity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Roseburg-city", method = RequestMethod.GET)
	public String getOregonCityRoseburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4163650");
		return "OregonCityRoseburgcity";
	}   
@RequestMapping(value = "/states/Montana/cities/Kalispell-city", method = RequestMethod.GET)
	public String getMontanaCityKalispellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3040075");
		return "MontanaCityKalispellcity";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Forrest-City", method = RequestMethod.GET)
	public String getArkansasMicroForrestCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22620");
		return "ArkansasMicroForrestCity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Spring-Hill-city", method = RequestMethod.GET)
	public String getTennesseeCitySpringHillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4770580");
		return "TennesseeCitySpringHillcity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Oshkosh-city", method = RequestMethod.GET)
	public String getWisconsinCityOshkoshcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5560500");
		return "WisconsinCityOshkoshcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Bibb-County", method = RequestMethod.GET)
	public String getAlabamaCountyBibbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1007");
		return "AlabamaCountyBibbCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Sandusky-city", method = RequestMethod.GET)
	public String getOhioCitySanduskycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3970380");
		return "OhioCitySanduskycity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Barbour-County", method = RequestMethod.GET)
	public String getAlabamaCountyBarbourCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1005");
		return "AlabamaCountyBarbourCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Taylor-city", method = RequestMethod.GET)
	public String getMichiganCityTaylorcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2679000");
		return "MichiganCityTaylorcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Baldwin-County", method = RequestMethod.GET)
	public String getAlabamaCountyBaldwinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1003");
		return "AlabamaCountyBaldwinCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Autauga-County", method = RequestMethod.GET)
	public String getAlabamaCountyAutaugaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1001");
		return "AlabamaCountyAutaugaCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Atascocita", method = RequestMethod.GET)
	public String getTexasCityAtascocita(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4804462");
		return "TexasCityAtascocita";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Easley-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityEasleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4521985");
		return "South_CarolinaCityEasleycity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Littleton-city", method = RequestMethod.GET)
	public String getColoradoCityLittletoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "845255");
		return "ColoradoCityLittletoncity";
	}   
@RequestMapping(value = "/states/Florida/cities/Pensacola-city", method = RequestMethod.GET)
	public String getFloridaCityPensacolacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1255925");
		return "FloridaCityPensacolacity";
	}   
@RequestMapping(value = "/states/Idaho/cities/Boise-City-city", method = RequestMethod.GET)
	public String getIdahoCityBoiseCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1608830");
		return "IdahoCityBoiseCitycity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Blount-County", method = RequestMethod.GET)
	public String getAlabamaCountyBlountCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1009");
		return "AlabamaCountyBlountCounty";
	}   
@RequestMapping(value = "/states/Delaware/cities/Dover-city", method = RequestMethod.GET)
	public String getDelawareCityDovercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1021200");
		return "DelawareCityDovercity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/West-Springfield-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityWestSpringfieldTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2577890");
		return "MassachusettsCityWestSpringfieldTowncity";
	}   
@RequestMapping(value = "/states/Texas/micros/Sulphur-Springs", method = RequestMethod.GET)
	public String getTexasMicroSulphurSprings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44860");
		return "TexasMicroSulphurSprings";
	}   
@RequestMapping(value = "/states/Alabama/counties/Chilton-County", method = RequestMethod.GET)
	public String getAlabamaCountyChiltonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1021");
		return "AlabamaCountyChiltonCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Cherokee-County", method = RequestMethod.GET)
	public String getAlabamaCountyCherokeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1019");
		return "AlabamaCountyCherokeeCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Washington-County", method = RequestMethod.GET)
	public String getMissouriCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29221");
		return "MissouriCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Fishers-town", method = RequestMethod.GET)
	public String getIndianaCityFisherstown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1823278");
		return "IndianaCityFisherstown";
	}   
@RequestMapping(value = "/states/Alabama/counties/Chambers-County", method = RequestMethod.GET)
	public String getAlabamaCountyChambersCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1017");
		return "AlabamaCountyChambersCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Franklin-city", method = RequestMethod.GET)
	public String getTennesseeCityFranklincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4727740");
		return "TennesseeCityFranklincity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Calhoun-County", method = RequestMethod.GET)
	public String getAlabamaCountyCalhounCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1015");
		return "AlabamaCountyCalhounCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Webster-County", method = RequestMethod.GET)
	public String getMissouriCountyWebsterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29225");
		return "MissouriCountyWebsterCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Butler-County", method = RequestMethod.GET)
	public String getAlabamaCountyButlerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1013");
		return "AlabamaCountyButlerCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Levelland", method = RequestMethod.GET)
	public String getTexasMicroLevelland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30220");
		return "TexasMicroLevelland";
	}   
@RequestMapping(value = "/states/New-York/cities/Newburgh-city", method = RequestMethod.GET)
	public String getNew_YorkCityNewburghcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3650034");
		return "New_YorkCityNewburghcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Guayama-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityGuayamazonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7232221");
		return "Puerto_RicoCityGuayamazonaurbana";
	}   
@RequestMapping(value = "/states/California/cities/Lompoc-city", method = RequestMethod.GET)
	public String getCaliforniaCityLompoccity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "642524");
		return "CaliforniaCityLompoccity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Athens", method = RequestMethod.GET)
	public String getTennesseeMicroAthens(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11940");
		return "TennesseeMicroAthens";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Hartford-city", method = RequestMethod.GET)
	public String getConnecticutCityHartfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "937000");
		return "ConnecticutCityHartfordcity";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Brandon-city", method = RequestMethod.GET)
	public String getMississippiCityBrandoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2808300");
		return "MississippiCityBrandoncity";
	}   
@RequestMapping(value = "/states/Washington/cities/Bellevue-city", method = RequestMethod.GET)
	public String getWashingtonCityBellevuecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5305210");
		return "WashingtonCityBellevuecity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Elizabeth-city", method = RequestMethod.GET)
	public String getNew_JerseyCityElizabethcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3421000");
		return "New_JerseyCityElizabethcity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Hoover-city", method = RequestMethod.GET)
	public String getAlabamaCityHoovercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "135896");
		return "AlabamaCityHoovercity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Burke", method = RequestMethod.GET)
	public String getVirginiaCityBurke(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5111464");
		return "VirginiaCityBurke";
	}   
@RequestMapping(value = "/states/Alabama/counties/Colbert-County", method = RequestMethod.GET)
	public String getAlabamaCountyColbertCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1033");
		return "AlabamaCountyColbertCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Coffee-County", method = RequestMethod.GET)
	public String getAlabamaCountyCoffeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1031");
		return "AlabamaCountyCoffeeCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/Corpus-Christi", method = RequestMethod.GET)
	public String getTexasMetroCorpusChristi(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18580");
		return "TexasMetroCorpusChristi";
	}   
@RequestMapping(value = "/states/Georgia/cities/Peachtree-City-city", method = RequestMethod.GET)
	public String getGeorgiaCityPeachtreeCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1359724");
		return "GeorgiaCityPeachtreeCitycity";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/North-Wilkesboro", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroNorthWilkesboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35900");
		return "North_CarolinaMicroNorthWilkesboro";
	}   
@RequestMapping(value = "/states/New-York/cities/Albany-city", method = RequestMethod.GET)
	public String getNew_YorkCityAlbanycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3601000");
		return "New_YorkCityAlbanycity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Newberg-city", method = RequestMethod.GET)
	public String getOregonCityNewbergcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4152100");
		return "OregonCityNewbergcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Clarke-County", method = RequestMethod.GET)
	public String getAlabamaCountyClarkeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1025");
		return "AlabamaCountyClarkeCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Madison", method = RequestMethod.GET)
	public String getWisconsinMetroMadison(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31540");
		return "WisconsinMetroMadison";
	}   
@RequestMapping(value = "/states/Florida/cities/Vero-Beach-South", method = RequestMethod.GET)
	public String getFloridaCityVeroBeachSouth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1274200");
		return "FloridaCityVeroBeachSouth";
	}   
@RequestMapping(value = "/states/California/cities/Turlock-city", method = RequestMethod.GET)
	public String getCaliforniaCityTurlockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "680812");
		return "CaliforniaCityTurlockcity";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Albemarle", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroAlbemarle(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10620");
		return "North_CarolinaMicroAlbemarle";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Lebanon-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityLebanoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4242168");
		return "PennsylvaniaCityLebanoncity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Xenia-city", method = RequestMethod.GET)
	public String getOhioCityXeniacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3986772");
		return "OhioCityXeniacity";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Gettysburg", method = RequestMethod.GET)
	public String getPennsylvaniaMetroGettysburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23900");
		return "PennsylvaniaMetroGettysburg";
	}   
@RequestMapping(value = "/states/West-Virginia/micros/Clarksburg", method = RequestMethod.GET)
	public String getWest_VirginiaMicroClarksburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17220");
		return "West_VirginiaMicroClarksburg";
	}   
@RequestMapping(value = "/states/New-York/cities/Holtsville", method = RequestMethod.GET)
	public String getNew_YorkCityHoltsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3635254");
		return "New_YorkCityHoltsville";
	}   
@RequestMapping(value = "/states/Alabama/counties/Cullman-County", method = RequestMethod.GET)
	public String getAlabamaCountyCullmanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1043");
		return "AlabamaCountyCullmanCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Stoddard-County", method = RequestMethod.GET)
	public String getMissouriCountyStoddardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29207");
		return "MissouriCountyStoddardCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Stone-County", method = RequestMethod.GET)
	public String getMissouriCountyStoneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29209");
		return "MissouriCountyStoneCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Cottage-Grove-city", method = RequestMethod.GET)
	public String getMinnesotaCityCottageGrovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2713456");
		return "MinnesotaCityCottageGrovecity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/York-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityYorkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4287048");
		return "PennsylvaniaCityYorkcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Covington-County", method = RequestMethod.GET)
	public String getAlabamaCountyCovingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1039");
		return "AlabamaCountyCovingtonCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Menomonie", method = RequestMethod.GET)
	public String getWisconsinMicroMenomonie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32860");
		return "WisconsinMicroMenomonie";
	}   
@RequestMapping(value = "/states/Missouri/counties/Scott-County", method = RequestMethod.GET)
	public String getMissouriCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29201");
		return "MissouriCountyScottCounty";
	}   
@RequestMapping(value = "/states/California/cities/Arcadia-city", method = RequestMethod.GET)
	public String getCaliforniaCityArcadiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "602462");
		return "CaliforniaCityArcadiacity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Andover-city", method = RequestMethod.GET)
	public String getMinnesotaCityAndovercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2701486");
		return "MinnesotaCityAndovercity";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Silver-City", method = RequestMethod.GET)
	public String getNew_MexicoMicroSilverCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43500");
		return "New_MexicoMicroSilverCity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Merrillville-town", method = RequestMethod.GET)
	public String getIndianaCityMerrillvilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1848528");
		return "IndianaCityMerrillvilletown";
	}   
@RequestMapping(value = "/states/Maryland/cities/Ellicott-City", method = RequestMethod.GET)
	public String getMarylandCityEllicottCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2426000");
		return "MarylandCityEllicottCity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Apache-Junction-city", method = RequestMethod.GET)
	public String getArizonaCityApacheJunctioncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "402830");
		return "ArizonaCityApacheJunctioncity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Etowah-County", method = RequestMethod.GET)
	public String getAlabamaCountyEtowahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1055");
		return "AlabamaCountyEtowahCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Warren-County", method = RequestMethod.GET)
	public String getMissouriCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29219");
		return "MissouriCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Richmond-city", method = RequestMethod.GET)
	public String getVirginiaCityRichmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5167000");
		return "VirginiaCityRichmondcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Novi-city", method = RequestMethod.GET)
	public String getMichiganCityNovicity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2659440");
		return "MichiganCityNovicity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Escambia-County", method = RequestMethod.GET)
	public String getAlabamaCountyEscambiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1053");
		return "AlabamaCountyEscambiaCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Vernon-County", method = RequestMethod.GET)
	public String getMissouriCountyVernonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29217");
		return "MissouriCountyVernonCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Elmore-County", method = RequestMethod.GET)
	public String getAlabamaCountyElmoreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1051");
		return "AlabamaCountyElmoreCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Oakdale-city", method = RequestMethod.GET)
	public String getMinnesotaCityOakdalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2747680");
		return "MinnesotaCityOakdalecity";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Campbell-County", method = RequestMethod.GET)
	public String getWyomingCountyCampbellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56005");
		return "WyomingCountyCampbellCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Sandy-city", method = RequestMethod.GET)
	public String getUtahCitySandycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4967440");
		return "UtahCitySandycity";
	}   
@RequestMapping(value = "/states/Alabama/counties/DeKalb-County", method = RequestMethod.GET)
	public String getAlabamaCountyDeKalbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1049");
		return "AlabamaCountyDeKalbCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Texas-County", method = RequestMethod.GET)
	public String getMissouriCountyTexasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29215");
		return "MissouriCountyTexasCounty";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Albany-County", method = RequestMethod.GET)
	public String getWyomingCountyAlbanyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56001");
		return "WyomingCountyAlbanyCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Dallas-County", method = RequestMethod.GET)
	public String getAlabamaCountyDallasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1047");
		return "AlabamaCountyDallasCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Taney-County", method = RequestMethod.GET)
	public String getMissouriCountyTaneyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29213");
		return "MissouriCountyTaneyCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Middletown-city", method = RequestMethod.GET)
	public String getConnecticutCityMiddletowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "947290");
		return "ConnecticutCityMiddletowncity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Dale-County", method = RequestMethod.GET)
	public String getAlabamaCountyDaleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1045");
		return "AlabamaCountyDaleCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Franklin-County", method = RequestMethod.GET)
	public String getKansasCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20059");
		return "KansasCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Ford-County", method = RequestMethod.GET)
	public String getKansasCountyFordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20057");
		return "KansasCountyFordCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Finney-County", method = RequestMethod.GET)
	public String getKansasCountyFinneyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20055");
		return "KansasCountyFinneyCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Guayanilla-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyGuayanillaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72059");
		return "Puerto_RicoCountyGuayanillaMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Guayama-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyGuayamaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72057");
		return "Puerto_RicoCountyGuayamaMunicipio";
	}   
@RequestMapping(value = "/states/Montana/micros/Helena", method = RequestMethod.GET)
	public String getMontanaMicroHelena(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25740");
		return "MontanaMicroHelena";
	}   
@RequestMapping(value = "/states/Iowa/counties/Fayette-County", method = RequestMethod.GET)
	public String getIowaCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19065");
		return "IowaCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Superior-city", method = RequestMethod.GET)
	public String getWisconsinCitySuperiorcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5578650");
		return "WisconsinCitySuperiorcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Geneva-County", method = RequestMethod.GET)
	public String getAlabamaCountyGenevaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1061");
		return "AlabamaCountyGenevaCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Fajardo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyFajardoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72053");
		return "Puerto_RicoCountyFajardoMunicipio";
	}   
@RequestMapping(value = "/states/California/cities/Dinuba-city", method = RequestMethod.GET)
	public String getCaliforniaCityDinubacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "619318");
		return "CaliforniaCityDinubacity";
	}   
@RequestMapping(value = "/states/California/cities/Victorville-city", method = RequestMethod.GET)
	public String getCaliforniaCityVictorvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "682590");
		return "CaliforniaCityVictorvillecity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Dubuque-County", method = RequestMethod.GET)
	public String getIowaCountyDubuqueCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19061");
		return "IowaCountyDubuqueCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Dorado-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyDoradoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72051");
		return "Puerto_RicoCountyDoradoMunicipio";
	}   
@RequestMapping(value = "/states/Maryland/metros/Cumberland", method = RequestMethod.GET)
	public String getMarylandMetroCumberland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19060");
		return "MarylandMetroCumberland";
	}   
@RequestMapping(value = "/states/Ohio/cities/Dublin-city", method = RequestMethod.GET)
	public String getOhioCityDublincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3922694");
		return "OhioCityDublincity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Franklin-County", method = RequestMethod.GET)
	public String getAlabamaCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1059");
		return "AlabamaCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/California/cities/Willowbrook", method = RequestMethod.GET)
	public String getCaliforniaCityWillowbrook(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "685614");
		return "CaliforniaCityWillowbrook";
	}   
@RequestMapping(value = "/states/Texas/cities/Hurst-city", method = RequestMethod.GET)
	public String getTexasCityHurstcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4835576");
		return "TexasCityHurstcity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Montgomery-County", method = RequestMethod.GET)
	public String getVirginiaCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51121");
		return "VirginiaCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/California/cities/Berkeley-city", method = RequestMethod.GET)
	public String getCaliforniaCityBerkeleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "606000");
		return "CaliforniaCityBerkeleycity";
	}   
@RequestMapping(value = "/states/Texas/metros/Amarillo", method = RequestMethod.GET)
	public String getTexasMetroAmarillo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11100");
		return "TexasMetroAmarillo";
	}   
@RequestMapping(value = "/states/Kansas/counties/Ellis-County", method = RequestMethod.GET)
	public String getKansasCountyEllisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20051");
		return "KansasCountyEllisCounty";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Southaven-city", method = RequestMethod.GET)
	public String getMississippiCitySouthavencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2869280");
		return "MississippiCitySouthavencity";
	}   
@RequestMapping(value = "/states/Kansas/micros/Emporia", method = RequestMethod.GET)
	public String getKansasMicroEmporia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21380");
		return "KansasMicroEmporia";
	}   
@RequestMapping(value = "/states/Florida/cities/Sunrise-city", method = RequestMethod.GET)
	public String getFloridaCitySunrisecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1269700");
		return "FloridaCitySunrisecity";
	}   
@RequestMapping(value = "/states/District-of-Columbia/cities/Washington-city", method = RequestMethod.GET)
	public String getDistrict_of_ColumbiaCityWashingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1150000");
		return "District_of_ColumbiaCityWashingtoncity";
	}   
@RequestMapping(value = "/states/California/metros/Yuba-City", method = RequestMethod.GET)
	public String getCaliforniaMetroYubaCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49700");
		return "CaliforniaMetroYubaCity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Humacao-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyHumacaoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72069");
		return "Puerto_RicoCountyHumacaoMunicipio";
	}   
@RequestMapping(value = "/states/Alabama/counties/Lauderdale-County", method = RequestMethod.GET)
	public String getAlabamaCountyLauderdaleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1077");
		return "AlabamaCountyLauderdaleCounty";
	}   
@RequestMapping(value = "/states/Nevada/counties/Washoe-County", method = RequestMethod.GET)
	public String getNevadaCountyWashoeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32031");
		return "NevadaCountyWashoeCounty";
	}   
@RequestMapping(value = "/states/Oregon/metros/Grants-Pass", method = RequestMethod.GET)
	public String getOregonMetroGrantsPass(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24420");
		return "OregonMetroGrantsPass";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Hatillo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyHatilloMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72065");
		return "Puerto_RicoCountyHatilloMunicipio";
	}   
@RequestMapping(value = "/states/Florida/cities/Lake-Worth-city", method = RequestMethod.GET)
	public String getFloridaCityLakeWorthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239075");
		return "FloridaCityLakeWorthcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Jefferson-County", method = RequestMethod.GET)
	public String getAlabamaCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1073");
		return "AlabamaCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Gurabo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyGuraboMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72063");
		return "Puerto_RicoCountyGuraboMunicipio";
	}   
@RequestMapping(value = "/states/Texas/cities/College-Station-city", method = RequestMethod.GET)
	public String getTexasCityCollegeStationcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4815976");
		return "TexasCityCollegeStationcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Jackson-County", method = RequestMethod.GET)
	public String getAlabamaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1071");
		return "AlabamaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Guaynabo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyGuaynaboMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72061");
		return "Puerto_RicoCountyGuaynaboMunicipio";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities/Pawtucket-city", method = RequestMethod.GET)
	public String getRhode_IslandCityPawtucketcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4454640");
		return "Rhode_IslandCityPawtucketcity";
	}   
@RequestMapping(value = "/states/North-Dakota/cities/West-Fargo-city", method = RequestMethod.GET)
	public String getNorth_DakotaCityWestFargocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3884780");
		return "North_DakotaCityWestFargocity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Houston-County", method = RequestMethod.GET)
	public String getAlabamaCountyHoustonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1069");
		return "AlabamaCountyHoustonCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Orange-County", method = RequestMethod.GET)
	public String getVirginiaCountyOrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51137");
		return "VirginiaCountyOrangeCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Shoreline-city", method = RequestMethod.GET)
	public String getWashingtonCityShorelinecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5363960");
		return "WashingtonCityShorelinecity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Geary-County", method = RequestMethod.GET)
	public String getKansasCountyGearyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20061");
		return "KansasCountyGearyCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Page-County", method = RequestMethod.GET)
	public String getVirginiaCountyPageCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51139");
		return "VirginiaCountyPageCounty";
	}   
@RequestMapping(value = "/states/Georgia/micros/Douglas", method = RequestMethod.GET)
	public String getGeorgiaMicroDouglas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20060");
		return "GeorgiaMicroDouglas";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Taos", method = RequestMethod.GET)
	public String getNew_MexicoMicroTaos(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45340");
		return "New_MexicoMicroTaos";
	}   
@RequestMapping(value = "/states/Indiana/cities/Fort-Wayne-city", method = RequestMethod.GET)
	public String getIndianaCityFortWaynecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1825000");
		return "IndianaCityFortWaynecity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Urbandale-city", method = RequestMethod.GET)
	public String getIowaCityUrbandalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1979950");
		return "IowaCityUrbandalecity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Willoughby-city", method = RequestMethod.GET)
	public String getOhioCityWilloughbycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3985484");
		return "OhioCityWilloughbycity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Bay-City-city", method = RequestMethod.GET)
	public String getMichiganCityBayCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2606020");
		return "MichiganCityBayCitycity";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Dover-city", method = RequestMethod.GET)
	public String getNew_HampshireCityDovercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3318820");
		return "New_HampshireCityDovercity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Dallas-County", method = RequestMethod.GET)
	public String getIowaCountyDallasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19049");
		return "IowaCountyDallasCounty";
	}   
@RequestMapping(value = "/states/Rhode-Island/counties/Newport-County", method = RequestMethod.GET)
	public String getRhode_IslandCountyNewportCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44005");
		return "Rhode_IslandCountyNewportCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Crawford-County", method = RequestMethod.GET)
	public String getKansasCountyCrawfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20037");
		return "KansasCountyCrawfordCounty";
	}   
@RequestMapping(value = "/states/Rhode-Island/counties/Providence-County", method = RequestMethod.GET)
	public String getRhode_IslandCountyProvidenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44007");
		return "Rhode_IslandCountyProvidenceCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Jeffersonville-city", method = RequestMethod.GET)
	public String getIndianaCityJeffersonvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1838358");
		return "IndianaCityJeffersonvillecity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Cowley-County", method = RequestMethod.GET)
	public String getKansasCountyCowleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20035");
		return "KansasCountyCowleyCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Clinton-County", method = RequestMethod.GET)
	public String getIowaCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19045");
		return "IowaCountyClintonCounty";
	}   
@RequestMapping(value = "/states/Rhode-Island/counties/Bristol-County", method = RequestMethod.GET)
	public String getRhode_IslandCountyBristolCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44001");
		return "Rhode_IslandCountyBristolCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Port-Chester-village", method = RequestMethod.GET)
	public String getNew_YorkCityPortChestervillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3659223");
		return "New_YorkCityPortChestervillage";
	}   
@RequestMapping(value = "/states/Rhode-Island/counties/Kent-County", method = RequestMethod.GET)
	public String getRhode_IslandCountyKentCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44003");
		return "Rhode_IslandCountyKentCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Euclid-city", method = RequestMethod.GET)
	public String getOhioCityEuclidcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3925704");
		return "OhioCityEuclidcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Macon-County", method = RequestMethod.GET)
	public String getAlabamaCountyMaconCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1087");
		return "AlabamaCountyMaconCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Lajas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyLajasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72079");
		return "Puerto_RicoCountyLajasMunicipio";
	}   
@RequestMapping(value = "/states/Ohio/micros/Marion", method = RequestMethod.GET)
	public String getOhioMicroMarion(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32020");
		return "OhioMicroMarion";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Juncos-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyJuncosMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72077");
		return "Puerto_RicoCountyJuncosMunicipio";
	}   
@RequestMapping(value = "/states/Utah/micros/Heber", method = RequestMethod.GET)
	public String getUtahMicroHeber(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25720");
		return "UtahMicroHeber";
	}   
@RequestMapping(value = "/states/Rhode-Island/counties/Washington-County", method = RequestMethod.GET)
	public String getRhode_IslandCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44009");
		return "Rhode_IslandCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Limestone-County", method = RequestMethod.GET)
	public String getAlabamaCountyLimestoneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1083");
		return "AlabamaCountyLimestoneCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Juana-Diaz-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyJuanaDiazMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72075");
		return "Puerto_RicoCountyJuanaDiazMunicipio";
	}   
@RequestMapping(value = "/states/Texas/cities/Colleyville-city", method = RequestMethod.GET)
	public String getTexasCityColleyvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4815988");
		return "TexasCityColleyvillecity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Lee-County", method = RequestMethod.GET)
	public String getAlabamaCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1081");
		return "AlabamaCountyLeeCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Kyle-city", method = RequestMethod.GET)
	public String getTexasCityKylecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4839952");
		return "TexasCityKylecity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Isabela-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyIsabelaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72071");
		return "Puerto_RicoCountyIsabelaMunicipio";
	}   
@RequestMapping(value = "/states/Arizona/cities/San-Tan-Valley", method = RequestMethod.GET)
	public String getArizonaCitySanTanValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "464210");
		return "ArizonaCitySanTanValley";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Jacksonville-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityJacksonvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3734200");
		return "North_CarolinaCityJacksonvillecity";
	}   
@RequestMapping(value = "/states/Nevada/counties/Nye-County", method = RequestMethod.GET)
	public String getNevadaCountyNyeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32023");
		return "NevadaCountyNyeCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Pittsylvania-County", method = RequestMethod.GET)
	public String getVirginiaCountyPittsylvaniaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51143");
		return "VirginiaCountyPittsylvaniaCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Lawrence-County", method = RequestMethod.GET)
	public String getAlabamaCountyLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1079");
		return "AlabamaCountyLawrenceCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Powhatan-County", method = RequestMethod.GET)
	public String getVirginiaCountyPowhatanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51145");
		return "VirginiaCountyPowhatanCounty";
	}   
@RequestMapping(value = "/states/Georgia/metros/Valdosta", method = RequestMethod.GET)
	public String getGeorgiaMetroValdosta(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46660");
		return "GeorgiaMetroValdosta";
	}   
@RequestMapping(value = "/states/Virginia/counties/Prince-Edward-County", method = RequestMethod.GET)
	public String getVirginiaCountyPrinceEdwardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51147");
		return "VirginiaCountyPrinceEdwardCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Prince-George-County", method = RequestMethod.GET)
	public String getVirginiaCountyPrinceGeorgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51149");
		return "VirginiaCountyPrinceGeorgeCounty";
	}   
@RequestMapping(value = "/states/Montana/metros/Billings", method = RequestMethod.GET)
	public String getMontanaMetroBillings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13740");
		return "MontanaMetroBillings";
	}   
@RequestMapping(value = "/states/Illinois/cities/Palatine-village", method = RequestMethod.GET)
	public String getIllinoisCityPalatinevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1757225");
		return "IllinoisCityPalatinevillage";
	}   
@RequestMapping(value = "/states/Alabama/counties/Marengo-County", method = RequestMethod.GET)
	public String getAlabamaCountyMarengoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1091");
		return "AlabamaCountyMarengoCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Douglas-County", method = RequestMethod.GET)
	public String getKansasCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20045");
		return "KansasCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Des-Moines-County", method = RequestMethod.GET)
	public String getIowaCountyDesMoinesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19057");
		return "IowaCountyDesMoinesCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Monroe-County", method = RequestMethod.GET)
	public String getAlabamaCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1099");
		return "AlabamaCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Luquillo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyLuquilloMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72089");
		return "Puerto_RicoCountyLuquilloMunicipio";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/MilwaukeeWaukeshaWest-Allis", method = RequestMethod.GET)
	public String getWisconsinMetroMilwaukeeWaukeshaWestAllis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33340");
		return "WisconsinMetroMilwaukeeWaukeshaWestAllis";
	}   
@RequestMapping(value = "/states/Alabama/counties/Mobile-County", method = RequestMethod.GET)
	public String getAlabamaCountyMobileCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1097");
		return "AlabamaCountyMobileCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Loiza-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyLoizaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72087");
		return "Puerto_RicoCountyLoizaMunicipio";
	}   
@RequestMapping(value = "/states/Oregon/cities/Salem-city", method = RequestMethod.GET)
	public String getOregonCitySalemcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4164900");
		return "OregonCitySalemcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Marshall-County", method = RequestMethod.GET)
	public String getAlabamaCountyMarshallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1095");
		return "AlabamaCountyMarshallCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Las-Piedras-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyLasPiedrasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72085");
		return "Puerto_RicoCountyLasPiedrasMunicipio";
	}   
@RequestMapping(value = "/states/California/cities/San-Pablo-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanPablocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668294");
		return "CaliforniaCitySanPablocity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Marion-County", method = RequestMethod.GET)
	public String getAlabamaCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1093");
		return "AlabamaCountyMarionCounty";
	}   
@RequestMapping(value = "/states/California/cities/Ramona", method = RequestMethod.GET)
	public String getCaliforniaCityRamona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659346");
		return "CaliforniaCityRamona";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Lares-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyLaresMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72081");
		return "Puerto_RicoCountyLaresMunicipio";
	}   
@RequestMapping(value = "/states/Virginia/counties/Prince-William-County", method = RequestMethod.GET)
	public String getVirginiaCountyPrinceWilliamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51153");
		return "VirginiaCountyPrinceWilliamCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Pulaski-County", method = RequestMethod.GET)
	public String getVirginiaCountyPulaskiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51155");
		return "VirginiaCountyPulaskiCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Madison-County", method = RequestMethod.GET)
	public String getAlabamaCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1089");
		return "AlabamaCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Derby-city", method = RequestMethod.GET)
	public String getKansasCityDerbycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2017800");
		return "KansasCityDerbycity";
	}   
@RequestMapping(value = "/states/South-Dakota/micros/Watertown", method = RequestMethod.GET)
	public String getSouth_DakotaMicroWatertown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47980");
		return "South_DakotaMicroWatertown";
	}   
@RequestMapping(value = "/states/Michigan/cities/Forest-Hills", method = RequestMethod.GET)
	public String getMichiganCityForestHills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2629580");
		return "MichiganCityForestHills";
	}   
@RequestMapping(value = "/states/Texas/metros/AustinRound-Rock", method = RequestMethod.GET)
	public String getTexasMetroAustinRoundRock(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12420");
		return "TexasMetroAustinRoundRock";
	}   
@RequestMapping(value = "/states/Nevada/counties/Lyon-County", method = RequestMethod.GET)
	public String getNevadaCountyLyonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32019");
		return "NevadaCountyLyonCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Carroll-County", method = RequestMethod.GET)
	public String getIowaCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19027");
		return "IowaCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Butler-County", method = RequestMethod.GET)
	public String getKansasCountyButlerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20015");
		return "KansasCountyButlerCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/El-Paso-city", method = RequestMethod.GET)
	public String getTexasCityElPasocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4824000");
		return "TexasCityElPasocity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Vernon-Hills-village", method = RequestMethod.GET)
	public String getIllinoisCityVernonHillsvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1777694");
		return "IllinoisCityVernonHillsvillage";
	}   
@RequestMapping(value = "/states/Texas/metros/El-Paso", method = RequestMethod.GET)
	public String getTexasMetroElPaso(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21340");
		return "TexasMetroElPaso";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Murray", method = RequestMethod.GET)
	public String getKentuckyMicroMurray(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34660");
		return "KentuckyMicroMurray";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Lake-Charles-city", method = RequestMethod.GET)
	public String getLouisianaCityLakeCharlescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2241155");
		return "LouisianaCityLakeCharlescity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Buena-Vista-County", method = RequestMethod.GET)
	public String getIowaCountyBuenaVistaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19021");
		return "IowaCountyBuenaVistaCounty";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Starkville-city", method = RequestMethod.GET)
	public String getMississippiCityStarkvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2870240");
		return "MississippiCityStarkvillecity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Moca-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyMocaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72099");
		return "Puerto_RicoCountyMocaMunicipio";
	}   
@RequestMapping(value = "/states/Florida/cities/Margate-city", method = RequestMethod.GET)
	public String getFloridaCityMargatecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1243125");
		return "FloridaCityMargatecity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Minnetonka-city", method = RequestMethod.GET)
	public String getMinnesotaCityMinnetonkacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2743252");
		return "MinnesotaCityMinnetonkacity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Mayaguez-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyMayaguezMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72097");
		return "Puerto_RicoCountyMayaguezMunicipio";
	}   
@RequestMapping(value = "/states/Kansas/micros/Hays", method = RequestMethod.GET)
	public String getKansasMicroHays(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25700");
		return "KansasMicroHays";
	}   
@RequestMapping(value = "/states/Nevada/counties/Douglas-County", method = RequestMethod.GET)
	public String getNevadaCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32005");
		return "NevadaCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Roanoke-County", method = RequestMethod.GET)
	public String getVirginiaCountyRoanokeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51161");
		return "VirginiaCountyRoanokeCounty";
	}   
@RequestMapping(value = "/states/Nevada/counties/Clark-County", method = RequestMethod.GET)
	public String getNevadaCountyClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32003");
		return "NevadaCountyClarkCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Rockbridge-County", method = RequestMethod.GET)
	public String getVirginiaCountyRockbridgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51163");
		return "VirginiaCountyRockbridgeCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Manati-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyManatiMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72091");
		return "Puerto_RicoCountyManatiMunicipio";
	}   
@RequestMapping(value = "/states/California/cities/Lakeside", method = RequestMethod.GET)
	public String getCaliforniaCityLakeside(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639766");
		return "CaliforniaCityLakeside";
	}   
@RequestMapping(value = "/states/Nevada/counties/Churchill-County", method = RequestMethod.GET)
	public String getNevadaCountyChurchillCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32001");
		return "NevadaCountyChurchillCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Rockingham-County", method = RequestMethod.GET)
	public String getVirginiaCountyRockinghamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51165");
		return "VirginiaCountyRockinghamCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Russell-County", method = RequestMethod.GET)
	public String getVirginiaCountyRussellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51167");
		return "VirginiaCountyRussellCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Scott-County", method = RequestMethod.GET)
	public String getVirginiaCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51169");
		return "VirginiaCountyScottCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Shelbyville-city", method = RequestMethod.GET)
	public String getTennesseeCityShelbyvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4767760");
		return "TennesseeCityShelbyvillecity";
	}   
@RequestMapping(value = "/states/Nevada/counties/Elko-County", method = RequestMethod.GET)
	public String getNevadaCountyElkoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32007");
		return "NevadaCountyElkoCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Malden-city", method = RequestMethod.GET)
	public String getMassachusettsCityMaldencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2537875");
		return "MassachusettsCityMaldencity";
	}   
@RequestMapping(value = "/states/New-York/cities/Huntington-Station", method = RequestMethod.GET)
	public String getNew_YorkCityHuntingtonStation(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3637044");
		return "New_YorkCityHuntingtonStation";
	}   
@RequestMapping(value = "/states/Iowa/counties/Cerro-Gordo-County", method = RequestMethod.GET)
	public String getIowaCountyCerroGordoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19033");
		return "IowaCountyCerroGordoCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Cherokee-County", method = RequestMethod.GET)
	public String getKansasCountyCherokeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20021");
		return "KansasCountyCherokeeCounty";
	}   
@RequestMapping(value = "/states/Alabama/metros/Dothan", method = RequestMethod.GET)
	public String getAlabamaMetroDothan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20020");
		return "AlabamaMetroDothan";
	}   
@RequestMapping(value = "/states/Florida/metros/TampaSt-PetersburgClearwater", method = RequestMethod.GET)
	public String getFloridaMetroTampaStPetersburgClearwater(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45300");
		return "FloridaMetroTampaStPetersburgClearwater";
	}   
@RequestMapping(value = "/states/Connecticut/metros/NorwichNew-London", method = RequestMethod.GET)
	public String getConnecticutMetroNorwichNewLondon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35980");
		return "ConnecticutMetroNorwichNewLondon";
	}   
@RequestMapping(value = "/states/New-York/cities/Baldwin", method = RequestMethod.GET)
	public String getNew_YorkCityBaldwin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3604143");
		return "New_YorkCityBaldwin";
	}   
@RequestMapping(value = "/states/California/cities/Culver-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityCulverCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "617568");
		return "CaliforniaCityCulverCitycity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Shenandoah-County", method = RequestMethod.GET)
	public String getVirginiaCountyShenandoahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51171");
		return "VirginiaCountyShenandoahCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Keller-city", method = RequestMethod.GET)
	public String getTexasCityKellercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4838632");
		return "TexasCityKellercity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Smyth-County", method = RequestMethod.GET)
	public String getVirginiaCountySmythCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51173");
		return "VirginiaCountySmythCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Fort-Collins-city", method = RequestMethod.GET)
	public String getColoradoCityFortCollinscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "827425");
		return "ColoradoCityFortCollinscity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Spotsylvania-County", method = RequestMethod.GET)
	public String getVirginiaCountySpotsylvaniaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51177");
		return "VirginiaCountySpotsylvaniaCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Stafford-County", method = RequestMethod.GET)
	public String getVirginiaCountyStaffordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51179");
		return "VirginiaCountyStaffordCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/West-Linn-city", method = RequestMethod.GET)
	public String getOregonCityWestLinncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4180150");
		return "OregonCityWestLinncity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Kankakee-city", method = RequestMethod.GET)
	public String getIllinoisCityKankakeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1738934");
		return "IllinoisCityKankakeecity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Arnold-city", method = RequestMethod.GET)
	public String getMissouriCityArnoldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2901972");
		return "MissouriCityArnoldcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Birmingham-city", method = RequestMethod.GET)
	public String getMichiganCityBirminghamcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2608640");
		return "MichiganCityBirminghamcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Brunswick-city", method = RequestMethod.GET)
	public String getOhioCityBrunswickcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3909680");
		return "OhioCityBrunswickcity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Plainfield-town", method = RequestMethod.GET)
	public String getIndianaCityPlainfieldtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1860246");
		return "IndianaCityPlainfieldtown";
	}   
@RequestMapping(value = "/states/Texas/micros/Uvalde", method = RequestMethod.GET)
	public String getTexasMicroUvalde(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46620");
		return "TexasMicroUvalde";
	}   
@RequestMapping(value = "/states/California/cities/Corcoran-city", method = RequestMethod.GET)
	public String getCaliforniaCityCorcorancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "616224");
		return "CaliforniaCityCorcorancity";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Glasgow", method = RequestMethod.GET)
	public String getKentuckyMicroGlasgow(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23980");
		return "KentuckyMicroGlasgow";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Lewisburg", method = RequestMethod.GET)
	public String getTennesseeMicroLewisburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30280");
		return "TennesseeMicroLewisburg";
	}   
@RequestMapping(value = "/states/Arizona/cities/Sierra-Vista-city", method = RequestMethod.GET)
	public String getArizonaCitySierraVistacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "466820");
		return "ArizonaCitySierraVistacity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Tazewell-County", method = RequestMethod.GET)
	public String getVirginiaCountyTazewellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51185");
		return "VirginiaCountyTazewellCounty";
	}   
@RequestMapping(value = "/states/Maine/cities/Portland-city", method = RequestMethod.GET)
	public String getMaineCityPortlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2360545");
		return "MaineCityPortlandcity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Warren-County", method = RequestMethod.GET)
	public String getVirginiaCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51187");
		return "VirginiaCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Needham", method = RequestMethod.GET)
	public String getMassachusettsCityNeedham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2544140");
		return "MassachusettsCityNeedham";
	}   
@RequestMapping(value = "/states/California/cities/Gilroy-city", method = RequestMethod.GET)
	public String getCaliforniaCityGilroycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "629504");
		return "CaliforniaCityGilroycity";
	}   
@RequestMapping(value = "/states/Texas/micros/Big-Spring", method = RequestMethod.GET)
	public String getTexasMicroBigSpring(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13700");
		return "TexasMicroBigSpring";
	}   
@RequestMapping(value = "/states/Texas/cities/The-Colony-city", method = RequestMethod.GET)
	public String getTexasCityTheColonycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4872530");
		return "TexasCityTheColonycity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Boone-County", method = RequestMethod.GET)
	public String getIowaCountyBooneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19015");
		return "IowaCountyBooneCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Bremer-County", method = RequestMethod.GET)
	public String getIowaCountyBremerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19017");
		return "IowaCountyBremerCounty";
	}   
@RequestMapping(value = "/states/Iowa/metros/WaterlooCedar-Falls", method = RequestMethod.GET)
	public String getIowaMetroWaterlooCedarFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47940");
		return "IowaMetroWaterlooCedarFalls";
	}   
@RequestMapping(value = "/states/Iowa/counties/Benton-County", method = RequestMethod.GET)
	public String getIowaCountyBentonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19011");
		return "IowaCountyBentonCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/cities/Sioux-Falls-city", method = RequestMethod.GET)
	public String getSouth_DakotaCitySiouxFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4659020");
		return "South_DakotaCitySiouxFallscity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Black-Hawk-County", method = RequestMethod.GET)
	public String getIowaCountyBlackHawkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19013");
		return "IowaCountyBlackHawkCounty";
	}   
@RequestMapping(value = "/states/Colorado/metros/Fort-Collins", method = RequestMethod.GET)
	public String getColoradoMetroFortCollins(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22660");
		return "ColoradoMetroFortCollins";
	}   
@RequestMapping(value = "/states/Georgia/cities/Carrollton-city", method = RequestMethod.GET)
	public String getGeorgiaCityCarrolltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1313492");
		return "GeorgiaCityCarrolltoncity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Barton-County", method = RequestMethod.GET)
	public String getKansasCountyBartonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20009");
		return "KansasCountyBartonCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Washington-County", method = RequestMethod.GET)
	public String getVirginiaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51191");
		return "VirginiaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Wise-County", method = RequestMethod.GET)
	public String getVirginiaCountyWiseCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51195");
		return "VirginiaCountyWiseCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Arvada-city", method = RequestMethod.GET)
	public String getColoradoCityArvadacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "803455");
		return "ColoradoCityArvadacity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Wythe-County", method = RequestMethod.GET)
	public String getVirginiaCountyWytheCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51197");
		return "VirginiaCountyWytheCounty";
	}   
@RequestMapping(value = "/states/California/cities/Yuba-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityYubaCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "686972");
		return "CaliforniaCityYubaCitycity";
	}   
@RequestMapping(value = "/states/Ohio/cities/North-Ridgeville-city", method = RequestMethod.GET)
	public String getOhioCityNorthRidgevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3956966");
		return "OhioCityNorthRidgevillecity";
	}   
@RequestMapping(value = "/states/Virginia/counties/York-County", method = RequestMethod.GET)
	public String getVirginiaCountyYorkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51199");
		return "VirginiaCountyYorkCounty";
	}   
@RequestMapping(value = "/states/Georgia/micros/Milledgeville", method = RequestMethod.GET)
	public String getGeorgiaMicroMilledgeville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33300");
		return "GeorgiaMicroMilledgeville";
	}   
@RequestMapping(value = "/states/Florida/cities/Clearwater-city", method = RequestMethod.GET)
	public String getFloridaCityClearwatercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1212875");
		return "FloridaCityClearwatercity";
	}   
@RequestMapping(value = "/states/Iowa/metros/Sioux-City", method = RequestMethod.GET)
	public String getIowaMetroSiouxCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43580");
		return "IowaMetroSiouxCity";
	}   
@RequestMapping(value = "/states/Florida/cities/Tamiami", method = RequestMethod.GET)
	public String getFloridaCityTamiami(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1270700");
		return "FloridaCityTamiami";
	}   
@RequestMapping(value = "/states/Iowa/counties/Buchanan-County", method = RequestMethod.GET)
	public String getIowaCountyBuchananCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19019");
		return "IowaCountyBuchananCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Elgin-city", method = RequestMethod.GET)
	public String getIllinoisCityElgincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1723074");
		return "IllinoisCityElgincity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Salem-city", method = RequestMethod.GET)
	public String getMassachusettsCitySalemcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2559105");
		return "MassachusettsCitySalemcity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Woburn-city", method = RequestMethod.GET)
	public String getMassachusettsCityWoburncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2581035");
		return "MassachusettsCityWoburncity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Carter-County", method = RequestMethod.GET)
	public String getTennesseeCountyCarterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47019");
		return "TennesseeCountyCarterCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Navarro-County", method = RequestMethod.GET)
	public String getTexasCountyNavarroCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48349");
		return "TexasCountyNavarroCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Altus", method = RequestMethod.GET)
	public String getOklahomaMicroAltus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11060");
		return "OklahomaMicroAltus";
	}   
@RequestMapping(value = "/states/California/cities/Merced-city", method = RequestMethod.GET)
	public String getCaliforniaCityMercedcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "646898");
		return "CaliforniaCityMercedcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Springfield-city", method = RequestMethod.GET)
	public String getIllinoisCitySpringfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1772000");
		return "IllinoisCitySpringfieldcity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Carroll-County", method = RequestMethod.GET)
	public String getTennesseeCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47017");
		return "TennesseeCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Nacogdoches-County", method = RequestMethod.GET)
	public String getTexasCountyNacogdochesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48347");
		return "TexasCountyNacogdochesCounty";
	}   
@RequestMapping(value = "/states/Idaho/micros/Burley", method = RequestMethod.GET)
	public String getIdahoMicroBurley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15420");
		return "IdahoMicroBurley";
	}   
@RequestMapping(value = "/states/California/cities/Newark-city", method = RequestMethod.GET)
	public String getCaliforniaCityNewarkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "650916");
		return "CaliforniaCityNewarkcity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/McKinley-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyMcKinleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35031");
		return "New_MexicoCountyMcKinleyCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Blaine-city", method = RequestMethod.GET)
	public String getMinnesotaCityBlainecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2706382");
		return "MinnesotaCityBlainecity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Muscatine-city", method = RequestMethod.GET)
	public String getIowaCityMuscatinecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1955110");
		return "IowaCityMuscatinecity";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Metairie", method = RequestMethod.GET)
	public String getLouisianaCityMetairie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2250115");
		return "LouisianaCityMetairie";
	}   
@RequestMapping(value = "/states/California/cities/Highland-city", method = RequestMethod.GET)
	public String getCaliforniaCityHighlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "633588");
		return "CaliforniaCityHighlandcity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Rio-Arriba-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyRioArribaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35039");
		return "New_MexicoCountyRioArribaCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Monroeville-municipality", method = RequestMethod.GET)
	public String getPennsylvaniaCityMonroevillemunicipality(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4250528");
		return "PennsylvaniaCityMonroevillemunicipality";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Otero-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyOteroCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35035");
		return "New_MexicoCountyOteroCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Lima-city", method = RequestMethod.GET)
	public String getOhioCityLimacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3943554");
		return "OhioCityLimacity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Campbell-County", method = RequestMethod.GET)
	public String getTennesseeCountyCampbellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47013");
		return "TennesseeCountyCampbellCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Little-Rock-city", method = RequestMethod.GET)
	public String getArkansasCityLittleRockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "541000");
		return "ArkansasCityLittleRockcity";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Las-Cruces-city", method = RequestMethod.GET)
	public String getNew_MexicoCityLasCrucescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3539380");
		return "New_MexicoCityLasCrucescity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Bradley-County", method = RequestMethod.GET)
	public String getTennesseeCountyBradleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47011");
		return "TennesseeCountyBradleyCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Moore-County", method = RequestMethod.GET)
	public String getTexasCountyMooreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48341");
		return "TexasCountyMooreCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Montgomery-city", method = RequestMethod.GET)
	public String getAlabamaCityMontgomerycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "151000");
		return "AlabamaCityMontgomerycity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Blount-County", method = RequestMethod.GET)
	public String getTennesseeCountyBlountCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47009");
		return "TennesseeCountyBlountCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Montgomery-County", method = RequestMethod.GET)
	public String getTexasCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48339");
		return "TexasCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Bloomsburg-Berwick", method = RequestMethod.GET)
	public String getPennsylvaniaMetroBloomsburgBerwick(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14100");
		return "PennsylvaniaMetroBloomsburgBerwick";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Bedford-County", method = RequestMethod.GET)
	public String getTennesseeCountyBedfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47003");
		return "TennesseeCountyBedfordCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/San-AntonioNew-Braunfels", method = RequestMethod.GET)
	public String getTexasMetroSanAntonioNewBraunfels(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41700");
		return "TexasMetroSanAntonioNewBraunfels";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Natchez", method = RequestMethod.GET)
	public String getMississippiMicroNatchez(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35020");
		return "MississippiMicroNatchez";
	}   
@RequestMapping(value = "/states/Illinois/cities/Lake-Zurich-village", method = RequestMethod.GET)
	public String getIllinoisCityLakeZurichvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1741742");
		return "IllinoisCityLakeZurichvillage";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Grants", method = RequestMethod.GET)
	public String getNew_MexicoMicroGrants(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24380");
		return "New_MexicoMicroGrants";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Luna-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyLunaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35029");
		return "New_MexicoCountyLunaCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Lincoln-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35027");
		return "New_MexicoCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Junction-City-city", method = RequestMethod.GET)
	public String getKansasCityJunctionCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2035750");
		return "KansasCityJunctionCitycity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Lea-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyLeaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35025");
		return "New_MexicoCountyLeaCounty";
	}   
@RequestMapping(value = "/states/New-York/metros/Kingston", method = RequestMethod.GET)
	public String getNew_YorkMetroKingston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28740");
		return "New_YorkMetroKingston";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Anderson-County", method = RequestMethod.GET)
	public String getTennesseeCountyAndersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47001");
		return "TennesseeCountyAndersonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Mauldin-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityMauldincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4545115");
		return "South_CarolinaCityMauldincity";
	}   
@RequestMapping(value = "/states/Texas/counties/Milam-County", method = RequestMethod.GET)
	public String getTexasCountyMilamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48331");
		return "TexasCountyMilamCounty";
	}   
@RequestMapping(value = "/states/Ohio/metros/Youngstown-Warren-Boardman", method = RequestMethod.GET)
	public String getOhioMetroYoungstownWarrenBoardman(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49660");
		return "OhioMetroYoungstownWarrenBoardman";
	}   
@RequestMapping(value = "/states/Montana/cities/Missoula-city", method = RequestMethod.GET)
	public String getMontanaCityMissoulacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3050200");
		return "MontanaCityMissoulacity";
	}   
@RequestMapping(value = "/states/Texas/counties/Midland-County", method = RequestMethod.GET)
	public String getTexasCountyMidlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48329");
		return "TexasCountyMidlandCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Gadsden-city", method = RequestMethod.GET)
	public String getAlabamaCityGadsdencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "128696");
		return "AlabamaCityGadsdencity";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Oil-City", method = RequestMethod.GET)
	public String getPennsylvaniaMicroOilCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36340");
		return "PennsylvaniaMicroOilCity";
	}   
@RequestMapping(value = "/states/Texas/counties/Medina-County", method = RequestMethod.GET)
	public String getTexasCountyMedinaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48325");
		return "TexasCountyMedinaCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Maverick-County", method = RequestMethod.GET)
	public String getTexasCountyMaverickCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48323");
		return "TexasCountyMaverickCounty";
	}   
@RequestMapping(value = "/states/Maine/counties/Sagadahoc-County", method = RequestMethod.GET)
	public String getMaineCountySagadahocCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23023");
		return "MaineCountySagadahocCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Levittown", method = RequestMethod.GET)
	public String getPennsylvaniaCityLevittown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4242928");
		return "PennsylvaniaCityLevittown";
	}   
@RequestMapping(value = "/states/Maine/counties/Somerset-County", method = RequestMethod.GET)
	public String getMaineCountySomersetCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23025");
		return "MaineCountySomersetCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Toms-River", method = RequestMethod.GET)
	public String getNew_JerseyCityTomsRiver(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3473110");
		return "New_JerseyCityTomsRiver";
	}   
@RequestMapping(value = "/states/Maine/counties/Waldo-County", method = RequestMethod.GET)
	public String getMaineCountyWaldoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23027");
		return "MaineCountyWaldoCounty";
	}   
@RequestMapping(value = "/states/Maine/counties/Washington-County", method = RequestMethod.GET)
	public String getMaineCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23029");
		return "MaineCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Arlington-Heights-village", method = RequestMethod.GET)
	public String getIllinoisCityArlingtonHeightsvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1702154");
		return "IllinoisCityArlingtonHeightsvillage";
	}   
@RequestMapping(value = "/states/California/cities/Rosemont", method = RequestMethod.GET)
	public String getCaliforniaCityRosemont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "662910");
		return "CaliforniaCityRosemont";
	}   
@RequestMapping(value = "/states/Virginia/cities/Fairfax-city", method = RequestMethod.GET)
	public String getVirginiaCityFairfaxcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5126496");
		return "VirginiaCityFairfaxcity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Grant-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyGrantCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35017");
		return "New_MexicoCountyGrantCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Eddy-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyEddyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35015");
		return "New_MexicoCountyEddyCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Peoria-city", method = RequestMethod.GET)
	public String getIllinoisCityPeoriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1759000");
		return "IllinoisCityPeoriacity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Doa-Ana-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyDoaAnaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35013");
		return "New_MexicoCountyDoaAnaCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Matagorda-County", method = RequestMethod.GET)
	public String getTexasCountyMatagordaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48321");
		return "TexasCountyMatagordaCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Aibonito-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyAibonitoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72009");
		return "Puerto_RicoCountyAibonitoMunicipio";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Austin", method = RequestMethod.GET)
	public String getMinnesotaMicroAustin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12380");
		return "MinnesotaMicroAustin";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Aguas-Buenas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyAguasBuenasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72007");
		return "Puerto_RicoCountyAguasBuenasMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Aguadilla-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyAguadillaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72005");
		return "Puerto_RicoCountyAguadillaMunicipio";
	}   
@RequestMapping(value = "/states/Kansas/micros/Parsons", method = RequestMethod.GET)
	public String getKansasMicroParsons(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37660");
		return "KansasMicroParsons";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Charlotte-Concord-Gastonia", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroCharlotteConcordGastonia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16740");
		return "North_CarolinaMetroCharlotteConcordGastonia";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Aguada-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyAguadaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72003");
		return "Puerto_RicoCountyAguadaMunicipio";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Bernalillo-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyBernalilloCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35001");
		return "New_MexicoCountyBernalilloCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/North-Olmsted-city", method = RequestMethod.GET)
	public String getOhioCityNorthOlmstedcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3956882");
		return "OhioCityNorthOlmstedcity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Curry-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyCurryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35009");
		return "New_MexicoCountyCurryCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Cibola-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyCibolaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35006");
		return "New_MexicoCountyCibolaCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Parkland-city", method = RequestMethod.GET)
	public String getFloridaCityParklandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1255125");
		return "FloridaCityParklandcity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Chaves-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyChavesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35005");
		return "New_MexicoCountyChavesCounty";
	}   
@RequestMapping(value = "/states/Maine/counties/York-County", method = RequestMethod.GET)
	public String getMaineCountyYorkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23031");
		return "MaineCountyYorkCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Watertown-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityWatertownTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2573440");
		return "MassachusettsCityWatertownTowncity";
	}   
@RequestMapping(value = "/states/Washington/cities/Spanaway", method = RequestMethod.GET)
	public String getWashingtonCitySpanaway(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5366255");
		return "WashingtonCitySpanaway";
	}   
@RequestMapping(value = "/states/Maryland/cities/Annapolis-city", method = RequestMethod.GET)
	public String getMarylandCityAnnapoliscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2401600");
		return "MarylandCityAnnapoliscity";
	}   
@RequestMapping(value = "/states/Maine/counties/Hancock-County", method = RequestMethod.GET)
	public String getMaineCountyHancockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23009");
		return "MaineCountyHancockCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Barranquitas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyBarranquitasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72019");
		return "Puerto_RicoCountyBarranquitasMunicipio";
	}   
@RequestMapping(value = "/states/Ohio/cities/Cleveland-Heights-city", method = RequestMethod.GET)
	public String getOhioCityClevelandHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3916014");
		return "OhioCityClevelandHeightscity";
	}   
@RequestMapping(value = "/states/Texas/counties/Lubbock-County", method = RequestMethod.GET)
	public String getTexasCountyLubbockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48303");
		return "TexasCountyLubbockCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Barceloneta-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyBarcelonetaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72017");
		return "Puerto_RicoCountyBarcelonetaMunicipio";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Altoona", method = RequestMethod.GET)
	public String getPennsylvaniaMetroAltoona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11020");
		return "PennsylvaniaMetroAltoona";
	}   
@RequestMapping(value = "/states/Maine/counties/Androscoggin-County", method = RequestMethod.GET)
	public String getMaineCountyAndroscogginCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23001");
		return "MaineCountyAndroscogginCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Arecibo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyAreciboMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72013");
		return "Puerto_RicoCountyAreciboMunicipio";
	}   
@RequestMapping(value = "/states/Maine/counties/Aroostook-County", method = RequestMethod.GET)
	public String getMaineCountyAroostookCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23003");
		return "MaineCountyAroostookCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Anasco-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyAnascoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72011");
		return "Puerto_RicoCountyAnascoMunicipio";
	}   
@RequestMapping(value = "/states/Maine/counties/Cumberland-County", method = RequestMethod.GET)
	public String getMaineCountyCumberlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23005");
		return "MaineCountyCumberlandCounty";
	}   
@RequestMapping(value = "/states/Maine/counties/Franklin-County", method = RequestMethod.GET)
	public String getMaineCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23007");
		return "MaineCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/McLennan-County", method = RequestMethod.GET)
	public String getTexasCountyMcLennanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48309");
		return "TexasCountyMcLennanCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Norwich-city", method = RequestMethod.GET)
	public String getConnecticutCityNorwichcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "956200");
		return "ConnecticutCityNorwichcity";
	}   
@RequestMapping(value = "/states/New-York/cities/Garden-City-village", method = RequestMethod.GET)
	public String getNew_YorkCityGardenCityvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3628178");
		return "New_YorkCityGardenCityvillage";
	}   
@RequestMapping(value = "/states/Washington/metros/Wenatchee", method = RequestMethod.GET)
	public String getWashingtonMetroWenatchee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48300");
		return "WashingtonMetroWenatchee";
	}   
@RequestMapping(value = "/states/California/cities/Roseville-city", method = RequestMethod.GET)
	public String getCaliforniaCityRosevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "662938");
		return "CaliforniaCityRosevillecity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Bristol-city", method = RequestMethod.GET)
	public String getTennesseeCityBristolcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4708540");
		return "TennesseeCityBristolcity";
	}   
@RequestMapping(value = "/states/Washington/cities/Everett-city", method = RequestMethod.GET)
	public String getWashingtonCityEverettcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5322640");
		return "WashingtonCityEverettcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Solon-city", method = RequestMethod.GET)
	public String getOhioCitySoloncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3972928");
		return "OhioCitySoloncity";
	}   
@RequestMapping(value = "/states/Florida/cities/Leisure-City", method = RequestMethod.GET)
	public String getFloridaCityLeisureCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239950");
		return "FloridaCityLeisureCity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Canovanas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCanovanasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72029");
		return "Puerto_RicoCountyCanovanasMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Camuy-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCamuyMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72027");
		return "Puerto_RicoCountyCamuyMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Caguas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCaguasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72025");
		return "Puerto_RicoCountyCaguasMunicipio";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Portsmouth-city", method = RequestMethod.GET)
	public String getNew_HampshireCityPortsmouthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3362900");
		return "New_HampshireCityPortsmouthcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Cleveland-city", method = RequestMethod.GET)
	public String getOhioCityClevelandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3916000");
		return "OhioCityClevelandcity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Bend-city", method = RequestMethod.GET)
	public String getOregonCityBendcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4105800");
		return "OregonCityBendcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Cabo-Rojo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCaboRojoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72023");
		return "Puerto_RicoCountyCaboRojoMunicipio";
	}   
@RequestMapping(value = "/states/Maine/counties/Knox-County", method = RequestMethod.GET)
	public String getMaineCountyKnoxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23013");
		return "MaineCountyKnoxCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Bayamon-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyBayamonMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72021");
		return "Puerto_RicoCountyBayamonMunicipio";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Jacksonville-city", method = RequestMethod.GET)
	public String getArkansasCityJacksonvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "534750");
		return "ArkansasCityJacksonvillecity";
	}   
@RequestMapping(value = "/states/Maine/counties/Lincoln-County", method = RequestMethod.GET)
	public String getMaineCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23015");
		return "MaineCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Kingsport-Bristol-Bristol", method = RequestMethod.GET)
	public String getTennesseeMetroKingsportBristolBristol(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28700");
		return "TennesseeMetroKingsportBristolBristol";
	}   
@RequestMapping(value = "/states/Maine/counties/Oxford-County", method = RequestMethod.GET)
	public String getMaineCountyOxfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23017");
		return "MaineCountyOxfordCounty";
	}   
@RequestMapping(value = "/states/Delaware/cities/Newark-city", method = RequestMethod.GET)
	public String getDelawareCityNewarkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1050670");
		return "DelawareCityNewarkcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Westchase", method = RequestMethod.GET)
	public String getFloridaCityWestchase(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1276062");
		return "FloridaCityWestchase";
	}   
@RequestMapping(value = "/states/Maine/counties/Penobscot-County", method = RequestMethod.GET)
	public String getMaineCountyPenobscotCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23019");
		return "MaineCountyPenobscotCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Grand-RapidsWyoming", method = RequestMethod.GET)
	public String getMichiganMetroGrandRapidsWyoming(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24340");
		return "MichiganMetroGrandRapidsWyoming";
	}   
@RequestMapping(value = "/states/Illinois/cities/Morton-Grove-village", method = RequestMethod.GET)
	public String getIllinoisCityMortonGrovevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1750647");
		return "IllinoisCityMortonGrovevillage";
	}   
@RequestMapping(value = "/states/Maine/counties/Kennebec-County", method = RequestMethod.GET)
	public String getMaineCountyKennebecCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23011");
		return "MaineCountyKennebecCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/York-Hanover", method = RequestMethod.GET)
	public String getPennsylvaniaMetroYorkHanover(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49620");
		return "PennsylvaniaMetroYorkHanover";
	}   
@RequestMapping(value = "/states/Florida/cities/Cutler-Bay-town", method = RequestMethod.GET)
	public String getFloridaCityCutlerBaytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1215968");
		return "FloridaCityCutlerBaytown";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Duluth-city", method = RequestMethod.GET)
	public String getMinnesotaCityDuluthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2717000");
		return "MinnesotaCityDuluthcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Cape-Coral-city", method = RequestMethod.GET)
	public String getFloridaCityCapeCoralcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1210275");
		return "FloridaCityCapeCoralcity";
	}   
@RequestMapping(value = "/states/Virginia/cities/South-Riding", method = RequestMethod.GET)
	public String getVirginiaCitySouthRiding(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5174100");
		return "VirginiaCitySouthRiding";
	}   
@RequestMapping(value = "/states/Michigan/micros/Big-Rapids", method = RequestMethod.GET)
	public String getMichiganMicroBigRapids(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13660");
		return "MichiganMicroBigRapids";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Cayey-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCayeyMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72035");
		return "Puerto_RicoCountyCayeyMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Catano-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCatanoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72033");
		return "Puerto_RicoCountyCatanoMunicipio";
	}   
@RequestMapping(value = "/states/Florida/cities/Westchester", method = RequestMethod.GET)
	public String getFloridaCityWestchester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1276075");
		return "FloridaCityWestchester";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Carolina-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCarolinaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72031");
		return "Puerto_RicoCountyCarolinaMunicipio";
	}   
@RequestMapping(value = "/states/Indiana/cities/Brownsburg-town", method = RequestMethod.GET)
	public String getIndianaCityBrownsburgtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1808416");
		return "IndianaCityBrownsburgtown";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Bridgeton-city", method = RequestMethod.GET)
	public String getNew_JerseyCityBridgetoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3407600");
		return "New_JerseyCityBridgetoncity";
	}   
@RequestMapping(value = "/states/Florida/cities/Lehigh-Acres", method = RequestMethod.GET)
	public String getFloridaCityLehighAcres(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239925");
		return "FloridaCityLehighAcres";
	}   
@RequestMapping(value = "/states/District-of-Columbia/counties/District-of-Columbia", method = RequestMethod.GET)
	public String getDistrict_of_ColumbiaCountyDistrictofColumbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11001");
		return "District_of_ColumbiaCountyDistrictofColumbia";
	}   
@RequestMapping(value = "/states/New-York/micros/Ogdensburg-Massena", method = RequestMethod.GET)
	public String getNew_YorkMicroOgdensburgMassena(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36300");
		return "New_YorkMicroOgdensburgMassena";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Rochester-city", method = RequestMethod.GET)
	public String getMinnesotaCityRochestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2754880");
		return "MinnesotaCityRochestercity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Lee-County", method = RequestMethod.GET)
	public String getVirginiaCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51105");
		return "VirginiaCountyLeeCounty";
	}   
@RequestMapping(value = "/states/California/cities/Monrovia-city", method = RequestMethod.GET)
	public String getCaliforniaCityMonroviacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "648648");
		return "CaliforniaCityMonroviacity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Loudoun-County", method = RequestMethod.GET)
	public String getVirginiaCountyLoudounCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51107");
		return "VirginiaCountyLoudounCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Louisa-County", method = RequestMethod.GET)
	public String getVirginiaCountyLouisaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51109");
		return "VirginiaCountyLouisaCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/McMinnville-city", method = RequestMethod.GET)
	public String getOregonCityMcMinnvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4145000");
		return "OregonCityMcMinnvillecity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Corozal-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCorozalMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72047");
		return "Puerto_RicoCountyCorozalMunicipio";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Hot-Springs-city", method = RequestMethod.GET)
	public String getArkansasCityHotSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "533400");
		return "ArkansasCityHotSpringscity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Comerio-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyComerioMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72045");
		return "Puerto_RicoCountyComerioMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Coamo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCoamoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72043");
		return "Puerto_RicoCountyCoamoMunicipio";
	}   
@RequestMapping(value = "/states/Texas/metros/Midland", method = RequestMethod.GET)
	public String getTexasMetroMidland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33260");
		return "TexasMetroMidland";
	}   
@RequestMapping(value = "/states/Georgia/cities/Valdosta-city", method = RequestMethod.GET)
	public String getGeorgiaCityValdostacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1378800");
		return "GeorgiaCityValdostacity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Cidra-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyCidraMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72041");
		return "Puerto_RicoCountyCidraMunicipio";
	}   
@RequestMapping(value = "/states/California/cities/San-Mateo-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanMateocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668252");
		return "CaliforniaCitySanMateocity";
	}   
@RequestMapping(value = "/states/Florida/cities/Aventura-city", method = RequestMethod.GET)
	public String getFloridaCityAventuracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1202681");
		return "FloridaCityAventuracity";
	}   
@RequestMapping(value = "/states/Florida/cities/Ferry-Pass", method = RequestMethod.GET)
	public String getFloridaCityFerryPass(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1222275");
		return "FloridaCityFerryPass";
	}   
@RequestMapping(value = "/states/California/cities/Union-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityUnionCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "681204");
		return "CaliforniaCityUnionCitycity";
	}   
@RequestMapping(value = "/states/Iowa/metros/Iowa-City", method = RequestMethod.GET)
	public String getIowaMetroIowaCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26980");
		return "IowaMetroIowaCity";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Radcliff-city", method = RequestMethod.GET)
	public String getKentuckyCityRadcliffcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2163912");
		return "KentuckyCityRadcliffcity";
	}   
@RequestMapping(value = "/states/Utah/cities/West-Valley-City-city", method = RequestMethod.GET)
	public String getUtahCityWestValleyCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4983470");
		return "UtahCityWestValleyCitycity";
	}   
@RequestMapping(value = "/states/West-Virginia/metros/Parkersburg-Vienna", method = RequestMethod.GET)
	public String getWest_VirginiaMetroParkersburgVienna(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37620");
		return "West_VirginiaMetroParkersburgVienna";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/CharlestonNorth-Charleston", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroCharlestonNorthCharleston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16700");
		return "South_CarolinaMetroCharlestonNorthCharleston";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Muskogee-city", method = RequestMethod.GET)
	public String getOklahomaCityMuskogeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4050050");
		return "OklahomaCityMuskogeecity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Mecklenburg-County", method = RequestMethod.GET)
	public String getVirginiaCountyMecklenburgCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51117");
		return "VirginiaCountyMecklenburgCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Champaign-city", method = RequestMethod.GET)
	public String getIllinoisCityChampaigncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1712385");
		return "IllinoisCityChampaigncity";
	}   
@RequestMapping(value = "/states/New-Hampshire/micros/Claremont-Lebanon", method = RequestMethod.GET)
	public String getNew_HampshireMicroClaremontLebanon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17200");
		return "New_HampshireMicroClaremontLebanon";
	}   
@RequestMapping(value = "/states/Illinois/counties/Winnebago-County", method = RequestMethod.GET)
	public String getIllinoisCountyWinnebagoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17201");
		return "IllinoisCountyWinnebagoCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Rockingham", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroRockingham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40460");
		return "North_CarolinaMicroRockingham";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Allison-Park", method = RequestMethod.GET)
	public String getPennsylvaniaCityAllisonPark(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4202056");
		return "PennsylvaniaCityAllisonPark";
	}   
@RequestMapping(value = "/states/Illinois/counties/Woodford-County", method = RequestMethod.GET)
	public String getIllinoisCountyWoodfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17203");
		return "IllinoisCountyWoodfordCounty";
	}   
@RequestMapping(value = "/states/North-Dakota/micros/Dickinson", method = RequestMethod.GET)
	public String getNorth_DakotaMicroDickinson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19860");
		return "North_DakotaMicroDickinson";
	}   
@RequestMapping(value = "/states/Michigan/counties/Van-Buren-County", method = RequestMethod.GET)
	public String getMichiganCountyVanBurenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26159");
		return "MichiganCountyVanBurenCounty";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Henderson-city", method = RequestMethod.GET)
	public String getKentuckyCityHendersoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2135866");
		return "KentuckyCityHendersoncity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Johnson-City-city", method = RequestMethod.GET)
	public String getTennesseeCityJohnsonCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4738320");
		return "TennesseeCityJohnsonCitycity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Sanilac-County", method = RequestMethod.GET)
	public String getMichiganCountySanilacCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26151");
		return "MichiganCountySanilacCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Athens", method = RequestMethod.GET)
	public String getOhioMicroAthens(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11900");
		return "OhioMicroAthens";
	}   
@RequestMapping(value = "/states/Florida/cities/Fort-Lauderdale-city", method = RequestMethod.GET)
	public String getFloridaCityFortLauderdalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1224000");
		return "FloridaCityFortLauderdalecity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Knox-County", method = RequestMethod.GET)
	public String getTennesseeCountyKnoxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47093");
		return "TennesseeCountyKnoxCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Farmington-city", method = RequestMethod.GET)
	public String getMinnesotaCityFarmingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2720618");
		return "MinnesotaCityFarmingtoncity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Paterson-city", method = RequestMethod.GET)
	public String getNew_JerseyCityPatersoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3457000");
		return "New_JerseyCityPatersoncity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Shiawassee-County", method = RequestMethod.GET)
	public String getMichiganCountyShiawasseeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26155");
		return "MichiganCountyShiawasseeCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Laredo-city", method = RequestMethod.GET)
	public String getTexasCityLaredocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4841464");
		return "TexasCityLaredocity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Tuscola-County", method = RequestMethod.GET)
	public String getMichiganCountyTuscolaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26157");
		return "MichiganCountyTuscolaCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Rochester-city", method = RequestMethod.GET)
	public String getNew_HampshireCityRochestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3365140");
		return "New_HampshireCityRochestercity";
	}   
@RequestMapping(value = "/states/California/cities/Carmichael", method = RequestMethod.GET)
	public String getCaliforniaCityCarmichael(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "611390");
		return "CaliforniaCityCarmichael";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Lawrence-County", method = RequestMethod.GET)
	public String getTennesseeCountyLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47099");
		return "TennesseeCountyLawrenceCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Lauderdale-County", method = RequestMethod.GET)
	public String getTennesseeCountyLauderdaleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47097");
		return "TennesseeCountyLauderdaleCounty";
	}   
@RequestMapping(value = "/states/Nevada/cities/Carson-City", method = RequestMethod.GET)
	public String getNevadaCityCarsonCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3209700");
		return "NevadaCityCarsonCity";
	}   
@RequestMapping(value = "/states/Florida/metros/Punta-Gorda", method = RequestMethod.GET)
	public String getFloridaMetroPuntaGorda(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39460");
		return "FloridaMetroPuntaGorda";
	}   
@RequestMapping(value = "/states/Ohio/micros/Sandusky", method = RequestMethod.GET)
	public String getOhioMicroSandusky(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41780");
		return "OhioMicroSandusky";
	}   
@RequestMapping(value = "/states/Ohio/cities/Bowling-Green-city", method = RequestMethod.GET)
	public String getOhioCityBowlingGreencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3907972");
		return "OhioCityBowlingGreencity";
	}   
@RequestMapping(value = "/states/New-York/cities/Oceanside", method = RequestMethod.GET)
	public String getNew_YorkCityOceanside(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3654441");
		return "New_YorkCityOceanside";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Blytheville", method = RequestMethod.GET)
	public String getArkansasMicroBlytheville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14180");
		return "ArkansasMicroBlytheville";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Hickman-County", method = RequestMethod.GET)
	public String getTennesseeCountyHickmanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47081");
		return "TennesseeCountyHickmanCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Washtenaw-County", method = RequestMethod.GET)
	public String getMichiganCountyWashtenawCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26161");
		return "MichiganCountyWashtenawCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Madison", method = RequestMethod.GET)
	public String getIndianaMicroMadison(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31500");
		return "IndianaMicroMadison";
	}   
@RequestMapping(value = "/states/Michigan/counties/Wayne-County", method = RequestMethod.GET)
	public String getMichiganCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26163");
		return "MichiganCountyWayneCounty";
	}   
@RequestMapping(value = "/states/Georgia/micros/Vidalia", method = RequestMethod.GET)
	public String getGeorgiaMicroVidalia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47080");
		return "GeorgiaMicroVidalia";
	}   
@RequestMapping(value = "/states/California/cities/Burlingame-city", method = RequestMethod.GET)
	public String getCaliforniaCityBurlingamecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "609066");
		return "CaliforniaCityBurlingamecity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Wexford-County", method = RequestMethod.GET)
	public String getMichiganCountyWexfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26165");
		return "MichiganCountyWexfordCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Benbrook-city", method = RequestMethod.GET)
	public String getTexasCityBenbrookcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4807552");
		return "TexasCityBenbrookcity";
	}   
@RequestMapping(value = "/states/California/cities/Gardena-city", method = RequestMethod.GET)
	public String getCaliforniaCityGardenacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "628168");
		return "CaliforniaCityGardenacity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Jefferson-County", method = RequestMethod.GET)
	public String getTennesseeCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47089");
		return "TennesseeCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lemon-Grove-city", method = RequestMethod.GET)
	public String getCaliforniaCityLemonGrovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "641124");
		return "CaliforniaCityLemonGrovecity";
	}   
@RequestMapping(value = "/states/California/cities/Murrieta-city", method = RequestMethod.GET)
	public String getCaliforniaCityMurrietacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "650076");
		return "CaliforniaCityMurrietacity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Westlake-city", method = RequestMethod.GET)
	public String getOhioCityWestlakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3983622");
		return "OhioCityWestlakecity";
	}   
@RequestMapping(value = "/states/Connecticut/counties/Hartford-County", method = RequestMethod.GET)
	public String getConnecticutCountyHartfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9003");
		return "ConnecticutCountyHartfordCounty";
	}   
@RequestMapping(value = "/states/Connecticut/counties/Fairfield-County", method = RequestMethod.GET)
	public String getConnecticutCountyFairfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9001");
		return "ConnecticutCountyFairfieldCounty";
	}   
@RequestMapping(value = "/states/Connecticut/counties/Middlesex-County", method = RequestMethod.GET)
	public String getConnecticutCountyMiddlesexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9007");
		return "ConnecticutCountyMiddlesexCounty";
	}   
@RequestMapping(value = "/states/California/cities/Elk-Grove-city", method = RequestMethod.GET)
	public String getCaliforniaCityElkGrovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "622020");
		return "CaliforniaCityElkGrovecity";
	}   
@RequestMapping(value = "/states/Connecticut/counties/Litchfield-County", method = RequestMethod.GET)
	public String getConnecticutCountyLitchfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9005");
		return "ConnecticutCountyLitchfieldCounty";
	}   
@RequestMapping(value = "/states/California/cities/Fontana-city", method = RequestMethod.GET)
	public String getCaliforniaCityFontanacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "624680");
		return "CaliforniaCityFontanacity";
	}   
@RequestMapping(value = "/states/Texas/cities/La-Porte-city", method = RequestMethod.GET)
	public String getTexasCityLaPortecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4841440");
		return "TexasCityLaPortecity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Otsego-County", method = RequestMethod.GET)
	public String getMichiganCountyOtsegoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26137");
		return "MichiganCountyOtsegoCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Midland-city", method = RequestMethod.GET)
	public String getTexasCityMidlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4848072");
		return "TexasCityMidlandcity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Highland-town", method = RequestMethod.GET)
	public String getIndianaCityHighlandtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1833466");
		return "IndianaCityHighlandtown";
	}   
@RequestMapping(value = "/states/Michigan/counties/Ottawa-County", method = RequestMethod.GET)
	public String getMichiganCountyOttawaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26139");
		return "MichiganCountyOttawaCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Hardin-County", method = RequestMethod.GET)
	public String getTennesseeCountyHardinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47071");
		return "TennesseeCountyHardinCounty";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Memphis", method = RequestMethod.GET)
	public String getTennesseeMetroMemphis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32820");
		return "TennesseeMetroMemphis";
	}   
@RequestMapping(value = "/states/California/cities/Camarillo-city", method = RequestMethod.GET)
	public String getCaliforniaCityCamarillocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "610046");
		return "CaliforniaCityCamarillocity";
	}   
@RequestMapping(value = "/states/New-York/micros/Jamestown-Dunkirk-Fredonia", method = RequestMethod.GET)
	public String getNew_YorkMicroJamestownDunkirkFredonia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27460");
		return "New_YorkMicroJamestownDunkirkFredonia";
	}   
@RequestMapping(value = "/states/Michigan/counties/Osceola-County", method = RequestMethod.GET)
	public String getMichiganCountyOsceolaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26133");
		return "MichiganCountyOsceolaCounty";
	}   
@RequestMapping(value = "/states/Iowa/cities/Cedar-Rapids-city", method = RequestMethod.GET)
	public String getIowaCityCedarRapidscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1912000");
		return "IowaCityCedarRapidscity";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Bentonville-city", method = RequestMethod.GET)
	public String getArkansasCityBentonvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "505320");
		return "ArkansasCityBentonvillecity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Henry-County", method = RequestMethod.GET)
	public String getTennesseeCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47079");
		return "TennesseeCountyHenryCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lomita-city", method = RequestMethod.GET)
	public String getCaliforniaCityLomitacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "642468");
		return "CaliforniaCityLomitacity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Henderson-County", method = RequestMethod.GET)
	public String getTennesseeCountyHendersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47077");
		return "TennesseeCountyHendersonCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Hawkins-County", method = RequestMethod.GET)
	public String getTennesseeCountyHawkinsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47073");
		return "TennesseeCountyHawkinsCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Bloomingdale-village", method = RequestMethod.GET)
	public String getIllinoisCityBloomingdalevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1706587");
		return "IllinoisCityBloomingdalevillage";
	}   
@RequestMapping(value = "/states/Connecticut/counties/Windham-County", method = RequestMethod.GET)
	public String getConnecticutCountyWindhamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9015");
		return "ConnecticutCountyWindhamCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lemoore-city", method = RequestMethod.GET)
	public String getCaliforniaCityLemoorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "641152");
		return "CaliforniaCityLemoorecity";
	}   
@RequestMapping(value = "/states/Connecticut/counties/Tolland-County", method = RequestMethod.GET)
	public String getConnecticutCountyTollandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9013");
		return "ConnecticutCountyTollandCounty";
	}   
@RequestMapping(value = "/states/California/cities/Menifee-city", method = RequestMethod.GET)
	public String getCaliforniaCityMenifeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "646842");
		return "CaliforniaCityMenifeecity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Hardeman-County", method = RequestMethod.GET)
	public String getTennesseeCountyHardemanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47069");
		return "TennesseeCountyHardemanCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/St-Clair-County", method = RequestMethod.GET)
	public String getMichiganCountyStClairCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26147");
		return "MichiganCountyStClairCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/St-Joseph-County", method = RequestMethod.GET)
	public String getMichiganCountyStJosephCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26149");
		return "MichiganCountyStJosephCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Kirkland-city", method = RequestMethod.GET)
	public String getWashingtonCityKirklandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5335940");
		return "WashingtonCityKirklandcity";
	}   
@RequestMapping(value = "/states/Connecticut/counties/New-London-County", method = RequestMethod.GET)
	public String getConnecticutCountyNewLondonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9011");
		return "ConnecticutCountyNewLondonCounty";
	}   
@RequestMapping(value = "/states/Florida/metros/Homosassa-Springs", method = RequestMethod.GET)
	public String getFloridaMetroHomosassaSprings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26140");
		return "FloridaMetroHomosassaSprings";
	}   
@RequestMapping(value = "/states/South-Dakota/cities/Watertown-city", method = RequestMethod.GET)
	public String getSouth_DakotaCityWatertowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4669300");
		return "South_DakotaCityWatertowncity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Germantown-city", method = RequestMethod.GET)
	public String getTennesseeCityGermantowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4728960");
		return "TennesseeCityGermantowncity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Roscommon-County", method = RequestMethod.GET)
	public String getMichiganCountyRoscommonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26143");
		return "MichiganCountyRoscommonCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Killeen-city", method = RequestMethod.GET)
	public String getTexasCityKilleencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4839148");
		return "TexasCityKilleencity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Saginaw-County", method = RequestMethod.GET)
	public String getMichiganCountySaginawCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26145");
		return "MichiganCountySaginawCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/South-Valley", method = RequestMethod.GET)
	public String getNew_MexicoCitySouthValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3574520");
		return "New_MexicoCitySouthValley";
	}   
@RequestMapping(value = "/states/Connecticut/counties/New-Haven-County", method = RequestMethod.GET)
	public String getConnecticutCountyNewHavenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "9009");
		return "ConnecticutCountyNewHavenCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Hamilton-County", method = RequestMethod.GET)
	public String getTennesseeCountyHamiltonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47065");
		return "TennesseeCountyHamiltonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Rockwall-County", method = RequestMethod.GET)
	public String getTexasCountyRockwallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48397");
		return "TexasCountyRockwallCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Hamblen-County", method = RequestMethod.GET)
	public String getTennesseeCountyHamblenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47063");
		return "TennesseeCountyHamblenCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Danville-city", method = RequestMethod.GET)
	public String getIllinoisCityDanvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1718563");
		return "IllinoisCityDanvillecity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Homewood-city", method = RequestMethod.GET)
	public String getAlabamaCityHomewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "135800");
		return "AlabamaCityHomewoodcity";
	}   
@RequestMapping(value = "/states/Iowa/micros/Burlington", method = RequestMethod.GET)
	public String getIowaMicroBurlington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15460");
		return "IowaMicroBurlington";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Greer-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityGreercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4530985");
		return "South_CarolinaCityGreercity";
	}   
@RequestMapping(value = "/states/Michigan/metros/Detroit-Warren-Dearborn", method = RequestMethod.GET)
	public String getMichiganMetroDetroitWarrenDearborn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19820");
		return "MichiganMetroDetroitWarrenDearborn";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Picayune", method = RequestMethod.GET)
	public String getMississippiMicroPicayune(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38100");
		return "MississippiMicroPicayune";
	}   
@RequestMapping(value = "/states/Texas/cities/Eagle-Pass-city", method = RequestMethod.GET)
	public String getTexasCityEaglePasscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4821892");
		return "TexasCityEaglePasscity";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Ward-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyWardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38101");
		return "North_DakotaCountyWardCounty";
	}   
@RequestMapping(value = "/states/Illinois/metros/Rockford", method = RequestMethod.GET)
	public String getIllinoisMetroRockford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40420");
		return "IllinoisMetroRockford";
	}   
@RequestMapping(value = "/states/Florida/cities/Sanford-city", method = RequestMethod.GET)
	public String getFloridaCitySanfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1263650");
		return "FloridaCitySanfordcity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Greene-County", method = RequestMethod.GET)
	public String getTennesseeCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47059");
		return "TennesseeCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Monroe-County", method = RequestMethod.GET)
	public String getMichiganCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26115");
		return "MichiganCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Montcalm-County", method = RequestMethod.GET)
	public String getMichiganCountyMontcalmCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26117");
		return "MichiganCountyMontcalmCounty";
	}   
@RequestMapping(value = "/states/Idaho/cities/Pocatello-city", method = RequestMethod.GET)
	public String getIdahoCityPocatellocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1664090");
		return "IdahoCityPocatellocity";
	}   
@RequestMapping(value = "/states/Florida/cities/Panama-City-city", method = RequestMethod.GET)
	public String getFloridaCityPanamaCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254700");
		return "FloridaCityPanamaCitycity";
	}   
@RequestMapping(value = "/states/Florida/cities/Haines-City-city", method = RequestMethod.GET)
	public String getFloridaCityHainesCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1228400");
		return "FloridaCityHainesCitycity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Midland-County", method = RequestMethod.GET)
	public String getMichiganCountyMidlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26111");
		return "MichiganCountyMidlandCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/Gresham-city", method = RequestMethod.GET)
	public String getOregonCityGreshamcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4131250");
		return "OregonCityGreshamcity";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Williams-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyWilliamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38105");
		return "North_DakotaCountyWilliamsCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Grainger-County", method = RequestMethod.GET)
	public String getTennesseeCountyGraingerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47057");
		return "TennesseeCountyGraingerCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Giles-County", method = RequestMethod.GET)
	public String getTennesseeCountyGilesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47055");
		return "TennesseeCountyGilesCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Ken-Caryl", method = RequestMethod.GET)
	public String getColoradoCityKenCaryl(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "840377");
		return "ColoradoCityKenCaryl";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Gibson-County", method = RequestMethod.GET)
	public String getTennesseeCountyGibsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47053");
		return "TennesseeCountyGibsonCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Athens-city", method = RequestMethod.GET)
	public String getAlabamaCityAthenscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "102956");
		return "AlabamaCityAthenscity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Madison-city", method = RequestMethod.GET)
	public String getWisconsinCityMadisoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5548000");
		return "WisconsinCityMadisoncity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Franklin-County", method = RequestMethod.GET)
	public String getTennesseeCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47051");
		return "TennesseeCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Randall-County", method = RequestMethod.GET)
	public String getTexasCountyRandallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48381");
		return "TexasCountyRandallCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Lafayette-city", method = RequestMethod.GET)
	public String getLouisianaCityLafayettecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2240735");
		return "LouisianaCityLafayettecity";
	}   
@RequestMapping(value = "/states/West-Virginia/micros/Bluefield", method = RequestMethod.GET)
	public String getWest_VirginiaMicroBluefield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14140");
		return "West_VirginiaMicroBluefield";
	}   
@RequestMapping(value = "/states/New-York/micros/Corning", method = RequestMethod.GET)
	public String getNew_YorkMicroCorning(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18500");
		return "New_YorkMicroCorning";
	}   
@RequestMapping(value = "/states/Washington/micros/Pullman", method = RequestMethod.GET)
	public String getWashingtonMicroPullman(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39420");
		return "WashingtonMicroPullman";
	}   
@RequestMapping(value = "/states/California/metros/San-DiegoCarlsbad", method = RequestMethod.GET)
	public String getCaliforniaMetroSanDiegoCarlsbad(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41740");
		return "CaliforniaMetroSanDiegoCarlsbad";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Fayette-County", method = RequestMethod.GET)
	public String getTennesseeCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47047");
		return "TennesseeCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Oakland-County", method = RequestMethod.GET)
	public String getMichiganCountyOaklandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26125");
		return "MichiganCountyOaklandCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Oceana-County", method = RequestMethod.GET)
	public String getMichiganCountyOceanaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26127");
		return "MichiganCountyOceanaCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Valparaiso-city", method = RequestMethod.GET)
	public String getIndianaCityValparaisocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1878326");
		return "IndianaCityValparaisocity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Ogemaw-County", method = RequestMethod.GET)
	public String getMichiganCountyOgemawCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26129");
		return "MichiganCountyOgemawCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Valencia-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyValenciaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35061");
		return "New_MexicoCountyValenciaCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Effingham", method = RequestMethod.GET)
	public String getIllinoisMicroEffingham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20820");
		return "IllinoisMicroEffingham";
	}   
@RequestMapping(value = "/states/Louisiana/micros/Natchitoches", method = RequestMethod.GET)
	public String getLouisianaMicroNatchitoches(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35060");
		return "LouisianaMicroNatchitoches";
	}   
@RequestMapping(value = "/states/Ohio/cities/Shaker-Heights-city", method = RequestMethod.GET)
	public String getOhioCityShakerHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3971682");
		return "OhioCityShakerHeightscity";
	}   
@RequestMapping(value = "/states/Texas/cities/Sugar-Land-city", method = RequestMethod.GET)
	public String getTexasCitySugarLandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4870808");
		return "TexasCitySugarLandcity";
	}   
@RequestMapping(value = "/states/Florida/cities/North-Fort-Myers", method = RequestMethod.GET)
	public String getFloridaCityNorthFortMyers(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1249350");
		return "FloridaCityNorthFortMyers";
	}   
@RequestMapping(value = "/states/Texas/micros/Kingsville", method = RequestMethod.GET)
	public String getTexasMicroKingsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28780");
		return "TexasMicroKingsville";
	}   
@RequestMapping(value = "/states/Michigan/counties/Muskegon-County", method = RequestMethod.GET)
	public String getMichiganCountyMuskegonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26121");
		return "MichiganCountyMuskegonCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Newaygo-County", method = RequestMethod.GET)
	public String getMichiganCountyNewaygoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26123");
		return "MichiganCountyNewaygoCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Dyer-County", method = RequestMethod.GET)
	public String getTennesseeCountyDyerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47045");
		return "TennesseeCountyDyerCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Dickson-County", method = RequestMethod.GET)
	public String getTennesseeCountyDicksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47043");
		return "TennesseeCountyDicksonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Potter-County", method = RequestMethod.GET)
	public String getTexasCountyPotterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48375");
		return "TexasCountyPotterCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Monroe-city", method = RequestMethod.GET)
	public String getLouisianaCityMonroecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2251410");
		return "LouisianaCityMonroecity";
	}   
@RequestMapping(value = "/states/Texas/counties/Polk-County", method = RequestMethod.GET)
	public String getTexasCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48373");
		return "TexasCountyPolkCounty";
	}   
@RequestMapping(value = "/states/Florida/micros/Okeechobee", method = RequestMethod.GET)
	public String getFloridaMicroOkeechobee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36380");
		return "FloridaMicroOkeechobee";
	}   
@RequestMapping(value = "/states/California/cities/Menlo-Park-city", method = RequestMethod.GET)
	public String getCaliforniaCityMenloParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "646870");
		return "CaliforniaCityMenloParkcity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Davidson-County", method = RequestMethod.GET)
	public String getTennesseeCountyDavidsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47037");
		return "TennesseeCountyDavidsonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Parker-County", method = RequestMethod.GET)
	public String getTexasCountyParkerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48367");
		return "TexasCountyParkerCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Bellingham-city", method = RequestMethod.GET)
	public String getWashingtonCityBellinghamcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5305280");
		return "WashingtonCityBellinghamcity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Taos-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyTaosCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35055");
		return "New_MexicoCountyTaosCounty";
	}   
@RequestMapping(value = "/states/California/cities/Placentia-city", method = RequestMethod.GET)
	public String getCaliforniaCityPlacentiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "657526");
		return "CaliforniaCityPlacentiacity";
	}   
@RequestMapping(value = "/states/Michigan/cities/St-Clair-Shores-city", method = RequestMethod.GET)
	public String getMichiganCityStClairShorescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2670760");
		return "MichiganCityStClairShorescity";
	}   
@RequestMapping(value = "/states/California/cities/Lennox", method = RequestMethod.GET)
	public String getCaliforniaCityLennox(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "641180");
		return "CaliforniaCityLennox";
	}   
@RequestMapping(value = "/states/Ohio/cities/Norwood-city", method = RequestMethod.GET)
	public String getOhioCityNorwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3957386");
		return "OhioCityNorwoodcity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Oregon-City-city", method = RequestMethod.GET)
	public String getOregonCityOregonCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4155200");
		return "OregonCityOregonCitycity";
	}   
@RequestMapping(value = "/states/Indiana/metros/Fort-Wayne", method = RequestMethod.GET)
	public String getIndianaMetroFortWayne(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23060");
		return "IndianaMetroFortWayne";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Pleasantville-city", method = RequestMethod.GET)
	public String getNew_JerseyCityPleasantvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3459640");
		return "New_JerseyCityPleasantvillecity";
	}   
@RequestMapping(value = "/states/North-Dakota/micros/Jamestown", method = RequestMethod.GET)
	public String getNorth_DakotaMicroJamestown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27420");
		return "North_DakotaMicroJamestown";
	}   
@RequestMapping(value = "/states/Michigan/cities/Detroit-city", method = RequestMethod.GET)
	public String getMichiganCityDetroitcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2622000");
		return "MichiganCityDetroitcity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Monroe-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityMonroecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3743920");
		return "North_CarolinaCityMonroecity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Cumberland-County", method = RequestMethod.GET)
	public String getTennesseeCountyCumberlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47035");
		return "TennesseeCountyCumberlandCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Panola-County", method = RequestMethod.GET)
	public String getTexasCountyPanolaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48365");
		return "TexasCountyPanolaCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Palo-Pinto-County", method = RequestMethod.GET)
	public String getTexasCountyPaloPintoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48363");
		return "TexasCountyPaloPintoCounty";
	}   
@RequestMapping(value = "/states/California/cities/Folsom-city", method = RequestMethod.GET)
	public String getCaliforniaCityFolsomcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "624638");
		return "CaliforniaCityFolsomcity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Coffee-County", method = RequestMethod.GET)
	public String getTennesseeCountyCoffeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47031");
		return "TennesseeCountyCoffeeCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Orange-County", method = RequestMethod.GET)
	public String getTexasCountyOrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48361");
		return "TexasCountyOrangeCounty";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Greenville-city", method = RequestMethod.GET)
	public String getMississippiCityGreenvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2829180");
		return "MississippiCityGreenvillecity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Allentown-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityAllentowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4202000");
		return "PennsylvaniaCityAllentowncity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Cocke-County", method = RequestMethod.GET)
	public String getTennesseeCountyCockeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47029");
		return "TennesseeCountyCockeCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Claiborne-County", method = RequestMethod.GET)
	public String getTennesseeCountyClaiborneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47025");
		return "TennesseeCountyClaiborneCounty";
	}   
@RequestMapping(value = "/states/Nevada/cities/Pahrump", method = RequestMethod.GET)
	public String getNevadaCityPahrump(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3253800");
		return "NevadaCityPahrump";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/San-Juan-County", method = RequestMethod.GET)
	public String getNew_MexicoCountySanJuanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35045");
		return "New_MexicoCountySanJuanCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Marquette-County", method = RequestMethod.GET)
	public String getMichiganCountyMarquetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26103");
		return "MichiganCountyMarquetteCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Sandoval-County", method = RequestMethod.GET)
	public String getNew_MexicoCountySandovalCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35043");
		return "New_MexicoCountySandovalCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Mason-County", method = RequestMethod.GET)
	public String getMichiganCountyMasonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26105");
		return "MichiganCountyMasonCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Roosevelt-County", method = RequestMethod.GET)
	public String getNew_MexicoCountyRooseveltCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35041");
		return "New_MexicoCountyRooseveltCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Mecosta-County", method = RequestMethod.GET)
	public String getMichiganCountyMecostaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26107");
		return "MichiganCountyMecostaCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Menominee-County", method = RequestMethod.GET)
	public String getMichiganCountyMenomineeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26109");
		return "MichiganCountyMenomineeCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Saginaw-city", method = RequestMethod.GET)
	public String getTexasCitySaginawcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4864112");
		return "TexasCitySaginawcity";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/Santa-Fe-County", method = RequestMethod.GET)
	public String getNew_MexicoCountySantaFeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35049");
		return "New_MexicoCountySantaFeCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/counties/San-Miguel-County", method = RequestMethod.GET)
	public String getNew_MexicoCountySanMiguelCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35047");
		return "New_MexicoCountySanMiguelCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Manistee-County", method = RequestMethod.GET)
	public String getMichiganCountyManisteeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26101");
		return "MichiganCountyManisteeCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Nueces-County", method = RequestMethod.GET)
	public String getTexasCountyNuecesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48355");
		return "TexasCountyNuecesCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Cheatham-County", method = RequestMethod.GET)
	public String getTennesseeCountyCheathamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47021");
		return "TennesseeCountyCheathamCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/Victoria", method = RequestMethod.GET)
	public String getTexasMetroVictoria(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47020");
		return "TexasMetroVictoria";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Sulphur-city", method = RequestMethod.GET)
	public String getLouisianaCitySulphurcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2273640");
		return "LouisianaCitySulphurcity";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Kaneohe", method = RequestMethod.GET)
	public String getHawaiiCityKaneohe(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1528250");
		return "HawaiiCityKaneohe";
	}   
@RequestMapping(value = "/states/Oregon/counties/Josephine-County", method = RequestMethod.GET)
	public String getOregonCountyJosephineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41033");
		return "OregonCountyJosephineCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Johnson-County", method = RequestMethod.GET)
	public String getIowaCountyJohnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19103");
		return "IowaCountyJohnsonCounty";
	}   
@RequestMapping(value = "/states/Idaho/counties/Payette-County", method = RequestMethod.GET)
	public String getIdahoCountyPayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16075");
		return "IdahoCountyPayetteCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Jefferson-County", method = RequestMethod.GET)
	public String getOregonCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41031");
		return "OregonCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Jones-County", method = RequestMethod.GET)
	public String getIowaCountyJonesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19105");
		return "IowaCountyJonesCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Southfield-city", method = RequestMethod.GET)
	public String getMichiganCitySouthfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2674900");
		return "MichiganCitySouthfieldcity";
	}   
@RequestMapping(value = "/states/Texas/metros/DallasFort-WorthArlington", method = RequestMethod.GET)
	public String getTexasMetroDallasFortWorthArlington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19100");
		return "TexasMetroDallasFortWorthArlington";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Enid", method = RequestMethod.GET)
	public String getOklahomaMicroEnid(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21420");
		return "OklahomaMicroEnid";
	}   
@RequestMapping(value = "/states/Colorado/cities/Castle-Rock-town", method = RequestMethod.GET)
	public String getColoradoCityCastleRocktown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "812415");
		return "ColoradoCityCastleRocktown";
	}   
@RequestMapping(value = "/states/Oregon/counties/Klamath-County", method = RequestMethod.GET)
	public String getOregonCountyKlamathCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41035");
		return "OregonCountyKlamathCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Lane-County", method = RequestMethod.GET)
	public String getOregonCountyLaneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41039");
		return "OregonCountyLaneCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Lincolnia", method = RequestMethod.GET)
	public String getVirginiaCityLincolnia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5145784");
		return "VirginiaCityLincolnia";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Lewistown", method = RequestMethod.GET)
	public String getPennsylvaniaMicroLewistown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30380");
		return "PennsylvaniaMicroLewistown";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Lino-Lakes-city", method = RequestMethod.GET)
	public String getMinnesotaCityLinoLakescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2737322");
		return "MinnesotaCityLinoLakescity";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Columbus-city", method = RequestMethod.GET)
	public String getMississippiCityColumbuscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2815380");
		return "MississippiCityColumbuscity";
	}   
@RequestMapping(value = "/states/Washington/counties/Franklin-County", method = RequestMethod.GET)
	public String getWashingtonCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53021");
		return "WashingtonCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Jackson-County", method = RequestMethod.GET)
	public String getMississippiCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28059");
		return "MississippiCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Grays-Harbor-County", method = RequestMethod.GET)
	public String getWashingtonCountyGraysHarborCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53027");
		return "WashingtonCountyGraysHarborCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Muskegon", method = RequestMethod.GET)
	public String getMichiganMetroMuskegon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34740");
		return "MichiganMetroMuskegon";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Itawamba-County", method = RequestMethod.GET)
	public String getMississippiCountyItawambaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28057");
		return "MississippiCountyItawambaCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Grant-County", method = RequestMethod.GET)
	public String getWashingtonCountyGrantCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53025");
		return "WashingtonCountyGrantCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Island-County", method = RequestMethod.GET)
	public String getWashingtonCountyIslandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53029");
		return "WashingtonCountyIslandCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Navarre", method = RequestMethod.GET)
	public String getFloridaCityNavarre(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1248050");
		return "FloridaCityNavarre";
	}   
@RequestMapping(value = "/states/Florida/micros/Lake-City", method = RequestMethod.GET)
	public String getFloridaMicroLakeCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29380");
		return "FloridaMicroLakeCity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Leavenworth-County", method = RequestMethod.GET)
	public String getKansasCountyLeavenworthCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20103");
		return "KansasCountyLeavenworthCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Lee-County", method = RequestMethod.GET)
	public String getIowaCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19111");
		return "IowaCountyLeeCounty";
	}   
@RequestMapping(value = "/states/Delaware/metros/Dover", method = RequestMethod.GET)
	public String getDelawareMetroDover(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20100");
		return "DelawareMetroDover";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Cookeville-city", method = RequestMethod.GET)
	public String getTennesseeCityCookevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4716920");
		return "TennesseeCityCookevillecity";
	}   
@RequestMapping(value = "/states/New-York/cities/Commack", method = RequestMethod.GET)
	public String getNew_YorkCityCommack(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3617530");
		return "New_YorkCityCommack";
	}   
@RequestMapping(value = "/states/Iowa/counties/Linn-County", method = RequestMethod.GET)
	public String getIowaCountyLinnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19113");
		return "IowaCountyLinnCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Jackson-County", method = RequestMethod.GET)
	public String getOregonCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41029");
		return "OregonCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Hood-River-County", method = RequestMethod.GET)
	public String getOregonCountyHoodRiverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41027");
		return "OregonCountyHoodRiverCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Burlington", method = RequestMethod.GET)
	public String getMassachusettsCityBurlington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2509875");
		return "MassachusettsCityBurlington";
	}   
@RequestMapping(value = "/states/Idaho/counties/Twin-Falls-County", method = RequestMethod.GET)
	public String getIdahoCountyTwinFallsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16083");
		return "IdahoCountyTwinFallsCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/King-County", method = RequestMethod.GET)
	public String getWashingtonCountyKingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53033");
		return "WashingtonCountyKingCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Jones-County", method = RequestMethod.GET)
	public String getMississippiCountyJonesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28067");
		return "MississippiCountyJonesCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Jefferson-County", method = RequestMethod.GET)
	public String getWashingtonCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53031");
		return "WashingtonCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Morgan-County", method = RequestMethod.GET)
	public String getAlabamaCountyMorganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1103");
		return "AlabamaCountyMorganCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Kittitas-County", method = RequestMethod.GET)
	public String getWashingtonCountyKittitasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53037");
		return "WashingtonCountyKittitasCounty";
	}   
@RequestMapping(value = "/states/California/cities/Orange-city", method = RequestMethod.GET)
	public String getCaliforniaCityOrangecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "653980");
		return "CaliforniaCityOrangecity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Montgomery-County", method = RequestMethod.GET)
	public String getAlabamaCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1101");
		return "AlabamaCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Kitsap-County", method = RequestMethod.GET)
	public String getWashingtonCountyKitsapCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53035");
		return "WashingtonCountyKitsapCounty";
	}   
@RequestMapping(value = "/states/Louisiana/metros/Alexandria", method = RequestMethod.GET)
	public String getLouisianaMetroAlexandria(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10780");
		return "LouisianaMetroAlexandria";
	}   
@RequestMapping(value = "/states/Washington/counties/Klickitat-County", method = RequestMethod.GET)
	public String getWashingtonCountyKlickitatCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53039");
		return "WashingtonCountyKlickitatCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Pike-County", method = RequestMethod.GET)
	public String getAlabamaCountyPikeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1109");
		return "AlabamaCountyPikeCounty";
	}   
@RequestMapping(value = "/states/Montana/micros/Kalispell", method = RequestMethod.GET)
	public String getMontanaMicroKalispell(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28060");
		return "MontanaMicroKalispell";
	}   
@RequestMapping(value = "/states/Idaho/counties/Kootenai-County", method = RequestMethod.GET)
	public String getIdahoCountyKootenaiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16055");
		return "IdahoCountyKootenaiCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Coos-County", method = RequestMethod.GET)
	public String getOregonCountyCoosCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41011");
		return "OregonCountyCoosCounty";
	}   
@RequestMapping(value = "/states/Idaho/counties/Jerome-County", method = RequestMethod.GET)
	public String getIdahoCountyJeromeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16053");
		return "IdahoCountyJeromeCounty";
	}   
@RequestMapping(value = "/states/California/metros/Vallejo-Fairfield", method = RequestMethod.GET)
	public String getCaliforniaMetroVallejoFairfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46700");
		return "CaliforniaMetroVallejoFairfield";
	}   
@RequestMapping(value = "/states/Oregon/counties/Curry-County", method = RequestMethod.GET)
	public String getOregonCountyCurryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41015");
		return "OregonCountyCurryCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Ypsilanti-city", method = RequestMethod.GET)
	public String getMichiganCityYpsilanticity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2689140");
		return "MichiganCityYpsilanticity";
	}   
@RequestMapping(value = "/states/Georgia/metros/Savannah", method = RequestMethod.GET)
	public String getGeorgiaMetroSavannah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42340");
		return "GeorgiaMetroSavannah";
	}   
@RequestMapping(value = "/states/Idaho/counties/Latah-County", method = RequestMethod.GET)
	public String getIdahoCountyLatahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16057");
		return "IdahoCountyLatahCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Crook-County", method = RequestMethod.GET)
	public String getOregonCountyCrookCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41013");
		return "OregonCountyCrookCounty";
	}   
@RequestMapping(value = "/states/California/cities/Riverside-city", method = RequestMethod.GET)
	public String getCaliforniaCityRiversidecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "662000");
		return "CaliforniaCityRiversidecity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Talladega-County", method = RequestMethod.GET)
	public String getAlabamaCountyTalladegaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1121");
		return "AlabamaCountyTalladegaCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Douglas-County", method = RequestMethod.GET)
	public String getOregonCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41019");
		return "OregonCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Cleveland", method = RequestMethod.GET)
	public String getMississippiMicroCleveland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17380");
		return "MississippiMicroCleveland";
	}   
@RequestMapping(value = "/states/Alabama/cities/Selma-city", method = RequestMethod.GET)
	public String getAlabamaCitySelmacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "169120");
		return "AlabamaCitySelmacity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/George-County", method = RequestMethod.GET)
	public String getMississippiCountyGeorgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28039");
		return "MississippiCountyGeorgeCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Deschutes-County", method = RequestMethod.GET)
	public String getOregonCountyDeschutesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41017");
		return "OregonCountyDeschutesCounty";
	}   
@RequestMapping(value = "/states/Idaho/counties/Jefferson-County", method = RequestMethod.GET)
	public String getIdahoCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16051");
		return "IdahoCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Lewis-County", method = RequestMethod.GET)
	public String getWashingtonCountyLewisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53041");
		return "WashingtonCountyLewisCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Bullhead-City-city", method = RequestMethod.GET)
	public String getArizonaCityBullheadCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "408220");
		return "ArizonaCityBullheadCitycity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Muskego-city", method = RequestMethod.GET)
	public String getWisconsinCityMuskegocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5555275");
		return "WisconsinCityMuskegocity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/DeSoto-County", method = RequestMethod.GET)
	public String getMississippiCountyDeSotoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28033");
		return "MississippiCountyDeSotoCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Evansville-city", method = RequestMethod.GET)
	public String getIndianaCityEvansvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1822000");
		return "IndianaCityEvansvillecity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Catonsville", method = RequestMethod.GET)
	public String getMarylandCityCatonsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2414125");
		return "MarylandCityCatonsville";
	}   
@RequestMapping(value = "/states/Alabama/counties/Shelby-County", method = RequestMethod.GET)
	public String getAlabamaCountyShelbyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1117");
		return "AlabamaCountyShelbyCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Mason-County", method = RequestMethod.GET)
	public String getWashingtonCountyMasonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53045");
		return "WashingtonCountyMasonCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Covington-County", method = RequestMethod.GET)
	public String getMississippiCountyCovingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28031");
		return "MississippiCountyCovingtonCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/St-Clair-County", method = RequestMethod.GET)
	public String getAlabamaCountyStClairCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1115");
		return "AlabamaCountyStClairCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Beavercreek-city", method = RequestMethod.GET)
	public String getOhioCityBeavercreekcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3904720");
		return "OhioCityBeavercreekcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Russell-County", method = RequestMethod.GET)
	public String getAlabamaCountyRussellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1113");
		return "AlabamaCountyRussellCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Pacific-County", method = RequestMethod.GET)
	public String getWashingtonCountyPacificCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53049");
		return "WashingtonCountyPacificCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Forrest-County", method = RequestMethod.GET)
	public String getMississippiCountyForrestCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28035");
		return "MississippiCountyForrestCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Kearns", method = RequestMethod.GET)
	public String getUtahCityKearns(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4940470");
		return "UtahCityKearns";
	}   
@RequestMapping(value = "/states/Alabama/counties/Randolph-County", method = RequestMethod.GET)
	public String getAlabamaCountyRandolphCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1111");
		return "AlabamaCountyRandolphCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Okanogan-County", method = RequestMethod.GET)
	public String getWashingtonCountyOkanoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53047");
		return "WashingtonCountyOkanoganCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Oswego-village", method = RequestMethod.GET)
	public String getIllinoisCityOswegovillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1756887");
		return "IllinoisCityOswegovillage";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Owatonna-city", method = RequestMethod.GET)
	public String getMinnesotaCityOwatonnacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2749300");
		return "MinnesotaCityOwatonnacity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Eau-Claire-city", method = RequestMethod.GET)
	public String getWisconsinCityEauClairecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5522300");
		return "WisconsinCityEauClairecity";
	}   
@RequestMapping(value = "/states/Idaho/counties/Madison-County", method = RequestMethod.GET)
	public String getIdahoCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16065");
		return "IdahoCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Davie-town", method = RequestMethod.GET)
	public String getFloridaCityDavietown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1216475");
		return "FloridaCityDavietown";
	}   
@RequestMapping(value = "/states/Florida/cities/Kendale-Lakes", method = RequestMethod.GET)
	public String getFloridaCityKendaleLakes(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1236062");
		return "FloridaCityKendaleLakes";
	}   
@RequestMapping(value = "/states/Idaho/counties/Nez-Perce-County", method = RequestMethod.GET)
	public String getIdahoCountyNezPerceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16069");
		return "IdahoCountyNezPerceCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Benton-County", method = RequestMethod.GET)
	public String getOregonCountyBentonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41003");
		return "OregonCountyBentonCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Lancaster-city", method = RequestMethod.GET)
	public String getOhioCityLancastercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3941720");
		return "OhioCityLancastercity";
	}   
@RequestMapping(value = "/states/Idaho/counties/Minidoka-County", method = RequestMethod.GET)
	public String getIdahoCountyMinidokaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16067");
		return "IdahoCountyMinidokaCounty";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities/Warwick-city", method = RequestMethod.GET)
	public String getRhode_IslandCityWarwickcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4474300");
		return "Rhode_IslandCityWarwickcity";
	}   
@RequestMapping(value = "/states/Oregon/counties/Clatsop-County", method = RequestMethod.GET)
	public String getOregonCountyClatsopCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41007");
		return "OregonCountyClatsopCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Clackamas-County", method = RequestMethod.GET)
	public String getOregonCountyClackamasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41005");
		return "OregonCountyClackamasCounty";
	}   
@RequestMapping(value = "/states/Illinois/metros/Carbondale-Marion", method = RequestMethod.GET)
	public String getIllinoisMetroCarbondaleMarion(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16060");
		return "IllinoisMetroCarbondaleMarion";
	}   
@RequestMapping(value = "/states/Michigan/cities/Grand-Rapids-city", method = RequestMethod.GET)
	public String getMichiganCityGrandRapidscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2634000");
		return "MichiganCityGrandRapidscity";
	}   
@RequestMapping(value = "/states/Oregon/counties/Columbia-County", method = RequestMethod.GET)
	public String getOregonCountyColumbiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41009");
		return "OregonCountyColumbiaCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Bonita-Springs-city", method = RequestMethod.GET)
	public String getFloridaCityBonitaSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1207525");
		return "FloridaCityBonitaSpringscity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Hancock-County", method = RequestMethod.GET)
	public String getMississippiCountyHancockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28045");
		return "MississippiCountyHancockCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Walker-County", method = RequestMethod.GET)
	public String getAlabamaCountyWalkerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1127");
		return "AlabamaCountyWalkerCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Pierce-County", method = RequestMethod.GET)
	public String getWashingtonCountyPierceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53053");
		return "WashingtonCountyPierceCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Grenada-County", method = RequestMethod.GET)
	public String getMississippiCountyGrenadaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28043");
		return "MississippiCountyGrenadaCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Hallandale-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityHallandaleBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1228452");
		return "FloridaCityHallandaleBeachcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Tuscaloosa-County", method = RequestMethod.GET)
	public String getAlabamaCountyTuscaloosaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1125");
		return "AlabamaCountyTuscaloosaCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Hinds-County", method = RequestMethod.GET)
	public String getMississippiCountyHindsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28049");
		return "MississippiCountyHindsCounty";
	}   
@RequestMapping(value = "/states/Alabama/counties/Tallapoosa-County", method = RequestMethod.GET)
	public String getAlabamaCountyTallapoosaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1123");
		return "AlabamaCountyTallapoosaCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Skagit-County", method = RequestMethod.GET)
	public String getWashingtonCountySkagitCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53057");
		return "WashingtonCountySkagitCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Nashua-city", method = RequestMethod.GET)
	public String getNew_HampshireCityNashuacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3350260");
		return "New_HampshireCityNashuacity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Harrison-County", method = RequestMethod.GET)
	public String getMississippiCountyHarrisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28047");
		return "MississippiCountyHarrisonCounty";
	}   
@RequestMapping(value = "/states/Idaho/counties/Cassia-County", method = RequestMethod.GET)
	public String getIdahoCountyCassiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16031");
		return "IdahoCountyCassiaCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Sunbury", method = RequestMethod.GET)
	public String getPennsylvaniaMicroSunbury(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44980");
		return "PennsylvaniaMicroSunbury";
	}   
@RequestMapping(value = "/states/California/cities/Fair-Oaks", method = RequestMethod.GET)
	public String getCaliforniaCityFairOaks(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "623294");
		return "CaliforniaCityFairOaks";
	}   
@RequestMapping(value = "/states/California/cities/Chico-city", method = RequestMethod.GET)
	public String getCaliforniaCityChicocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "613014");
		return "CaliforniaCityChicocity";
	}   
@RequestMapping(value = "/states/Washington/counties/Spokane-County", method = RequestMethod.GET)
	public String getWashingtonCountySpokaneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53063");
		return "WashingtonCountySpokaneCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Burbank-city", method = RequestMethod.GET)
	public String getIllinoisCityBurbankcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1709642");
		return "IllinoisCityBurbankcity";
	}   
@RequestMapping(value = "/states/Washington/counties/Snohomish-County", method = RequestMethod.GET)
	public String getWashingtonCountySnohomishCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53061");
		return "WashingtonCountySnohomishCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Old-Bridge", method = RequestMethod.GET)
	public String getNew_JerseyCityOldBridge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3454690");
		return "New_JerseyCityOldBridge";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Bolivar-County", method = RequestMethod.GET)
	public String getMississippiCountyBolivarCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28011");
		return "MississippiCountyBolivarCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Thurston-County", method = RequestMethod.GET)
	public String getWashingtonCountyThurstonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53067");
		return "WashingtonCountyThurstonCounty";
	}   
@RequestMapping(value = "/states/Iowa/micros/Muscatine", method = RequestMethod.GET)
	public String getIowaMicroMuscatine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34700");
		return "IowaMicroMuscatine";
	}   
@RequestMapping(value = "/states/Nebraska/cities/North-Platte-city", method = RequestMethod.GET)
	public String getNebraskaCityNorthPlattecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3135000");
		return "NebraskaCityNorthPlattecity";
	}   
@RequestMapping(value = "/states/Texas/cities/San-Juan-city", method = RequestMethod.GET)
	public String getTexasCitySanJuancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4865516");
		return "TexasCitySanJuancity";
	}   
@RequestMapping(value = "/states/Washington/counties/Stevens-County", method = RequestMethod.GET)
	public String getWashingtonCountyStevensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53065");
		return "WashingtonCountyStevensCounty";
	}   
@RequestMapping(value = "/states/Louisiana/metros/Lake-Charles", method = RequestMethod.GET)
	public String getLouisianaMetroLakeCharles(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29340");
		return "LouisianaMetroLakeCharles";
	}   
@RequestMapping(value = "/states/Indiana/cities/Schererville-town", method = RequestMethod.GET)
	public String getIndianaCityScherervilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1868220");
		return "IndianaCityScherervilletown";
	}   
@RequestMapping(value = "/states/California/cities/Galt-city", method = RequestMethod.GET)
	public String getCaliforniaCityGaltcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "628112");
		return "CaliforniaCityGaltcity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Ashland-city", method = RequestMethod.GET)
	public String getOregonCityAshlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4103050");
		return "OregonCityAshlandcity";
	}   
@RequestMapping(value = "/states/Alabama/counties/Winston-County", method = RequestMethod.GET)
	public String getAlabamaCountyWinstonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1133");
		return "AlabamaCountyWinstonCounty";
	}   
@RequestMapping(value = "/states/Maine/metros/Lewiston-Auburn", method = RequestMethod.GET)
	public String getMaineMetroLewistonAuburn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30340");
		return "MaineMetroLewistonAuburn";
	}   
@RequestMapping(value = "/states/California/cities/Apple-Valley-town", method = RequestMethod.GET)
	public String getCaliforniaCityAppleValleytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "602364");
		return "CaliforniaCityAppleValleytown";
	}   
@RequestMapping(value = "/states/Arizona/cities/Casa-Grande-city", method = RequestMethod.GET)
	public String getArizonaCityCasaGrandecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "410530");
		return "ArizonaCityCasaGrandecity";
	}   
@RequestMapping(value = "/states/Idaho/counties/Elmore-County", method = RequestMethod.GET)
	public String getIdahoCountyElmoreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16039");
		return "IdahoCountyElmoreCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Smyrna-town", method = RequestMethod.GET)
	public String getTennesseeCitySmyrnatown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4769420");
		return "TennesseeCitySmyrnatown";
	}   
@RequestMapping(value = "/states/New-York/cities/Ronkonkoma", method = RequestMethod.GET)
	public String getNew_YorkCityRonkonkoma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3663473");
		return "New_YorkCityRonkonkoma";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Copiah-County", method = RequestMethod.GET)
	public String getMississippiCountyCopiahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28029");
		return "MississippiCountyCopiahCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Whatcom-County", method = RequestMethod.GET)
	public String getWashingtonCountyWhatcomCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53073");
		return "WashingtonCountyWhatcomCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Walla-Walla-County", method = RequestMethod.GET)
	public String getWashingtonCountyWallaWallaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53071");
		return "WashingtonCountyWallaWallaCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Highlands-Ranch", method = RequestMethod.GET)
	public String getColoradoCityHighlandsRanch(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "836410");
		return "ColoradoCityHighlandsRanch";
	}   
@RequestMapping(value = "/states/Washington/counties/Yakima-County", method = RequestMethod.GET)
	public String getWashingtonCountyYakimaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53077");
		return "WashingtonCountyYakimaCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Whitman-County", method = RequestMethod.GET)
	public String getWashingtonCountyWhitmanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53075");
		return "WashingtonCountyWhitmanCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Kalamazoo-Portage", method = RequestMethod.GET)
	public String getMichiganMetroKalamazooPortage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28020");
		return "MichiganMetroKalamazooPortage";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Coahoma-County", method = RequestMethod.GET)
	public String getMississippiCountyCoahomaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28027");
		return "MississippiCountyCoahomaCounty";
	}   
@RequestMapping(value = "/states/California/cities/Oakdale-city", method = RequestMethod.GET)
	public String getCaliforniaCityOakdalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "652694");
		return "CaliforniaCityOakdalecity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Petersburg-city", method = RequestMethod.GET)
	public String getVirginiaCityPetersburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5161832");
		return "VirginiaCityPetersburgcity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Clay-County", method = RequestMethod.GET)
	public String getMississippiCountyClayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28025");
		return "MississippiCountyClayCounty";
	}   
@RequestMapping(value = "/states/New-York/micros/Malone", method = RequestMethod.GET)
	public String getNew_YorkMicroMalone(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31660");
		return "New_YorkMicroMalone";
	}   
@RequestMapping(value = "/states/Michigan/cities/Lansing-city", method = RequestMethod.GET)
	public String getMichiganCityLansingcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2646000");
		return "MichiganCityLansingcity";
	}   
@RequestMapping(value = "/states/New-Mexico/metros/Albuquerque", method = RequestMethod.GET)
	public String getNew_MexicoMetroAlbuquerque(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10740");
		return "New_MexicoMetroAlbuquerque";
	}   
@RequestMapping(value = "/states/Idaho/counties/Bingham-County", method = RequestMethod.GET)
	public String getIdahoCountyBinghamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16011");
		return "IdahoCountyBinghamCounty";
	}   
@RequestMapping(value = "/states/Michigan/micros/Sault-Ste-Marie", method = RequestMethod.GET)
	public String getMichiganMicroSaultSteMarie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42300");
		return "MichiganMicroSaultSteMarie";
	}   
@RequestMapping(value = "/states/California/micros/Clearlake", method = RequestMethod.GET)
	public String getCaliforniaMicroClearlake(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17340");
		return "CaliforniaMicroClearlake";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Albuquerque-city", method = RequestMethod.GET)
	public String getNew_MexicoCityAlbuquerquecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3502000");
		return "New_MexicoCityAlbuquerquecity";
	}   
@RequestMapping(value = "/states/Idaho/counties/Blaine-County", method = RequestMethod.GET)
	public String getIdahoCountyBlaineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16013");
		return "IdahoCountyBlaineCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Dothan-city", method = RequestMethod.GET)
	public String getAlabamaCityDothancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "121184");
		return "AlabamaCityDothancity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Southgate-city", method = RequestMethod.GET)
	public String getMichiganCitySouthgatecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2674960");
		return "MichiganCitySouthgatecity";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Merrill", method = RequestMethod.GET)
	public String getWisconsinMicroMerrill(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32980");
		return "WisconsinMicroMerrill";
	}   
@RequestMapping(value = "/states/Florida/cities/Clermont-city", method = RequestMethod.GET)
	public String getFloridaCityClermontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1212925");
		return "FloridaCityClermontcity";
	}   
@RequestMapping(value = "/states/Idaho/counties/Bonneville-County", method = RequestMethod.GET)
	public String getIdahoCountyBonnevilleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16019");
		return "IdahoCountyBonnevilleCounty";
	}   
@RequestMapping(value = "/states/Idaho/counties/Bonner-County", method = RequestMethod.GET)
	public String getIdahoCountyBonnerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16017");
		return "IdahoCountyBonnerCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Pleasant-Grove-city", method = RequestMethod.GET)
	public String getUtahCityPleasantGrovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4960930");
		return "UtahCityPleasantGrovecity";
	}   
@RequestMapping(value = "/states/South-Dakota/metros/Sioux-Falls", method = RequestMethod.GET)
	public String getSouth_DakotaMetroSiouxFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43620");
		return "South_DakotaMetroSiouxFalls";
	}   
@RequestMapping(value = "/states/Missouri/metros/Cape-Girardeau", method = RequestMethod.GET)
	public String getMissouriMetroCapeGirardeau(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16020");
		return "MissouriMetroCapeGirardeau";
	}   
@RequestMapping(value = "/states/New-York/cities/Smithtown", method = RequestMethod.GET)
	public String getNew_YorkCitySmithtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3667851");
		return "New_YorkCitySmithtown";
	}   
@RequestMapping(value = "/states/Texas/cities/Deer-Park-city", method = RequestMethod.GET)
	public String getTexasCityDeerParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4819624");
		return "TexasCityDeerParkcity";
	}   
@RequestMapping(value = "/states/Iowa/micros/Fort-Dodge", method = RequestMethod.GET)
	public String getIowaMicroFortDodge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22700");
		return "IowaMicroFortDodge";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Adams-County", method = RequestMethod.GET)
	public String getMississippiCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28001");
		return "MississippiCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Alcorn-County", method = RequestMethod.GET)
	public String getMississippiCountyAlcornCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28003");
		return "MississippiCountyAlcornCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Florissant-city", method = RequestMethod.GET)
	public String getMissouriCityFlorissantcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2924778");
		return "MissouriCityFlorissantcity";
	}   
@RequestMapping(value = "/states/Idaho/counties/Canyon-County", method = RequestMethod.GET)
	public String getIdahoCountyCanyonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16027");
		return "IdahoCountyCanyonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Bell-Gardens-city", method = RequestMethod.GET)
	public String getCaliforniaCityBellGardenscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "604996");
		return "CaliforniaCityBellGardenscity";
	}   
@RequestMapping(value = "/states/California/cities/Baldwin-Park-city", method = RequestMethod.GET)
	public String getCaliforniaCityBaldwinParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "603666");
		return "CaliforniaCityBaldwinParkcity";
	}   
@RequestMapping(value = "/states/New-York/cities/Kingston-city", method = RequestMethod.GET)
	public String getNew_YorkCityKingstoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3639727");
		return "New_YorkCityKingstoncity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Brockton-city", method = RequestMethod.GET)
	public String getMassachusettsCityBrocktoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2509000");
		return "MassachusettsCityBrocktoncity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Shawnee-County", method = RequestMethod.GET)
	public String getKansasCountyShawneeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20177");
		return "KansasCountyShawneeCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Fruit-Cove", method = RequestMethod.GET)
	public String getFloridaCityFruitCove(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1224925");
		return "FloridaCityFruitCove";
	}   
@RequestMapping(value = "/states/Iowa/counties/Webster-County", method = RequestMethod.GET)
	public String getIowaCountyWebsterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19187");
		return "IowaCountyWebsterCounty";
	}   
@RequestMapping(value = "/states/California/cities/Cudahy-city", method = RequestMethod.GET)
	public String getCaliforniaCityCudahycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "617498");
		return "CaliforniaCityCudahycity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Seward-County", method = RequestMethod.GET)
	public String getKansasCountySewardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20175");
		return "KansasCountySewardCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Washington-County", method = RequestMethod.GET)
	public String getIowaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19183");
		return "IowaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Illinois/metros/Danville", method = RequestMethod.GET)
	public String getIllinoisMetroDanville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19180");
		return "IllinoisMetroDanville";
	}   
@RequestMapping(value = "/states/Florida/cities/Altamonte-Springs-city", method = RequestMethod.GET)
	public String getFloridaCityAltamonteSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1200950");
		return "FloridaCityAltamonteSpringscity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Warren-County", method = RequestMethod.GET)
	public String getIowaCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19181");
		return "IowaCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Cornelius-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityCorneliustown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3714700");
		return "North_CarolinaCityCorneliustown";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Hickory-Lenoir-Morganton", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroHickoryLenoirMorganton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25860");
		return "North_CarolinaMetroHickoryLenoirMorganton";
	}   
@RequestMapping(value = "/states/Kansas/counties/Sedgwick-County", method = RequestMethod.GET)
	public String getKansasCountySedgwickCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20173");
		return "KansasCountySedgwickCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/metros/Springfield", method = RequestMethod.GET)
	public String getMassachusettsMetroSpringfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44140");
		return "MassachusettsMetroSpringfield";
	}   
@RequestMapping(value = "/states/New-York/micros/Amsterdam", method = RequestMethod.GET)
	public String getNew_YorkMicroAmsterdam(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11220");
		return "New_YorkMicroAmsterdam";
	}   
@RequestMapping(value = "/states/Michigan/cities/Okemos", method = RequestMethod.GET)
	public String getMichiganCityOkemos(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2660340");
		return "MichiganCityOkemos";
	}   
@RequestMapping(value = "/states/California/cities/Blythe-city", method = RequestMethod.GET)
	public String getCaliforniaCityBlythecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "607218");
		return "CaliforniaCityBlythecity";
	}   
@RequestMapping(value = "/states/California/cities/San-Luis-Obispo-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanLuisObispocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668154");
		return "CaliforniaCitySanLuisObispocity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Lafayette-city", method = RequestMethod.GET)
	public String getIndianaCityLafayettecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1840788");
		return "IndianaCityLafayettecity";
	}   
@RequestMapping(value = "/states/New-York/cities/Lindenhurst-village", method = RequestMethod.GET)
	public String getNew_YorkCityLindenhurstvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3642554");
		return "New_YorkCityLindenhurstvillage";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Oklahoma-City-city", method = RequestMethod.GET)
	public String getOklahomaCityOklahomaCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4055000");
		return "OklahomaCityOklahomaCitycity";
	}   
@RequestMapping(value = "/states/Oregon/micros/Klamath-Falls", method = RequestMethod.GET)
	public String getOregonMicroKlamathFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28900");
		return "OregonMicroKlamathFalls";
	}   
@RequestMapping(value = "/states/Iowa/counties/Winneshiek-County", method = RequestMethod.GET)
	public String getIowaCountyWinneshiekCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19191");
		return "IowaCountyWinneshiekCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Woodbury-County", method = RequestMethod.GET)
	public String getIowaCountyWoodburyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19193");
		return "IowaCountyWoodburyCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Wildwood-city", method = RequestMethod.GET)
	public String getMissouriCityWildwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2979820");
		return "MissouriCityWildwoodcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Schaumburg-village", method = RequestMethod.GET)
	public String getIllinoisCitySchaumburgvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1768003");
		return "IllinoisCitySchaumburgvillage";
	}   
@RequestMapping(value = "/states/Colorado/metros/Greeley", method = RequestMethod.GET)
	public String getColoradoMetroGreeley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24540");
		return "ColoradoMetroGreeley";
	}   
@RequestMapping(value = "/states/California/cities/Yorba-Linda-city", method = RequestMethod.GET)
	public String getCaliforniaCityYorbaLindacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "686832");
		return "CaliforniaCityYorbaLindacity";
	}   
@RequestMapping(value = "/states/Indiana/metros/Terre-Haute", method = RequestMethod.GET)
	public String getIndianaMetroTerreHaute(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45460");
		return "IndianaMetroTerreHaute";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/DuBois", method = RequestMethod.GET)
	public String getPennsylvaniaMicroDuBois(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20180");
		return "PennsylvaniaMicroDuBois";
	}   
@RequestMapping(value = "/states/Texas/cities/Fort-Hood", method = RequestMethod.GET)
	public String getTexasCityFortHood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4826736");
		return "TexasCityFortHood";
	}   
@RequestMapping(value = "/states/Iowa/counties/Story-County", method = RequestMethod.GET)
	public String getIowaCountyStoryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19169");
		return "IowaCountyStoryCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Lubbock-city", method = RequestMethod.GET)
	public String getTexasCityLubbockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4845000");
		return "TexasCityLubbockcity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Reno-County", method = RequestMethod.GET)
	public String getKansasCountyRenoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20155");
		return "KansasCountyRenoCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Lafayette-city", method = RequestMethod.GET)
	public String getColoradoCityLafayettecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "841835");
		return "ColoradoCityLafayettecity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Sioux-County", method = RequestMethod.GET)
	public String getIowaCountySiouxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19167");
		return "IowaCountySiouxCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Marshall", method = RequestMethod.GET)
	public String getMinnesotaMicroMarshall(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32140");
		return "MinnesotaMicroMarshall";
	}   
@RequestMapping(value = "/states/Maine/cities/South-Portland-city", method = RequestMethod.GET)
	public String getMaineCitySouthPortlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2371990");
		return "MaineCitySouthPortlandcity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Scott-County", method = RequestMethod.GET)
	public String getIowaCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19163");
		return "IowaCountyScottCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Baltimore-city", method = RequestMethod.GET)
	public String getMarylandCountyBaltimorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24510");
		return "MarylandCountyBaltimorecity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Hinesville-city", method = RequestMethod.GET)
	public String getGeorgiaCityHinesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1338964");
		return "GeorgiaCityHinesvillecity";
	}   
@RequestMapping(value = "/states/Delaware/cities/Wilmington-city", method = RequestMethod.GET)
	public String getDelawareCityWilmingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1077580");
		return "DelawareCityWilmingtoncity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Keizer-city", method = RequestMethod.GET)
	public String getOregonCityKeizercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4138500");
		return "OregonCityKeizercity";
	}   
@RequestMapping(value = "/states/Washington/metros/Olympia-Tumwater", method = RequestMethod.GET)
	public String getWashingtonMetroOlympiaTumwater(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36500");
		return "WashingtonMetroOlympiaTumwater";
	}   
@RequestMapping(value = "/states/Ohio/micros/Van-Wert", method = RequestMethod.GET)
	public String getOhioMicroVanWert(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46780");
		return "OhioMicroVanWert";
	}   
@RequestMapping(value = "/states/Iowa/cities/Mason-City-city", method = RequestMethod.GET)
	public String getIowaCityMasonCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1950160");
		return "IowaCityMasonCitycity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Bessemer-city", method = RequestMethod.GET)
	public String getAlabamaCityBessemercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "105980");
		return "AlabamaCityBessemercity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Saline-County", method = RequestMethod.GET)
	public String getKansasCountySalineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20169");
		return "KansasCountySalineCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/North-Potomac", method = RequestMethod.GET)
	public String getMarylandCityNorthPotomac(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2456875");
		return "MarylandCityNorthPotomac";
	}   
@RequestMapping(value = "/states/Iowa/counties/Wapello-County", method = RequestMethod.GET)
	public String getIowaCountyWapelloCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19179");
		return "IowaCountyWapelloCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Belleville-city", method = RequestMethod.GET)
	public String getIllinoisCityBellevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1704845");
		return "IllinoisCityBellevillecity";
	}   
@RequestMapping(value = "/states/Minnesota/metros/MinneapolisSt-PaulBloomington", method = RequestMethod.GET)
	public String getMinnesotaMetroMinneapolisStPaulBloomington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33460");
		return "MinnesotaMetroMinneapolisStPaulBloomington";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Newton-city", method = RequestMethod.GET)
	public String getMassachusettsCityNewtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2545560");
		return "MassachusettsCityNewtoncity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Florence-city", method = RequestMethod.GET)
	public String getAlabamaCityFlorencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "126896");
		return "AlabamaCityFlorencecity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Dundalk", method = RequestMethod.GET)
	public String getMarylandCityDundalk(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2423975");
		return "MarylandCityDundalk";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Torrington-city", method = RequestMethod.GET)
	public String getConnecticutCityTorringtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "976500");
		return "ConnecticutCityTorringtoncity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Riley-County", method = RequestMethod.GET)
	public String getKansasCountyRileyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20161");
		return "KansasCountyRileyCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Harvey-city", method = RequestMethod.GET)
	public String getIllinoisCityHarveycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1733383");
		return "IllinoisCityHarveycity";
	}   
@RequestMapping(value = "/states/California/metros/Bakersfield", method = RequestMethod.GET)
	public String getCaliforniaMetroBakersfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12540");
		return "CaliforniaMetroBakersfield";
	}   
@RequestMapping(value = "/states/California/cities/Escondido-city", method = RequestMethod.GET)
	public String getCaliforniaCityEscondidocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "622804");
		return "CaliforniaCityEscondidocity";
	}   
@RequestMapping(value = "/states/Connecticut/cities/East-Hartford", method = RequestMethod.GET)
	public String getConnecticutCityEastHartford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "922700");
		return "ConnecticutCityEastHartford";
	}   
@RequestMapping(value = "/states/Iowa/counties/Plymouth-County", method = RequestMethod.GET)
	public String getIowaCountyPlymouthCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19149");
		return "IowaCountyPlymouthCounty";
	}   
@RequestMapping(value = "/states/Illinois/metros/Springfield", method = RequestMethod.GET)
	public String getIllinoisMetroSpringfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44100");
		return "IllinoisMetroSpringfield";
	}   
@RequestMapping(value = "/states/Texas/cities/Farmers-Branch-city", method = RequestMethod.GET)
	public String getTexasCityFarmersBranchcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4825452");
		return "TexasCityFarmersBranchcity";
	}   
@RequestMapping(value = "/states/Georgia/metros/Dalton", method = RequestMethod.GET)
	public String getGeorgiaMetroDalton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19140");
		return "GeorgiaMetroDalton";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Muskogee", method = RequestMethod.GET)
	public String getOklahomaMicroMuskogee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34780");
		return "OklahomaMicroMuskogee";
	}   
@RequestMapping(value = "/states/Texas/cities/Southlake-city", method = RequestMethod.GET)
	public String getTexasCitySouthlakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4869032");
		return "TexasCitySouthlakecity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Neshoba-County", method = RequestMethod.GET)
	public String getMississippiCountyNeshobaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28099");
		return "MississippiCountyNeshobaCounty";
	}   
@RequestMapping(value = "/states/California/cities/West-Covina-city", method = RequestMethod.GET)
	public String getCaliforniaCityWestCovinacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684200");
		return "CaliforniaCityWestCovinacity";
	}   
@RequestMapping(value = "/states/California/cities/Rosemead-city", method = RequestMethod.GET)
	public String getCaliforniaCityRosemeadcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "662896");
		return "CaliforniaCityRosemeadcity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Marion-County", method = RequestMethod.GET)
	public String getMississippiCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28091");
		return "MississippiCountyMarionCounty";
	}   
@RequestMapping(value = "/states/Alabama/micros/Enterprise", method = RequestMethod.GET)
	public String getAlabamaMicroEnterprise(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21460");
		return "AlabamaMicroEnterprise";
	}   
@RequestMapping(value = "/states/New-York/cities/Valley-Stream-village", method = RequestMethod.GET)
	public String getNew_YorkCityValleyStreamvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3676705");
		return "New_YorkCityValleyStreamvillage";
	}   
@RequestMapping(value = "/states/Florida/cities/Kissimmee-city", method = RequestMethod.GET)
	public String getFloridaCityKissimmeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1236950");
		return "FloridaCityKissimmeecity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Crofton", method = RequestMethod.GET)
	public String getMarylandCityCrofton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2420875");
		return "MarylandCityCrofton";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Monroe-County", method = RequestMethod.GET)
	public String getMississippiCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28095");
		return "MississippiCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Marshall-County", method = RequestMethod.GET)
	public String getMississippiCountyMarshallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28093");
		return "MississippiCountyMarshallCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Yamhill-County", method = RequestMethod.GET)
	public String getOregonCountyYamhillCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41071");
		return "OregonCountyYamhillCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Wasco-County", method = RequestMethod.GET)
	public String getOregonCountyWascoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41065");
		return "OregonCountyWascoCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Sarasota-city", method = RequestMethod.GET)
	public String getFloridaCitySarasotacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1264175");
		return "FloridaCitySarasotacity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Lorain-city", method = RequestMethod.GET)
	public String getOhioCityLoraincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3944856");
		return "OhioCityLoraincity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Pottawattamie-County", method = RequestMethod.GET)
	public String getIowaCountyPottawattamieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19155");
		return "IowaCountyPottawattamieCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Washington-County", method = RequestMethod.GET)
	public String getOregonCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41067");
		return "OregonCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Polk-County", method = RequestMethod.GET)
	public String getIowaCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19153");
		return "IowaCountyPolkCounty";
	}   
@RequestMapping(value = "/states/Montana/metros/Great-Falls", method = RequestMethod.GET)
	public String getMontanaMetroGreatFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24500");
		return "MontanaMetroGreatFalls";
	}   
@RequestMapping(value = "/states/California/cities/San-Marcos-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanMarcoscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668196");
		return "CaliforniaCitySanMarcoscity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Paramus-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityParamusborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3455950");
		return "New_JerseyCityParamusborough";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Kernersville-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityKernersvilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3735600");
		return "North_CarolinaCityKernersvilletown";
	}   
@RequestMapping(value = "/states/Texas/cities/Lufkin-city", method = RequestMethod.GET)
	public String getTexasCityLufkincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4845072");
		return "TexasCityLufkincity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Pottawatomie-County", method = RequestMethod.GET)
	public String getKansasCountyPottawatomieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20149");
		return "KansasCountyPottawatomieCounty";
	}   
@RequestMapping(value = "/states/Georgia/micros/Dublin", method = RequestMethod.GET)
	public String getGeorgiaMicroDublin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20140");
		return "GeorgiaMicroDublin";
	}   
@RequestMapping(value = "/states/Indiana/cities/Greenfield-city", method = RequestMethod.GET)
	public String getIndianaCityGreenfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1829520");
		return "IndianaCityGreenfieldcity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Long-Branch-city", method = RequestMethod.GET)
	public String getNew_JerseyCityLongBranchcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3441310");
		return "New_JerseyCityLongBranchcity";
	}   
@RequestMapping(value = "/states/Oregon/counties/Union-County", method = RequestMethod.GET)
	public String getOregonCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41061");
		return "OregonCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Minnesota/metros/St-Cloud", method = RequestMethod.GET)
	public String getMinnesotaMetroStCloud(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41060");
		return "MinnesotaMetroStCloud";
	}   
@RequestMapping(value = "/states/Iowa/counties/Marion-County", method = RequestMethod.GET)
	public String getIowaCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19125");
		return "IowaCountyMarionCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/McPherson-County", method = RequestMethod.GET)
	public String getKansasCountyMcPhersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20113");
		return "KansasCountyMcPhersonCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Polk-County", method = RequestMethod.GET)
	public String getOregonCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41053");
		return "OregonCountyPolkCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Marshall-County", method = RequestMethod.GET)
	public String getIowaCountyMarshallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19127");
		return "IowaCountyMarshallCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Lyon-County", method = RequestMethod.GET)
	public String getKansasCountyLyonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20111");
		return "KansasCountyLyonCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Umatilla-County", method = RequestMethod.GET)
	public String getOregonCountyUmatillaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41059");
		return "OregonCountyUmatillaCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Tillamook-County", method = RequestMethod.GET)
	public String getOregonCountyTillamookCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41057");
		return "OregonCountyTillamookCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Mahaska-County", method = RequestMethod.GET)
	public String getIowaCountyMahaskaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19123");
		return "IowaCountyMahaskaCounty";
	}   
@RequestMapping(value = "/states/Alabama/micros/Valley", method = RequestMethod.GET)
	public String getAlabamaMicroValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46740");
		return "AlabamaMicroValley";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Lauderdale-County", method = RequestMethod.GET)
	public String getMississippiCountyLauderdaleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28075");
		return "MississippiCountyLauderdaleCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Bristol-city", method = RequestMethod.GET)
	public String getConnecticutCityBristolcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "908420");
		return "ConnecticutCityBristolcity";
	}   
@RequestMapping(value = "/states/Michigan/micros/Marquette", method = RequestMethod.GET)
	public String getMichiganMicroMarquette(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32100");
		return "MichiganMicroMarquette";
	}   
@RequestMapping(value = "/states/Washington/counties/Benton-County", method = RequestMethod.GET)
	public String getWashingtonCountyBentonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53005");
		return "WashingtonCountyBentonCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Leake-County", method = RequestMethod.GET)
	public String getMississippiCountyLeakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28079");
		return "MississippiCountyLeakeCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Lake-Havasu-City-city", method = RequestMethod.GET)
	public String getArizonaCityLakeHavasuCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "439370");
		return "ArizonaCityLakeHavasuCitycity";
	}   
@RequestMapping(value = "/states/Washington/counties/Asotin-County", method = RequestMethod.GET)
	public String getWashingtonCountyAsotinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53003");
		return "WashingtonCountyAsotinCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Clallam-County", method = RequestMethod.GET)
	public String getWashingtonCountyClallamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53009");
		return "WashingtonCountyClallamCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Sayre", method = RequestMethod.GET)
	public String getPennsylvaniaMicroSayre(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42380");
		return "PennsylvaniaMicroSayre";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Edina-city", method = RequestMethod.GET)
	public String getMinnesotaCityEdinacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2718188");
		return "MinnesotaCityEdinacity";
	}   
@RequestMapping(value = "/states/Washington/counties/Chelan-County", method = RequestMethod.GET)
	public String getWashingtonCountyChelanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53007");
		return "WashingtonCountyChelanCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Lamar-County", method = RequestMethod.GET)
	public String getMississippiCountyLamarCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28073");
		return "MississippiCountyLamarCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Multnomah-County", method = RequestMethod.GET)
	public String getOregonCountyMultnomahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41051");
		return "OregonCountyMultnomahCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Lafayette-County", method = RequestMethod.GET)
	public String getMississippiCountyLafayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28071");
		return "MississippiCountyLafayetteCounty";
	}   
@RequestMapping(value = "/states/Alabama/metros/Birmingham-Hoover", method = RequestMethod.GET)
	public String getAlabamaMetroBirminghamHoover(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13820");
		return "AlabamaMetroBirminghamHoover";
	}   
@RequestMapping(value = "/states/Illinois/cities/Gurnee-village", method = RequestMethod.GET)
	public String getIllinoisCityGurneevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1732018");
		return "IllinoisCityGurneevillage";
	}   
@RequestMapping(value = "/states/Kansas/counties/Montgomery-County", method = RequestMethod.GET)
	public String getKansasCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20125");
		return "KansasCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Linn-County", method = RequestMethod.GET)
	public String getOregonCountyLinnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41043");
		return "OregonCountyLinnCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Muscatine-County", method = RequestMethod.GET)
	public String getIowaCountyMuscatineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19139");
		return "IowaCountyMuscatineCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Lincoln-County", method = RequestMethod.GET)
	public String getOregonCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41041");
		return "OregonCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Miami-County", method = RequestMethod.GET)
	public String getKansasCountyMiamiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20121");
		return "KansasCountyMiamiCounty";
	}   
@RequestMapping(value = "/states/Oregon/counties/Marion-County", method = RequestMethod.GET)
	public String getOregonCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41047");
		return "OregonCountyMarionCounty";
	}   
@RequestMapping(value = "/states/California/cities/Livermore-city", method = RequestMethod.GET)
	public String getCaliforniaCityLivermorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "641992");
		return "CaliforniaCityLivermorecity";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Ridgeland-city", method = RequestMethod.GET)
	public String getMississippiCityRidgelandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2862520");
		return "MississippiCityRidgelandcity";
	}   
@RequestMapping(value = "/states/Oregon/counties/Malheur-County", method = RequestMethod.GET)
	public String getOregonCountyMalheurCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41045");
		return "OregonCountyMalheurCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Edwardsville-city", method = RequestMethod.GET)
	public String getIllinoisCityEdwardsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1722697");
		return "IllinoisCityEdwardsvillecity";
	}   
@RequestMapping(value = "/states/Texas/cities/The-Woodlands", method = RequestMethod.GET)
	public String getTexasCityTheWoodlands(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4872656");
		return "TexasCityTheWoodlands";
	}   
@RequestMapping(value = "/states/New-York/cities/Rome-city", method = RequestMethod.GET)
	public String getNew_YorkCityRomecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3663418");
		return "New_YorkCityRomecity";
	}   
@RequestMapping(value = "/states/Washington/counties/Clark-County", method = RequestMethod.GET)
	public String getWashingtonCountyClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53011");
		return "WashingtonCountyClarkCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/South-Bend-city", method = RequestMethod.GET)
	public String getIndianaCitySouthBendcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1871000");
		return "IndianaCitySouthBendcity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Madison-County", method = RequestMethod.GET)
	public String getMississippiCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28089");
		return "MississippiCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Mount-Vernon-city", method = RequestMethod.GET)
	public String getNew_YorkCityMountVernoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3649121");
		return "New_YorkCityMountVernoncity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Lowndes-County", method = RequestMethod.GET)
	public String getMississippiCountyLowndesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28087");
		return "MississippiCountyLowndesCounty";
	}   
@RequestMapping(value = "/states/Washington/counties/Cowlitz-County", method = RequestMethod.GET)
	public String getWashingtonCountyCowlitzCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53015");
		return "WashingtonCountyCowlitzCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Mineral-Wells", method = RequestMethod.GET)
	public String getTexasMicroMineralWells(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33420");
		return "TexasMicroMineralWells";
	}   
@RequestMapping(value = "/states/California/cities/Reedley-city", method = RequestMethod.GET)
	public String getCaliforniaCityReedleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "660242");
		return "CaliforniaCityReedleycity";
	}   
@RequestMapping(value = "/states/New-York/cities/New-City", method = RequestMethod.GET)
	public String getNew_YorkCityNewCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3650100");
		return "New_YorkCityNewCity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/WilkesBarre-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityWilkesBarrecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4285152");
		return "PennsylvaniaCityWilkesBarrecity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Fort-Leonard-Wood", method = RequestMethod.GET)
	public String getMissouriMicroFortLeonardWood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22780");
		return "MissouriMicroFortLeonardWood";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Lee-County", method = RequestMethod.GET)
	public String getMississippiCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28081");
		return "MississippiCountyLeeCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Cedar-Hill-city", method = RequestMethod.GET)
	public String getTexasCityCedarHillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4813492");
		return "TexasCityCedarHillcity";
	}   
@RequestMapping(value = "/states/Washington/counties/Douglas-County", method = RequestMethod.GET)
	public String getWashingtonCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53017");
		return "WashingtonCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Lincoln-County", method = RequestMethod.GET)
	public String getMississippiCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28085");
		return "MississippiCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Redan", method = RequestMethod.GET)
	public String getGeorgiaCityRedan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1363952");
		return "GeorgiaCityRedan";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Leflore-County", method = RequestMethod.GET)
	public String getMississippiCountyLefloreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28083");
		return "MississippiCountyLefloreCounty";
	}   
@RequestMapping(value = "/states/Iowa/metros/Ames", method = RequestMethod.GET)
	public String getIowaMetroAmes(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11180");
		return "IowaMetroAmes";
	}   
@RequestMapping(value = "/states/Texas/counties/Victoria-County", method = RequestMethod.GET)
	public String getTexasCountyVictoriaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48469");
		return "TexasCountyVictoriaCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/South-Bradenton", method = RequestMethod.GET)
	public String getFloridaCitySouthBradenton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1267258");
		return "FloridaCitySouthBradenton";
	}   
@RequestMapping(value = "/states/Illinois/cities/Bloomington-city", method = RequestMethod.GET)
	public String getIllinoisCityBloomingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1706613");
		return "IllinoisCityBloomingtoncity";
	}   
@RequestMapping(value = "/states/California/cities/Los-Gatos-town", method = RequestMethod.GET)
	public String getCaliforniaCityLosGatostown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "644112");
		return "CaliforniaCityLosGatostown";
	}   
@RequestMapping(value = "/states/Texas/counties/Van-Zandt-County", method = RequestMethod.GET)
	public String getTexasCountyVanZandtCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48467");
		return "TexasCountyVanZandtCounty";
	}   
@RequestMapping(value = "/states/Vermont/metros/BurlingtonSouth-Burlington", method = RequestMethod.GET)
	public String getVermontMetroBurlingtonSouthBurlington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15540");
		return "VermontMetroBurlingtonSouthBurlington";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Lexington", method = RequestMethod.GET)
	public String getMassachusettsCityLexington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2535250");
		return "MassachusettsCityLexington";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Charlotte-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityCharlottecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3712000");
		return "North_CarolinaCityCharlottecity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Perry-Hall", method = RequestMethod.GET)
	public String getMarylandCityPerryHall(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2460975");
		return "MarylandCityPerryHall";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Overton-County", method = RequestMethod.GET)
	public String getTennesseeCountyOvertonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47133");
		return "TennesseeCountyOvertonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Val-Verde-County", method = RequestMethod.GET)
	public String getTexasCountyValVerdeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48465");
		return "TexasCountyValVerdeCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Franklin-Farm", method = RequestMethod.GET)
	public String getVirginiaCityFranklinFarm(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5129628");
		return "VirginiaCityFranklinFarm";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Obion-County", method = RequestMethod.GET)
	public String getTennesseeCountyObionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47131");
		return "TennesseeCountyObionCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Uvalde-County", method = RequestMethod.GET)
	public String getTexasCountyUvaldeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48463");
		return "TexasCountyUvaldeCounty";
	}   
@RequestMapping(value = "/states/California/cities/Oakley-city", method = RequestMethod.GET)
	public String getCaliforniaCityOakleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "653070");
		return "CaliforniaCityOakleycity";
	}   
@RequestMapping(value = "/states/Missouri/micros/West-Plains", method = RequestMethod.GET)
	public String getMissouriMicroWestPlains(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48460");
		return "MissouriMicroWestPlains";
	}   
@RequestMapping(value = "/states/Texas/cities/Corsicana-city", method = RequestMethod.GET)
	public String getTexasCityCorsicanacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4817060");
		return "TexasCityCorsicanacity";
	}   
@RequestMapping(value = "/states/Delaware/metros-Delaware", method = RequestMethod.GET)
	public String getmetros_Delaware(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Delaware";
	}   
@RequestMapping(value = "/states/Delaware/micros-Delaware", method = RequestMethod.GET)
	public String getmicros_Delaware(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Delaware";
	}   
@RequestMapping(value = "/states/Delaware/cities-Delaware", method = RequestMethod.GET)
	public String getcities_Delaware(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Delaware";
	}   
@RequestMapping(value = "/states/Delaware/counties-Delaware", method = RequestMethod.GET)
	public String getcounties_Delaware(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Delaware";
	}   
@RequestMapping(value = "/states/Delaware", method = RequestMethod.GET)
	public String getDelaware(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10");
		return "Delaware";
	}   
@RequestMapping(value = "/states/District-of-Columbia/metros-District-of-Columbia", method = RequestMethod.GET)
	public String getmetros_District_of_Columbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_District_of_Columbia";
	}   
@RequestMapping(value = "/states/District-of-Columbia/micros-District-of-Columbia", method = RequestMethod.GET)
	public String getmicros_District_of_Columbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_District_of_Columbia";
	}   
@RequestMapping(value = "/states/District-of-Columbia/cities-District-of-Columbia", method = RequestMethod.GET)
	public String getcities_District_of_Columbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_District_of_Columbia";
	}   
@RequestMapping(value = "/states/District-of-Columbia/counties-District-of-Columbia", method = RequestMethod.GET)
	public String getcounties_District_of_Columbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_District_of_Columbia";
	}   
@RequestMapping(value = "/states/District-of-Columbia", method = RequestMethod.GET)
	public String getDistrict_of_Columbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11");
		return "District_of_Columbia";
	}   
@RequestMapping(value = "/states/Florida/metros-Florida", method = RequestMethod.GET)
	public String getmetros_Florida(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Florida";
	}   
@RequestMapping(value = "/states/Florida/micros-Florida", method = RequestMethod.GET)
	public String getmicros_Florida(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Florida";
	}   
@RequestMapping(value = "/states/Florida/cities-Florida", method = RequestMethod.GET)
	public String getcities_Florida(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Florida";
	}   
@RequestMapping(value = "/states/Florida/counties-Florida", method = RequestMethod.GET)
	public String getcounties_Florida(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Florida";
	}   
@RequestMapping(value = "/states/Florida", method = RequestMethod.GET)
	public String getFlorida(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12");
		return "Florida";
	}   
@RequestMapping(value = "/states/California/counties/Alameda-County", method = RequestMethod.GET)
	public String getCaliforniaCountyAlamedaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6001");
		return "CaliforniaCountyAlamedaCounty";
	}   
@RequestMapping(value = "/states/Georgia/metros-Georgia", method = RequestMethod.GET)
	public String getmetros_Georgia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Georgia";
	}   
@RequestMapping(value = "/states/Georgia/micros-Georgia", method = RequestMethod.GET)
	public String getmicros_Georgia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Georgia";
	}   
@RequestMapping(value = "/states/Georgia/cities-Georgia", method = RequestMethod.GET)
	public String getcities_Georgia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Georgia";
	}   
@RequestMapping(value = "/states/Georgia/counties-Georgia", method = RequestMethod.GET)
	public String getcounties_Georgia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Georgia";
	}   
@RequestMapping(value = "/states/Georgia", method = RequestMethod.GET)
	public String getGeorgia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13");
		return "Georgia";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Morgan-County", method = RequestMethod.GET)
	public String getTennesseeCountyMorganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47129");
		return "TennesseeCountyMorganCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Upshur-County", method = RequestMethod.GET)
	public String getTexasCountyUpshurCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48459");
		return "TexasCountyUpshurCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Orocovis-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyOrocovisMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72107");
		return "Puerto_RicoCountyOrocovisMunicipio";
	}   
@RequestMapping(value = "/states/Hawaii/metros-Hawaii", method = RequestMethod.GET)
	public String getmetros_Hawaii(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Hawaii";
	}   
@RequestMapping(value = "/states/Hawaii/micros-Hawaii", method = RequestMethod.GET)
	public String getmicros_Hawaii(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Hawaii";
	}   
@RequestMapping(value = "/states/Hawaii/cities-Hawaii", method = RequestMethod.GET)
	public String getcities_Hawaii(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Hawaii";
	}   
@RequestMapping(value = "/states/Hawaii/counties-Hawaii", method = RequestMethod.GET)
	public String getcounties_Hawaii(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Hawaii";
	}   
@RequestMapping(value = "/states/Hawaii", method = RequestMethod.GET)
	public String getHawaii(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15");
		return "Hawaii";
	}   
@RequestMapping(value = "/states/Texas/counties/Tyler-County", method = RequestMethod.GET)
	public String getTexasCountyTylerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48457");
		return "TexasCountyTylerCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Naranjito-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyNaranjitoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72105");
		return "Puerto_RicoCountyNaranjitoMunicipio";
	}   
@RequestMapping(value = "/states/Idaho/metros-Idaho", method = RequestMethod.GET)
	public String getmetros_Idaho(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Idaho";
	}   
@RequestMapping(value = "/states/Idaho/micros-Idaho", method = RequestMethod.GET)
	public String getmicros_Idaho(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Idaho";
	}   
@RequestMapping(value = "/states/Idaho/cities-Idaho", method = RequestMethod.GET)
	public String getcities_Idaho(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Idaho";
	}   
@RequestMapping(value = "/states/Idaho/counties-Idaho", method = RequestMethod.GET)
	public String getcounties_Idaho(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Idaho";
	}   
@RequestMapping(value = "/states/Idaho", method = RequestMethod.GET)
	public String getIdaho(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16");
		return "Idaho";
	}   
@RequestMapping(value = "/states/Indiana/cities/Crown-Point-city", method = RequestMethod.GET)
	public String getIndianaCityCrownPointcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1816138");
		return "IndianaCityCrownPointcity";
	}   
@RequestMapping(value = "/states/California/counties/Amador-County", method = RequestMethod.GET)
	public String getCaliforniaCountyAmadorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6005");
		return "CaliforniaCountyAmadorCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Quincy", method = RequestMethod.GET)
	public String getIllinoisMicroQuincy(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39500");
		return "IllinoisMicroQuincy";
	}   
@RequestMapping(value = "/states/Illinois/metros-Illinois", method = RequestMethod.GET)
	public String getmetros_Illinois(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Illinois";
	}   
@RequestMapping(value = "/states/Illinois/micros-Illinois", method = RequestMethod.GET)
	public String getmicros_Illinois(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Illinois";
	}   
@RequestMapping(value = "/states/Illinois/cities-Illinois", method = RequestMethod.GET)
	public String getcities_Illinois(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Illinois";
	}   
@RequestMapping(value = "/states/Illinois/counties-Illinois", method = RequestMethod.GET)
	public String getcounties_Illinois(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Illinois";
	}   
@RequestMapping(value = "/states/Illinois", method = RequestMethod.GET)
	public String getIllinois(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17");
		return "Illinois";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Montgomery-County", method = RequestMethod.GET)
	public String getTennesseeCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47125");
		return "TennesseeCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Naguabo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyNaguaboMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72103");
		return "Puerto_RicoCountyNaguaboMunicipio";
	}   
@RequestMapping(value = "/states/Louisiana/micros/Bogalusa", method = RequestMethod.GET)
	public String getLouisianaMicroBogalusa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14220");
		return "LouisianaMicroBogalusa";
	}   
@RequestMapping(value = "/states/Indiana/metros-Indiana", method = RequestMethod.GET)
	public String getmetros_Indiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Indiana";
	}   
@RequestMapping(value = "/states/Indiana/micros-Indiana", method = RequestMethod.GET)
	public String getmicros_Indiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Indiana";
	}   
@RequestMapping(value = "/states/Indiana/cities-Indiana", method = RequestMethod.GET)
	public String getcities_Indiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Indiana";
	}   
@RequestMapping(value = "/states/Indiana/counties-Indiana", method = RequestMethod.GET)
	public String getcounties_Indiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Indiana";
	}   
@RequestMapping(value = "/states/Indiana", method = RequestMethod.GET)
	public String getIndiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18");
		return "Indiana";
	}   
@RequestMapping(value = "/states/Illinois/cities/Wheeling-village", method = RequestMethod.GET)
	public String getIllinoisCityWheelingvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1781087");
		return "IllinoisCityWheelingvillage";
	}   
@RequestMapping(value = "/states/Iowa/metros-Iowa", method = RequestMethod.GET)
	public String getmetros_Iowa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Iowa";
	}   
@RequestMapping(value = "/states/Iowa/micros-Iowa", method = RequestMethod.GET)
	public String getmicros_Iowa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Iowa";
	}   
@RequestMapping(value = "/states/Iowa/cities-Iowa", method = RequestMethod.GET)
	public String getcities_Iowa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Iowa";
	}   
@RequestMapping(value = "/states/Iowa/counties-Iowa", method = RequestMethod.GET)
	public String getcounties_Iowa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Iowa";
	}   
@RequestMapping(value = "/states/Iowa", method = RequestMethod.GET)
	public String getIowa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19");
		return "Iowa";
	}   
@RequestMapping(value = "/states/Alabama/cities/Prichard-city", method = RequestMethod.GET)
	public String getAlabamaCityPrichardcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "162496");
		return "AlabamaCityPrichardcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Morovis-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyMorovisMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72101");
		return "Puerto_RicoCountyMorovisMunicipio";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Sanford", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroSanford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41820");
		return "North_CarolinaMicroSanford";
	}   
@RequestMapping(value = "/states/Maryland/cities/Germantown", method = RequestMethod.GET)
	public String getMarylandCityGermantown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2432025");
		return "MarylandCityGermantown";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Kenosha-city", method = RequestMethod.GET)
	public String getWisconsinCityKenoshacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5539225");
		return "WisconsinCityKenoshacity";
	}   
@RequestMapping(value = "/states/Texas/micros/El-Campo", method = RequestMethod.GET)
	public String getTexasMicroElCampo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20900");
		return "TexasMicroElCampo";
	}   
@RequestMapping(value = "/states/South-Carolina/micros/Newberry", method = RequestMethod.GET)
	public String getSouth_CarolinaMicroNewberry(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35140");
		return "South_CarolinaMicroNewberry";
	}   
@RequestMapping(value = "/states/California/cities/San-Buenaventura-Ventura-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanBuenaventuraVenturacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "665042");
		return "CaliforniaCitySanBuenaventuraVenturacity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Arlington", method = RequestMethod.GET)
	public String getVirginiaCityArlington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5103000");
		return "VirginiaCityArlington";
	}   
@RequestMapping(value = "/states/Missouri/micros/Kirksville", method = RequestMethod.GET)
	public String getMissouriMicroKirksville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28860");
		return "MissouriMicroKirksville";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Monroe-County", method = RequestMethod.GET)
	public String getTennesseeCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47123");
		return "TennesseeCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Travis-County", method = RequestMethod.GET)
	public String getTexasCountyTravisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48453");
		return "TexasCountyTravisCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Landover", method = RequestMethod.GET)
	public String getMarylandCityLandover(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2445325");
		return "MarylandCityLandover";
	}   
@RequestMapping(value = "/states/Texas/counties/Tom-Green-County", method = RequestMethod.GET)
	public String getTexasCountyTomGreenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48451");
		return "TexasCountyTomGreenCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Zanesville", method = RequestMethod.GET)
	public String getOhioMicroZanesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49780");
		return "OhioMicroZanesville";
	}   
@RequestMapping(value = "/states/Kansas/metros-Kansas", method = RequestMethod.GET)
	public String getmetros_Kansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Kansas";
	}   
@RequestMapping(value = "/states/Kansas/micros-Kansas", method = RequestMethod.GET)
	public String getmicros_Kansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Kansas";
	}   
@RequestMapping(value = "/states/Kansas/cities-Kansas", method = RequestMethod.GET)
	public String getcities_Kansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Kansas";
	}   
@RequestMapping(value = "/states/Kansas/counties-Kansas", method = RequestMethod.GET)
	public String getcounties_Kansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Kansas";
	}   
@RequestMapping(value = "/states/Kansas", method = RequestMethod.GET)
	public String getKansas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20");
		return "Kansas";
	}   
@RequestMapping(value = "/states/Georgia/cities/Athens", method = RequestMethod.GET)
	public String getGeorgiaCityAthens(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1303440");
		return "GeorgiaCityAthens";
	}   
@RequestMapping(value = "/states/Kansas/cities/Lawrence-city", method = RequestMethod.GET)
	public String getKansasCityLawrencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2038900");
		return "KansasCityLawrencecity";
	}   
@RequestMapping(value = "/states/Kentucky/metros-Kentucky", method = RequestMethod.GET)
	public String getmetros_Kentucky(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Kentucky";
	}   
@RequestMapping(value = "/states/Kentucky/micros-Kentucky", method = RequestMethod.GET)
	public String getmicros_Kentucky(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Kentucky";
	}   
@RequestMapping(value = "/states/Kentucky/cities-Kentucky", method = RequestMethod.GET)
	public String getcities_Kentucky(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Kentucky";
	}   
@RequestMapping(value = "/states/Kentucky/counties-Kentucky", method = RequestMethod.GET)
	public String getcounties_Kentucky(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Kentucky";
	}   
@RequestMapping(value = "/states/Kentucky", method = RequestMethod.GET)
	public String getKentucky(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21");
		return "Kentucky";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Maury-County", method = RequestMethod.GET)
	public String getTennesseeCountyMauryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47119");
		return "TennesseeCountyMauryCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Ro-Grande-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyRoGrandeMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72119");
		return "Puerto_RicoCountyRoGrandeMunicipio";
	}   
@RequestMapping(value = "/states/Louisiana/metros-Louisiana", method = RequestMethod.GET)
	public String getmetros_Louisiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Louisiana";
	}   
@RequestMapping(value = "/states/Louisiana/micros-Louisiana", method = RequestMethod.GET)
	public String getmicros_Louisiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Louisiana";
	}   
@RequestMapping(value = "/states/Louisiana/cities-Louisiana", method = RequestMethod.GET)
	public String getcities_Louisiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Louisiana";
	}   
@RequestMapping(value = "/states/Louisiana/counties-Louisiana", method = RequestMethod.GET)
	public String getcounties_Louisiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Louisiana";
	}   
@RequestMapping(value = "/states/Louisiana", method = RequestMethod.GET)
	public String getLouisiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22");
		return "Louisiana";
	}   
@RequestMapping(value = "/states/Maine/metros-Maine", method = RequestMethod.GET)
	public String getmetros_Maine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Maine";
	}   
@RequestMapping(value = "/states/Maine/micros-Maine", method = RequestMethod.GET)
	public String getmicros_Maine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Maine";
	}   
@RequestMapping(value = "/states/Maine/cities-Maine", method = RequestMethod.GET)
	public String getcities_Maine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Maine";
	}   
@RequestMapping(value = "/states/Maine/counties-Maine", method = RequestMethod.GET)
	public String getcounties_Maine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Maine";
	}   
@RequestMapping(value = "/states/Maine", method = RequestMethod.GET)
	public String getMaine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23");
		return "Maine";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Marshall-County", method = RequestMethod.GET)
	public String getTennesseeCountyMarshallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47117");
		return "TennesseeCountyMarshallCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Titus-County", method = RequestMethod.GET)
	public String getTexasCountyTitusCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48449");
		return "TexasCountyTitusCounty";
	}   
@RequestMapping(value = "/states/Maryland/metros-Maryland", method = RequestMethod.GET)
	public String getmetros_Maryland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Maryland";
	}   
@RequestMapping(value = "/states/Maryland/micros-Maryland", method = RequestMethod.GET)
	public String getmicros_Maryland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Maryland";
	}   
@RequestMapping(value = "/states/Maryland/cities-Maryland", method = RequestMethod.GET)
	public String getcities_Maryland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Maryland";
	}   
@RequestMapping(value = "/states/Maryland/counties-Maryland", method = RequestMethod.GET)
	public String getcounties_Maryland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Maryland";
	}   
@RequestMapping(value = "/states/Maryland", method = RequestMethod.GET)
	public String getMaryland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24");
		return "Maryland";
	}   
@RequestMapping(value = "/states/California/cities/San-Carlos-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanCarloscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "665070");
		return "CaliforniaCitySanCarloscity";
	}   
@RequestMapping(value = "/states/California/counties/Colusa-County", method = RequestMethod.GET)
	public String getCaliforniaCountyColusaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6011");
		return "CaliforniaCountyColusaCounty";
	}   
@RequestMapping(value = "/states/New-York/micros/Olean", method = RequestMethod.GET)
	public String getNew_YorkMicroOlean(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36460");
		return "New_YorkMicroOlean";
	}   
@RequestMapping(value = "/states/Massachusetts/metros-Massachusetts", method = RequestMethod.GET)
	public String getmetros_Massachusetts(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Massachusetts";
	}   
@RequestMapping(value = "/states/Massachusetts/micros-Massachusetts", method = RequestMethod.GET)
	public String getmicros_Massachusetts(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Massachusetts";
	}   
@RequestMapping(value = "/states/Massachusetts/cities-Massachusetts", method = RequestMethod.GET)
	public String getcities_Massachusetts(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Massachusetts";
	}   
@RequestMapping(value = "/states/Massachusetts/counties-Massachusetts", method = RequestMethod.GET)
	public String getcounties_Massachusetts(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Massachusetts";
	}   
@RequestMapping(value = "/states/Massachusetts", method = RequestMethod.GET)
	public String getMassachusetts(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25");
		return "Massachusetts";
	}   
@RequestMapping(value = "/states/Illinois/cities/Roselle-village", method = RequestMethod.GET)
	public String getIllinoisCityRosellevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1765806");
		return "IllinoisCityRosellevillage";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Marion-County", method = RequestMethod.GET)
	public String getTennesseeCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47115");
		return "TennesseeCountyMarionCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Quebradillas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyQuebradillasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72115");
		return "Puerto_RicoCountyQuebradillasMunicipio";
	}   
@RequestMapping(value = "/states/Michigan/metros-Michigan", method = RequestMethod.GET)
	public String getmetros_Michigan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Michigan";
	}   
@RequestMapping(value = "/states/Michigan/micros-Michigan", method = RequestMethod.GET)
	public String getmicros_Michigan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Michigan";
	}   
@RequestMapping(value = "/states/Michigan/cities-Michigan", method = RequestMethod.GET)
	public String getcities_Michigan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Michigan";
	}   
@RequestMapping(value = "/states/Michigan/counties-Michigan", method = RequestMethod.GET)
	public String getcounties_Michigan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Michigan";
	}   
@RequestMapping(value = "/states/Michigan", method = RequestMethod.GET)
	public String getMichigan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26");
		return "Michigan";
	}   
@RequestMapping(value = "/states/California/counties/Contra-Costa-County", method = RequestMethod.GET)
	public String getCaliforniaCountyContraCostaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6013");
		return "CaliforniaCountyContraCostaCounty";
	}   
@RequestMapping(value = "/states/Minnesota/metros-Minnesota", method = RequestMethod.GET)
	public String getmetros_Minnesota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Minnesota";
	}   
@RequestMapping(value = "/states/Minnesota/micros-Minnesota", method = RequestMethod.GET)
	public String getmicros_Minnesota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Minnesota";
	}   
@RequestMapping(value = "/states/Minnesota/cities-Minnesota", method = RequestMethod.GET)
	public String getcities_Minnesota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Minnesota";
	}   
@RequestMapping(value = "/states/Minnesota/counties-Minnesota", method = RequestMethod.GET)
	public String getcounties_Minnesota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Minnesota";
	}   
@RequestMapping(value = "/states/Minnesota", method = RequestMethod.GET)
	public String getMinnesota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27");
		return "Minnesota";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Madison-County", method = RequestMethod.GET)
	public String getTennesseeCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47113");
		return "TennesseeCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Ponce-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyPonceMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72113");
		return "Puerto_RicoCountyPonceMunicipio";
	}   
@RequestMapping(value = "/states/Mississippi/metros-Mississippi", method = RequestMethod.GET)
	public String getmetros_Mississippi(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Mississippi";
	}   
@RequestMapping(value = "/states/Mississippi/micros-Mississippi", method = RequestMethod.GET)
	public String getmicros_Mississippi(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Mississippi";
	}   
@RequestMapping(value = "/states/Mississippi/cities-Mississippi", method = RequestMethod.GET)
	public String getcities_Mississippi(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Mississippi";
	}   
@RequestMapping(value = "/states/Mississippi/counties-Mississippi", method = RequestMethod.GET)
	public String getcounties_Mississippi(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Mississippi";
	}   
@RequestMapping(value = "/states/Mississippi", method = RequestMethod.GET)
	public String getMississippi(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28");
		return "Mississippi";
	}   
@RequestMapping(value = "/states/California/counties/Del-Norte-County", method = RequestMethod.GET)
	public String getCaliforniaCountyDelNorteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6015");
		return "CaliforniaCountyDelNorteCounty";
	}   
@RequestMapping(value = "/states/Missouri/metros-Missouri", method = RequestMethod.GET)
	public String getmetros_Missouri(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Missouri";
	}   
@RequestMapping(value = "/states/Missouri/micros-Missouri", method = RequestMethod.GET)
	public String getmicros_Missouri(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Missouri";
	}   
@RequestMapping(value = "/states/Missouri/cities-Missouri", method = RequestMethod.GET)
	public String getcities_Missouri(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Missouri";
	}   
@RequestMapping(value = "/states/Missouri/counties-Missouri", method = RequestMethod.GET)
	public String getcounties_Missouri(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Missouri";
	}   
@RequestMapping(value = "/states/Missouri", method = RequestMethod.GET)
	public String getMissouri(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29");
		return "Missouri";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Penuelas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyPenuelasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72111");
		return "Puerto_RicoCountyPenuelasMunicipio";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Janesville-Beloit", method = RequestMethod.GET)
	public String getWisconsinMetroJanesvilleBeloit(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27500");
		return "WisconsinMetroJanesvilleBeloit";
	}   
@RequestMapping(value = "/states/Florida/cities/Naples-city", method = RequestMethod.GET)
	public String getFloridaCityNaplescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1247625");
		return "FloridaCityNaplescity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Ann-Arbor-city", method = RequestMethod.GET)
	public String getMichiganCityAnnArborcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2603000");
		return "MichiganCityAnnArborcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Plainview-city", method = RequestMethod.GET)
	public String getTexasCityPlainviewcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4857980");
		return "TexasCityPlainviewcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Leander-city", method = RequestMethod.GET)
	public String getTexasCityLeandercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4842016");
		return "TexasCityLeandercity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Frankfort", method = RequestMethod.GET)
	public String getIndianaMicroFrankfort(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23140");
		return "IndianaMicroFrankfort";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Maple-Grove-city", method = RequestMethod.GET)
	public String getMinnesotaCityMapleGrovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2740166");
		return "MinnesotaCityMapleGrovecity";
	}   
@RequestMapping(value = "/states/California/cities/Pittsburg-city", method = RequestMethod.GET)
	public String getCaliforniaCityPittsburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "657456");
		return "CaliforniaCityPittsburgcity";
	}   
@RequestMapping(value = "/states/California/counties/Butte-County", method = RequestMethod.GET)
	public String getCaliforniaCountyButteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6007");
		return "CaliforniaCountyButteCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Macon-County", method = RequestMethod.GET)
	public String getTennesseeCountyMaconCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47111");
		return "TennesseeCountyMaconCounty";
	}   
@RequestMapping(value = "/states/California/counties/Calaveras-County", method = RequestMethod.GET)
	public String getCaliforniaCountyCalaverasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6009");
		return "CaliforniaCountyCalaverasCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Taylor-County", method = RequestMethod.GET)
	public String getTexasCountyTaylorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48441");
		return "TexasCountyTaylorCounty";
	}   
@RequestMapping(value = "/states/Montana/metros-Montana", method = RequestMethod.GET)
	public String getmetros_Montana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Montana";
	}   
@RequestMapping(value = "/states/Montana/micros-Montana", method = RequestMethod.GET)
	public String getmicros_Montana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Montana";
	}   
@RequestMapping(value = "/states/Montana/cities-Montana", method = RequestMethod.GET)
	public String getcities_Montana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Montana";
	}   
@RequestMapping(value = "/states/Montana/counties-Montana", method = RequestMethod.GET)
	public String getcounties_Montana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Montana";
	}   
@RequestMapping(value = "/states/Montana", method = RequestMethod.GET)
	public String getMontana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30");
		return "Montana";
	}   
@RequestMapping(value = "/states/Nebraska/metros-Nebraska", method = RequestMethod.GET)
	public String getmetros_Nebraska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Nebraska";
	}   
@RequestMapping(value = "/states/Nebraska/micros-Nebraska", method = RequestMethod.GET)
	public String getmicros_Nebraska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Nebraska";
	}   
@RequestMapping(value = "/states/Nebraska/cities-Nebraska", method = RequestMethod.GET)
	public String getcities_Nebraska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Nebraska";
	}   
@RequestMapping(value = "/states/Nebraska/counties-Nebraska", method = RequestMethod.GET)
	public String getcounties_Nebraska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Nebraska";
	}   
@RequestMapping(value = "/states/Nebraska", method = RequestMethod.GET)
	public String getNebraska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31");
		return "Nebraska";
	}   
@RequestMapping(value = "/states/Nevada/metros-Nevada", method = RequestMethod.GET)
	public String getmetros_Nevada(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Nevada";
	}   
@RequestMapping(value = "/states/Nevada/micros-Nevada", method = RequestMethod.GET)
	public String getmicros_Nevada(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Nevada";
	}   
@RequestMapping(value = "/states/Nevada/cities-Nevada", method = RequestMethod.GET)
	public String getcities_Nevada(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Nevada";
	}   
@RequestMapping(value = "/states/Nevada/counties-Nevada", method = RequestMethod.GET)
	public String getcounties_Nevada(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Nevada";
	}   
@RequestMapping(value = "/states/Nevada", method = RequestMethod.GET)
	public String getNevada(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32");
		return "Nevada";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Reading", method = RequestMethod.GET)
	public String getMassachusettsCityReading(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2556165");
		return "MassachusettsCityReading";
	}   
@RequestMapping(value = "/states/California/counties/Glenn-County", method = RequestMethod.GET)
	public String getCaliforniaCountyGlennCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6021");
		return "CaliforniaCountyGlennCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/metros-New-Hampshire", method = RequestMethod.GET)
	public String getmetros_New_Hampshire(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_New_Hampshire";
	}   
@RequestMapping(value = "/states/New-Hampshire/micros-New-Hampshire", method = RequestMethod.GET)
	public String getmicros_New_Hampshire(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_New_Hampshire";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities-New-Hampshire", method = RequestMethod.GET)
	public String getcities_New_Hampshire(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_New_Hampshire";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties-New-Hampshire", method = RequestMethod.GET)
	public String getcounties_New_Hampshire(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_New_Hampshire";
	}   
@RequestMapping(value = "/states/New-Hampshire", method = RequestMethod.GET)
	public String getNew_Hampshire(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33");
		return "New_Hampshire";
	}   
@RequestMapping(value = "/states/Illinois/cities/Geneva-city", method = RequestMethod.GET)
	public String getIllinoisCityGenevacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1728872");
		return "IllinoisCityGenevacity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/McNairy-County", method = RequestMethod.GET)
	public String getTennesseeCountyMcNairyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47109");
		return "TennesseeCountyMcNairyCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Tarrant-County", method = RequestMethod.GET)
	public String getTexasCountyTarrantCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48439");
		return "TexasCountyTarrantCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/metros-New-Jersey", method = RequestMethod.GET)
	public String getmetros_New_Jersey(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_New_Jersey";
	}   
@RequestMapping(value = "/states/New-Jersey/micros-New-Jersey", method = RequestMethod.GET)
	public String getmicros_New_Jersey(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_New_Jersey";
	}   
@RequestMapping(value = "/states/New-Jersey/cities-New-Jersey", method = RequestMethod.GET)
	public String getcities_New_Jersey(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_New_Jersey";
	}   
@RequestMapping(value = "/states/New-Jersey/counties-New-Jersey", method = RequestMethod.GET)
	public String getcounties_New_Jersey(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_New_Jersey";
	}   
@RequestMapping(value = "/states/New-Jersey", method = RequestMethod.GET)
	public String getNew_Jersey(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34");
		return "New_Jersey";
	}   
@RequestMapping(value = "/states/California/counties/Humboldt-County", method = RequestMethod.GET)
	public String getCaliforniaCountyHumboldtCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6023");
		return "CaliforniaCountyHumboldtCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/metros-New-Mexico", method = RequestMethod.GET)
	public String getmetros_New_Mexico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_New_Mexico";
	}   
@RequestMapping(value = "/states/New-Mexico/micros-New-Mexico", method = RequestMethod.GET)
	public String getmicros_New_Mexico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_New_Mexico";
	}   
@RequestMapping(value = "/states/New-Mexico/cities-New-Mexico", method = RequestMethod.GET)
	public String getcities_New_Mexico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_New_Mexico";
	}   
@RequestMapping(value = "/states/New-Mexico/counties-New-Mexico", method = RequestMethod.GET)
	public String getcounties_New_Mexico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_New_Mexico";
	}   
@RequestMapping(value = "/states/New-Mexico", method = RequestMethod.GET)
	public String getNew_Mexico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35");
		return "New_Mexico";
	}   
@RequestMapping(value = "/states/Tennessee/counties/McMinn-County", method = RequestMethod.GET)
	public String getTennesseeCountyMcMinnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47107");
		return "TennesseeCountyMcMinnCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/San-Lorenzo-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountySanLorenzoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72129");
		return "Puerto_RicoCountySanLorenzoMunicipio";
	}   
@RequestMapping(value = "/states/New-York/metros-New-York", method = RequestMethod.GET)
	public String getmetros_New_York(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_New_York";
	}   
@RequestMapping(value = "/states/New-York/micros-New-York", method = RequestMethod.GET)
	public String getmicros_New_York(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_New_York";
	}   
@RequestMapping(value = "/states/New-York/cities-New-York", method = RequestMethod.GET)
	public String getcities_New_York(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_New_York";
	}   
@RequestMapping(value = "/states/New-York/counties-New-York", method = RequestMethod.GET)
	public String getcounties_New_York(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_New_York";
	}   
@RequestMapping(value = "/states/New-York", method = RequestMethod.GET)
	public String getNew_York(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36");
		return "New_York";
	}   
@RequestMapping(value = "/states/California/counties/Imperial-County", method = RequestMethod.GET)
	public String getCaliforniaCountyImperialCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6025");
		return "CaliforniaCountyImperialCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/metros-North-Carolina", method = RequestMethod.GET)
	public String getmetros_North_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_North_Carolina";
	}   
@RequestMapping(value = "/states/North-Carolina/micros-North-Carolina", method = RequestMethod.GET)
	public String getmicros_North_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_North_Carolina";
	}   
@RequestMapping(value = "/states/North-Carolina/cities-North-Carolina", method = RequestMethod.GET)
	public String getcities_North_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_North_Carolina";
	}   
@RequestMapping(value = "/states/North-Carolina/counties-North-Carolina", method = RequestMethod.GET)
	public String getcounties_North_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_North_Carolina";
	}   
@RequestMapping(value = "/states/North-Carolina", method = RequestMethod.GET)
	public String getNorth_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37");
		return "North_Carolina";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Loudon-County", method = RequestMethod.GET)
	public String getTennesseeCountyLoudonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47105");
		return "TennesseeCountyLoudonCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/San-Juan-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountySanJuanMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72127");
		return "Puerto_RicoCountySanJuanMunicipio";
	}   
@RequestMapping(value = "/states/North-Dakota/metros-North-Dakota", method = RequestMethod.GET)
	public String getmetros_North_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_North_Dakota";
	}   
@RequestMapping(value = "/states/North-Dakota/micros-North-Dakota", method = RequestMethod.GET)
	public String getmicros_North_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_North_Dakota";
	}   
@RequestMapping(value = "/states/North-Dakota/cities-North-Dakota", method = RequestMethod.GET)
	public String getcities_North_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_North_Dakota";
	}   
@RequestMapping(value = "/states/North-Dakota/counties-North-Dakota", method = RequestMethod.GET)
	public String getcounties_North_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_North_Dakota";
	}   
@RequestMapping(value = "/states/North-Dakota", method = RequestMethod.GET)
	public String getNorth_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38");
		return "North_Dakota";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Chattanooga", method = RequestMethod.GET)
	public String getTennesseeMetroChattanooga(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16860");
		return "TennesseeMetroChattanooga";
	}   
@RequestMapping(value = "/states/Ohio/metros-Ohio", method = RequestMethod.GET)
	public String getmetros_Ohio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Ohio";
	}   
@RequestMapping(value = "/states/Ohio/micros-Ohio", method = RequestMethod.GET)
	public String getmicros_Ohio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Ohio";
	}   
@RequestMapping(value = "/states/Ohio/cities-Ohio", method = RequestMethod.GET)
	public String getcities_Ohio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Ohio";
	}   
@RequestMapping(value = "/states/Ohio/counties-Ohio", method = RequestMethod.GET)
	public String getcounties_Ohio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Ohio";
	}   
@RequestMapping(value = "/states/Ohio", method = RequestMethod.GET)
	public String getOhio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39");
		return "Ohio";
	}   
@RequestMapping(value = "/states/Georgia/cities/Smyrna-city", method = RequestMethod.GET)
	public String getGeorgiaCitySmyrnacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1371492");
		return "GeorgiaCitySmyrnacity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Lincoln-County", method = RequestMethod.GET)
	public String getTennesseeCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47103");
		return "TennesseeCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/San-German-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountySanGermanMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72125");
		return "Puerto_RicoCountySanGermanMunicipio";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Mount-Pleasant-village", method = RequestMethod.GET)
	public String getWisconsinCityMountPleasantvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5554875");
		return "WisconsinCityMountPleasantvillage";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Salinas-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountySalinasMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72123");
		return "Puerto_RicoCountySalinasMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Sabana-Grande-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountySabanaGrandeMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72121");
		return "Puerto_RicoCountySabanaGrandeMunicipio";
	}   
@RequestMapping(value = "/states/California/cities/Patterson-city", method = RequestMethod.GET)
	public String getCaliforniaCityPattersoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "656112");
		return "CaliforniaCityPattersoncity";
	}   
@RequestMapping(value = "/states/Texas/cities/Socorro-city", method = RequestMethod.GET)
	public String getTexasCitySocorrocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4868636");
		return "TexasCitySocorrocity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Boulder-city", method = RequestMethod.GET)
	public String getColoradoCityBouldercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "807850");
		return "ColoradoCityBouldercity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Pottstown-borough", method = RequestMethod.GET)
	public String getPennsylvaniaCityPottstownborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4262416");
		return "PennsylvaniaCityPottstownborough";
	}   
@RequestMapping(value = "/states/California/counties/El-Dorado-County", method = RequestMethod.GET)
	public String getCaliforniaCountyElDoradoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6017");
		return "CaliforniaCountyElDoradoCounty";
	}   
@RequestMapping(value = "/states/California/counties/Fresno-County", method = RequestMethod.GET)
	public String getCaliforniaCountyFresnoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6019");
		return "CaliforniaCountyFresnoCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/metros-Oklahoma", method = RequestMethod.GET)
	public String getmetros_Oklahoma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Oklahoma";
	}   
@RequestMapping(value = "/states/Oklahoma/micros-Oklahoma", method = RequestMethod.GET)
	public String getmicros_Oklahoma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Oklahoma";
	}   
@RequestMapping(value = "/states/Oklahoma/cities-Oklahoma", method = RequestMethod.GET)
	public String getcities_Oklahoma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Oklahoma";
	}   
@RequestMapping(value = "/states/Oklahoma/counties-Oklahoma", method = RequestMethod.GET)
	public String getcounties_Oklahoma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Oklahoma";
	}   
@RequestMapping(value = "/states/Oklahoma", method = RequestMethod.GET)
	public String getOklahoma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40");
		return "Oklahoma";
	}   
@RequestMapping(value = "/states/Oregon/metros-Oregon", method = RequestMethod.GET)
	public String getmetros_Oregon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Oregon";
	}   
@RequestMapping(value = "/states/Oregon/micros-Oregon", method = RequestMethod.GET)
	public String getmicros_Oregon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Oregon";
	}   
@RequestMapping(value = "/states/Oregon/cities-Oregon", method = RequestMethod.GET)
	public String getcities_Oregon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Oregon";
	}   
@RequestMapping(value = "/states/Oregon/counties-Oregon", method = RequestMethod.GET)
	public String getcounties_Oregon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Oregon";
	}   
@RequestMapping(value = "/states/Oregon", method = RequestMethod.GET)
	public String getOregon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41");
		return "Oregon";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros-Pennsylvania", method = RequestMethod.GET)
	public String getmetros_Pennsylvania(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Pennsylvania";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros-Pennsylvania", method = RequestMethod.GET)
	public String getmicros_Pennsylvania(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Pennsylvania";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities-Pennsylvania", method = RequestMethod.GET)
	public String getcities_Pennsylvania(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Pennsylvania";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties-Pennsylvania", method = RequestMethod.GET)
	public String getcounties_Pennsylvania(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Pennsylvania";
	}   
@RequestMapping(value = "/states/Pennsylvania", method = RequestMethod.GET)
	public String getPennsylvania(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42");
		return "Pennsylvania";
	}   
@RequestMapping(value = "/states/Rhode-Island/metros-Rhode-Island", method = RequestMethod.GET)
	public String getmetros_Rhode_Island(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Rhode_Island";
	}   
@RequestMapping(value = "/states/Rhode-Island/micros-Rhode-Island", method = RequestMethod.GET)
	public String getmicros_Rhode_Island(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Rhode_Island";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities-Rhode-Island", method = RequestMethod.GET)
	public String getcities_Rhode_Island(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Rhode_Island";
	}   
@RequestMapping(value = "/states/Rhode-Island/counties-Rhode-Island", method = RequestMethod.GET)
	public String getcounties_Rhode_Island(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Rhode_Island";
	}   
@RequestMapping(value = "/states/Rhode-Island", method = RequestMethod.GET)
	public String getRhode_Island(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44");
		return "Rhode_Island";
	}   
@RequestMapping(value = "/states/California/counties/Kings-County", method = RequestMethod.GET)
	public String getCaliforniaCountyKingsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6031");
		return "CaliforniaCountyKingsCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/metros-South-Carolina", method = RequestMethod.GET)
	public String getmetros_South_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_South_Carolina";
	}   
@RequestMapping(value = "/states/South-Carolina/micros-South-Carolina", method = RequestMethod.GET)
	public String getmicros_South_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_South_Carolina";
	}   
@RequestMapping(value = "/states/South-Carolina/cities-South-Carolina", method = RequestMethod.GET)
	public String getcities_South_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_South_Carolina";
	}   
@RequestMapping(value = "/states/South-Carolina/counties-South-Carolina", method = RequestMethod.GET)
	public String getcounties_South_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_South_Carolina";
	}   
@RequestMapping(value = "/states/South-Carolina", method = RequestMethod.GET)
	public String getSouth_Carolina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45");
		return "South_Carolina";
	}   
@RequestMapping(value = "/states/California/cities/Manteca-city", method = RequestMethod.GET)
	public String getCaliforniaCityMantecacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "645484");
		return "CaliforniaCityMantecacity";
	}   
@RequestMapping(value = "/states/Texas/counties/Starr-County", method = RequestMethod.GET)
	public String getTexasCountyStarrCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48427");
		return "TexasCountyStarrCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Trujillo-Alto-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyTrujilloAltoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72139");
		return "Puerto_RicoCountyTrujilloAltoMunicipio";
	}   
@RequestMapping(value = "/states/South-Dakota/metros-South-Dakota", method = RequestMethod.GET)
	public String getmetros_South_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_South_Dakota";
	}   
@RequestMapping(value = "/states/South-Dakota/micros-South-Dakota", method = RequestMethod.GET)
	public String getmicros_South_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_South_Dakota";
	}   
@RequestMapping(value = "/states/South-Dakota/cities-South-Dakota", method = RequestMethod.GET)
	public String getcities_South_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_South_Dakota";
	}   
@RequestMapping(value = "/states/South-Dakota/counties-South-Dakota", method = RequestMethod.GET)
	public String getcounties_South_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_South_Dakota";
	}   
@RequestMapping(value = "/states/South-Dakota", method = RequestMethod.GET)
	public String getSouth_Dakota(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46");
		return "South_Dakota";
	}   
@RequestMapping(value = "/states/Georgia/cities/Alpharetta-city", method = RequestMethod.GET)
	public String getGeorgiaCityAlpharettacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1301696");
		return "GeorgiaCityAlpharettacity";
	}   
@RequestMapping(value = "/states/California/counties/Lake-County", method = RequestMethod.GET)
	public String getCaliforniaCountyLakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6033");
		return "CaliforniaCountyLakeCounty";
	}   
@RequestMapping(value = "/states/Tennessee/metros-Tennessee", method = RequestMethod.GET)
	public String getmetros_Tennessee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Tennessee";
	}   
@RequestMapping(value = "/states/Tennessee/micros-Tennessee", method = RequestMethod.GET)
	public String getmicros_Tennessee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Tennessee";
	}   
@RequestMapping(value = "/states/Tennessee/cities-Tennessee", method = RequestMethod.GET)
	public String getcities_Tennessee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Tennessee";
	}   
@RequestMapping(value = "/states/Tennessee/counties-Tennessee", method = RequestMethod.GET)
	public String getcounties_Tennessee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Tennessee";
	}   
@RequestMapping(value = "/states/Tennessee", method = RequestMethod.GET)
	public String getTennessee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47");
		return "Tennessee";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Toa-Baja-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyToaBajaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72137");
		return "Puerto_RicoCountyToaBajaMunicipio";
	}   
@RequestMapping(value = "/states/Georgia/micros/Americus", method = RequestMethod.GET)
	public String getGeorgiaMicroAmericus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11140");
		return "GeorgiaMicroAmericus";
	}   
@RequestMapping(value = "/states/Texas/metros-Texas", method = RequestMethod.GET)
	public String getmetros_Texas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Texas";
	}   
@RequestMapping(value = "/states/Texas/micros-Texas", method = RequestMethod.GET)
	public String getmicros_Texas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Texas";
	}   
@RequestMapping(value = "/states/Texas/cities-Texas", method = RequestMethod.GET)
	public String getcities_Texas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Texas";
	}   
@RequestMapping(value = "/states/Texas/counties-Texas", method = RequestMethod.GET)
	public String getcounties_Texas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Texas";
	}   
@RequestMapping(value = "/states/Texas", method = RequestMethod.GET)
	public String getTexas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48");
		return "Texas";
	}   
@RequestMapping(value = "/states/California/counties/Lassen-County", method = RequestMethod.GET)
	public String getCaliforniaCountyLassenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6035");
		return "CaliforniaCountyLassenCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Labette-County", method = RequestMethod.GET)
	public String getKansasCountyLabetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20099");
		return "KansasCountyLabetteCounty";
	}   
@RequestMapping(value = "/states/Utah/metros-Utah", method = RequestMethod.GET)
	public String getmetros_Utah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Utah";
	}   
@RequestMapping(value = "/states/Utah/micros-Utah", method = RequestMethod.GET)
	public String getmicros_Utah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Utah";
	}   
@RequestMapping(value = "/states/Utah/cities-Utah", method = RequestMethod.GET)
	public String getcities_Utah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Utah";
	}   
@RequestMapping(value = "/states/Utah/counties-Utah", method = RequestMethod.GET)
	public String getcounties_Utah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Utah";
	}   
@RequestMapping(value = "/states/Utah", method = RequestMethod.GET)
	public String getUtah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49");
		return "Utah";
	}   
@RequestMapping(value = "/states/Texas/counties/Smith-County", method = RequestMethod.GET)
	public String getTexasCountySmithCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48423");
		return "TexasCountySmithCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Toa-Alta-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyToaAltaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72135");
		return "Puerto_RicoCountyToaAltaMunicipio";
	}   
@RequestMapping(value = "/states/California/counties/Los-Angeles-County", method = RequestMethod.GET)
	public String getCaliforniaCountyLosAngelesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6037");
		return "CaliforniaCountyLosAngelesCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Miami-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityMiamiBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1245025");
		return "FloridaCityMiamiBeachcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Santa-Isabel-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountySantaIsabelMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72133");
		return "Puerto_RicoCountySantaIsabelMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/San-Sebastian-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountySanSebastianMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72131");
		return "Puerto_RicoCountySanSebastianMunicipio";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Pascagoula-city", method = RequestMethod.GET)
	public String getMississippiCityPascagoulacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2855360");
		return "MississippiCityPascagoulacity";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Henderson", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroHenderson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25780");
		return "North_CarolinaMicroHenderson";
	}   
@RequestMapping(value = "/states/Iowa/cities/West-Des-Moines-city", method = RequestMethod.GET)
	public String getIowaCityWestDesMoinescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1983910");
		return "IowaCityWestDesMoinescity";
	}   
@RequestMapping(value = "/states/California/counties/Kern-County", method = RequestMethod.GET)
	public String getCaliforniaCountyKernCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6029");
		return "CaliforniaCountyKernCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Pittsfield-city", method = RequestMethod.GET)
	public String getMassachusettsCityPittsfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2553960");
		return "MassachusettsCityPittsfieldcity";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Burlington", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroBurlington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15500");
		return "North_CarolinaMetroBurlington";
	}   
@RequestMapping(value = "/states/Vermont/metros-Vermont", method = RequestMethod.GET)
	public String getmetros_Vermont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Vermont";
	}   
@RequestMapping(value = "/states/Vermont/micros-Vermont", method = RequestMethod.GET)
	public String getmicros_Vermont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Vermont";
	}   
@RequestMapping(value = "/states/Vermont/cities-Vermont", method = RequestMethod.GET)
	public String getcities_Vermont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Vermont";
	}   
@RequestMapping(value = "/states/Vermont/counties-Vermont", method = RequestMethod.GET)
	public String getcounties_Vermont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Vermont";
	}   
@RequestMapping(value = "/states/Vermont", method = RequestMethod.GET)
	public String getVermont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50");
		return "Vermont";
	}   
@RequestMapping(value = "/states/Idaho/cities/Post-Falls-city", method = RequestMethod.GET)
	public String getIdahoCityPostFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1664810");
		return "IdahoCityPostFallscity";
	}   
@RequestMapping(value = "/states/Virginia/metros-Virginia", method = RequestMethod.GET)
	public String getmetros_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Virginia";
	}   
@RequestMapping(value = "/states/Virginia/micros-Virginia", method = RequestMethod.GET)
	public String getmicros_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Virginia";
	}   
@RequestMapping(value = "/states/Virginia/cities-Virginia", method = RequestMethod.GET)
	public String getcities_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Virginia";
	}   
@RequestMapping(value = "/states/Virginia/counties-Virginia", method = RequestMethod.GET)
	public String getcounties_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Virginia";
	}   
@RequestMapping(value = "/states/Virginia", method = RequestMethod.GET)
	public String getVirginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51");
		return "Virginia";
	}   
@RequestMapping(value = "/states/Illinois/cities/Carbondale-city", method = RequestMethod.GET)
	public String getIllinoisCityCarbondalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1711163");
		return "IllinoisCityCarbondalecity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Johnson-County", method = RequestMethod.GET)
	public String getKansasCountyJohnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20091");
		return "KansasCountyJohnsonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Venice-city", method = RequestMethod.GET)
	public String getFloridaCityVenicecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1273900");
		return "FloridaCityVenicecity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Cumberland-city", method = RequestMethod.GET)
	public String getMarylandCityCumberlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2421325");
		return "MarylandCityCumberlandcity";
	}   
@RequestMapping(value = "/states/Washington/metros-Washington", method = RequestMethod.GET)
	public String getmetros_Washington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Washington";
	}   
@RequestMapping(value = "/states/Washington/micros-Washington", method = RequestMethod.GET)
	public String getmicros_Washington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Washington";
	}   
@RequestMapping(value = "/states/Washington/cities-Washington", method = RequestMethod.GET)
	public String getcities_Washington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Washington";
	}   
@RequestMapping(value = "/states/Washington/counties-Washington", method = RequestMethod.GET)
	public String getcounties_Washington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Washington";
	}   
@RequestMapping(value = "/states/Washington", method = RequestMethod.GET)
	public String getWashington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "53");
		return "Washington";
	}   
@RequestMapping(value = "/states/Washington/metros/SpokaneSpokane-Valley", method = RequestMethod.GET)
	public String getWashingtonMetroSpokaneSpokaneValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44060");
		return "WashingtonMetroSpokaneSpokaneValley";
	}   
@RequestMapping(value = "/states/West-Virginia/metros-West-Virginia", method = RequestMethod.GET)
	public String getmetros_West_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_West_Virginia";
	}   
@RequestMapping(value = "/states/West-Virginia/micros-West-Virginia", method = RequestMethod.GET)
	public String getmicros_West_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_West_Virginia";
	}   
@RequestMapping(value = "/states/West-Virginia/cities-West-Virginia", method = RequestMethod.GET)
	public String getcities_West_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_West_Virginia";
	}   
@RequestMapping(value = "/states/West-Virginia/counties-West-Virginia", method = RequestMethod.GET)
	public String getcounties_West_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_West_Virginia";
	}   
@RequestMapping(value = "/states/West-Virginia", method = RequestMethod.GET)
	public String getWest_Virginia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54");
		return "West_Virginia";
	}   
@RequestMapping(value = "/states/California/cities/San-Clemente-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanClementecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "665084");
		return "CaliforniaCitySanClementecity";
	}   
@RequestMapping(value = "/states/Wisconsin/metros-Wisconsin", method = RequestMethod.GET)
	public String getmetros_Wisconsin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Wisconsin";
	}   
@RequestMapping(value = "/states/Wisconsin/micros-Wisconsin", method = RequestMethod.GET)
	public String getmicros_Wisconsin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Wisconsin";
	}   
@RequestMapping(value = "/states/Wisconsin/cities-Wisconsin", method = RequestMethod.GET)
	public String getcities_Wisconsin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Wisconsin";
	}   
@RequestMapping(value = "/states/Wisconsin/counties-Wisconsin", method = RequestMethod.GET)
	public String getcounties_Wisconsin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Wisconsin";
	}   
@RequestMapping(value = "/states/Wisconsin", method = RequestMethod.GET)
	public String getWisconsin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55");
		return "Wisconsin";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Benton-city", method = RequestMethod.GET)
	public String getArkansasCityBentoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "505290");
		return "ArkansasCityBentoncity";
	}   
@RequestMapping(value = "/states/Wyoming/metros-Wyoming", method = RequestMethod.GET)
	public String getmetros_Wyoming(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Wyoming";
	}   
@RequestMapping(value = "/states/Wyoming/micros-Wyoming", method = RequestMethod.GET)
	public String getmicros_Wyoming(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Wyoming";
	}   
@RequestMapping(value = "/states/Wyoming/cities-Wyoming", method = RequestMethod.GET)
	public String getcities_Wyoming(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Wyoming";
	}   
@RequestMapping(value = "/states/Wyoming/counties-Wyoming", method = RequestMethod.GET)
	public String getcounties_Wyoming(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Wyoming";
	}   
@RequestMapping(value = "/states/Wyoming", method = RequestMethod.GET)
	public String getWyoming(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56");
		return "Wyoming";
	}   
@RequestMapping(value = "/states/California/cities/San-Lorenzo", method = RequestMethod.GET)
	public String getCaliforniaCitySanLorenzo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668112");
		return "CaliforniaCitySanLorenzo";
	}   
@RequestMapping(value = "/states/California/counties/Mendocino-County", method = RequestMethod.GET)
	public String getCaliforniaCountyMendocinoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6045");
		return "CaliforniaCountyMendocinoCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Barnstable-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityBarnstableTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2503690");
		return "MassachusettsCityBarnstableTowncity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/East-Ridge-city", method = RequestMethod.GET)
	public String getTennesseeCityEastRidgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4722720");
		return "TennesseeCityEastRidgecity";
	}   
@RequestMapping(value = "/states/California/counties/Merced-County", method = RequestMethod.GET)
	public String getCaliforniaCountyMercedCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6047");
		return "CaliforniaCountyMercedCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Villalba-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyVillalbaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72149");
		return "Puerto_RicoCountyVillalbaMunicipio";
	}   
@RequestMapping(value = "/states/Ohio/cities/Chillicothe-city", method = RequestMethod.GET)
	public String getOhioCityChillicothecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3914184");
		return "OhioCityChillicothecity";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/New-Bern", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroNewBern(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35100");
		return "North_CarolinaMetroNewBern";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Vega-Baja-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyVegaBajaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72145");
		return "Puerto_RicoCountyVegaBajaMunicipio";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Kinston", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroKinston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28820");
		return "North_CarolinaMicroKinston";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Vega-Alta-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyVegaAltaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72143");
		return "Puerto_RicoCountyVegaAltaMunicipio";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Olive-Branch-city", method = RequestMethod.GET)
	public String getMississippiCityOliveBranchcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2854040");
		return "MississippiCityOliveBranchcity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Jersey-City-city", method = RequestMethod.GET)
	public String getNew_JerseyCityJerseyCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3436000");
		return "New_JerseyCityJerseyCitycity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Utuado-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyUtuadoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72141");
		return "Puerto_RicoCountyUtuadoMunicipio";
	}   
@RequestMapping(value = "/states/California/counties/Marin-County", method = RequestMethod.GET)
	public String getCaliforniaCountyMarinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6041");
		return "CaliforniaCountyMarinCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Shelby-County", method = RequestMethod.GET)
	public String getTexasCountyShelbyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48419");
		return "TexasCountyShelbyCounty";
	}   
@RequestMapping(value = "/states/California/cities/Inglewood-city", method = RequestMethod.GET)
	public String getCaliforniaCityInglewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "636546");
		return "CaliforniaCityInglewoodcity";
	}   
@RequestMapping(value = "/states/Kansas/micros/Great-Bend", method = RequestMethod.GET)
	public String getKansasMicroGreatBend(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24460");
		return "KansasMicroGreatBend";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Lowell-city", method = RequestMethod.GET)
	public String getMassachusettsCityLowellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2537000");
		return "MassachusettsCityLowellcity";
	}   
@RequestMapping(value = "/states/California/counties/Madera-County", method = RequestMethod.GET)
	public String getCaliforniaCountyMaderaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6039");
		return "CaliforniaCountyMaderaCounty";
	}   
@RequestMapping(value = "/states/Arizona/metros/Yuma", method = RequestMethod.GET)
	public String getArizonaMetroYuma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49740");
		return "ArizonaMetroYuma";
	}   
@RequestMapping(value = "/states/Montana/cities/ButteSilver-Bow-balance", method = RequestMethod.GET)
	public String getMontanaCityButteSilverBowbalance(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3011397");
		return "MontanaCityButteSilverBowbalance";
	}   
@RequestMapping(value = "/states/Illinois/micros/Taylorville", method = RequestMethod.GET)
	public String getIllinoisMicroTaylorville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45380");
		return "IllinoisMicroTaylorville";
	}   
@RequestMapping(value = "/states/Texas/counties/San-Jacinto-County", method = RequestMethod.GET)
	public String getTexasCountySanJacintoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48407");
		return "TexasCountySanJacintoCounty";
	}   
@RequestMapping(value = "/states/California/counties/Monterey-County", method = RequestMethod.GET)
	public String getCaliforniaCountyMontereyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6053");
		return "CaliforniaCountyMontereyCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Mableton", method = RequestMethod.GET)
	public String getGeorgiaCityMableton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1348288");
		return "GeorgiaCityMableton";
	}   
@RequestMapping(value = "/states/California/counties/Napa-County", method = RequestMethod.GET)
	public String getCaliforniaCountyNapaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6055");
		return "CaliforniaCountyNapaCounty";
	}   
@RequestMapping(value = "/states/Kansas/counties/Harvey-County", method = RequestMethod.GET)
	public String getKansasCountyHarveyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20079");
		return "KansasCountyHarveyCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Texarkana-city", method = RequestMethod.GET)
	public String getArkansasCityTexarkanacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "568810");
		return "ArkansasCityTexarkanacity";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Goose-Creek-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityGooseCreekcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4529815");
		return "South_CarolinaCityGooseCreekcity";
	}   
@RequestMapping(value = "/states/California/counties/Nevada-County", method = RequestMethod.GET)
	public String getCaliforniaCountyNevadaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6057");
		return "CaliforniaCountyNevadaCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Rusk-County", method = RequestMethod.GET)
	public String getTexasCountyRuskCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48401");
		return "TexasCountyRuskCounty";
	}   
@RequestMapping(value = "/states/California/counties/Orange-County", method = RequestMethod.GET)
	public String getCaliforniaCountyOrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6059");
		return "CaliforniaCountyOrangeCounty";
	}   
@RequestMapping(value = "/states/New-York/metros/Binghamton", method = RequestMethod.GET)
	public String getNew_YorkMetroBinghamton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13780");
		return "New_YorkMetroBinghamton";
	}   
@RequestMapping(value = "/states/Oklahoma/metros/Oklahoma-City", method = RequestMethod.GET)
	public String getOklahomaMetroOklahomaCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36420");
		return "OklahomaMetroOklahomaCity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Henry-County", method = RequestMethod.GET)
	public String getIowaCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19087");
		return "IowaCountyHenryCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Yauco-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyYaucoMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72153");
		return "Puerto_RicoCountyYaucoMunicipio";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties/Yabucoa-Municipio", method = RequestMethod.GET)
	public String getPuerto_RicoCountyYabucoaMunicipio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72151");
		return "Puerto_RicoCountyYabucoaMunicipio";
	}   
@RequestMapping(value = "/states/Washington/cities/Silver-Firs", method = RequestMethod.GET)
	public String getWashingtonCitySilverFirs(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5364380");
		return "WashingtonCitySilverFirs";
	}   
@RequestMapping(value = "/states/Texas/counties/San-Patricio-County", method = RequestMethod.GET)
	public String getTexasCountySanPatricioCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48409");
		return "TexasCountySanPatricioCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Miami-city", method = RequestMethod.GET)
	public String getFloridaCityMiamicity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1245000");
		return "FloridaCityMiamicity";
	}   
@RequestMapping(value = "/states/Arkansas/micros/HelenaWest-Helena", method = RequestMethod.GET)
	public String getArkansasMicroHelenaWestHelena(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25760");
		return "ArkansasMicroHelenaWestHelena";
	}   
@RequestMapping(value = "/states/Ohio/cities/Riverside-city", method = RequestMethod.GET)
	public String getOhioCityRiversidecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3967468");
		return "OhioCityRiversidecity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/metros-Puerto-Rico", method = RequestMethod.GET)
	public String getmetros_Puerto_Rico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "metros_Puerto_Rico";
	}   
@RequestMapping(value = "/states/Puerto-Rico/micros-Puerto-Rico", method = RequestMethod.GET)
	public String getmicros_Puerto_Rico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "micros_Puerto_Rico";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities-Puerto-Rico", method = RequestMethod.GET)
	public String getcities_Puerto_Rico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "cities_Puerto_Rico";
	}   
@RequestMapping(value = "/states/Puerto-Rico/counties-Puerto-Rico", method = RequestMethod.GET)
	public String getcounties_Puerto_Rico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "");
		return "counties_Puerto_Rico";
	}   
@RequestMapping(value = "/states/Puerto-Rico", method = RequestMethod.GET)
	public String getPuerto_Rico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "72");
		return "Puerto_Rico";
	}   
@RequestMapping(value = "/states/Missouri/cities/Grandview-city", method = RequestMethod.GET)
	public String getMissouriCityGrandviewcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2928324");
		return "MissouriCityGrandviewcity";
	}   
@RequestMapping(value = "/states/California/counties/Riverside-County", method = RequestMethod.GET)
	public String getCaliforniaCountyRiversideCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6065");
		return "CaliforniaCountyRiversideCounty";
	}   
@RequestMapping(value = "/states/California/counties/Sacramento-County", method = RequestMethod.GET)
	public String getCaliforniaCountySacramentoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6067");
		return "CaliforniaCountySacramentoCounty";
	}   
@RequestMapping(value = "/states/California/counties/San-Benito-County", method = RequestMethod.GET)
	public String getCaliforniaCountySanBenitoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6069");
		return "CaliforniaCountySanBenitoCounty";
	}   
@RequestMapping(value = "/states/Iowa/counties/Jasper-County", method = RequestMethod.GET)
	public String getIowaCountyJasperCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19099");
		return "IowaCountyJasperCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Lawrence-city", method = RequestMethod.GET)
	public String getIndianaCityLawrencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1842426");
		return "IndianaCityLawrencecity";
	}   
@RequestMapping(value = "/states/Georgia/micros/Bainbridge", method = RequestMethod.GET)
	public String getGeorgiaMicroBainbridge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12460");
		return "GeorgiaMicroBainbridge";
	}   
@RequestMapping(value = "/states/Arizona/micros/Payson", method = RequestMethod.GET)
	public String getArizonaMicroPayson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37740");
		return "ArizonaMicroPayson";
	}   
@RequestMapping(value = "/states/Washington/cities/Cottage-Lake", method = RequestMethod.GET)
	public String getWashingtonCityCottageLake(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5314940");
		return "WashingtonCityCottageLake";
	}   
@RequestMapping(value = "/states/Alabama/cities/Daphne-city", method = RequestMethod.GET)
	public String getAlabamaCityDaphnecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "119648");
		return "AlabamaCityDaphnecity";
	}   
@RequestMapping(value = "/states/Iowa/counties/Jackson-County", method = RequestMethod.GET)
	public String getIowaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19097");
		return "IowaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/California/counties/Placer-County", method = RequestMethod.GET)
	public String getCaliforniaCountyPlacerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6061");
		return "CaliforniaCountyPlacerCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Ferndale-city", method = RequestMethod.GET)
	public String getMichiganCityFerndalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2627880");
		return "MichiganCityFerndalecity";
	}   
@RequestMapping(value = "/states/Virginia/metros/Charlottesville", method = RequestMethod.GET)
	public String getVirginiaMetroCharlottesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16820");
		return "VirginiaMetroCharlottesville";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Faribault-city", method = RequestMethod.GET)
	public String getMinnesotaCityFaribaultcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2720546");
		return "MinnesotaCityFaribaultcity";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/Sumter", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroSumter(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44940");
		return "South_CarolinaMetroSumter";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Shelton-city", method = RequestMethod.GET)
	public String getConnecticutCitySheltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "968100");
		return "ConnecticutCitySheltoncity";
	}   
@RequestMapping(value = "/states/California/counties/San-Francisco-County", method = RequestMethod.GET)
	public String getCaliforniaCountySanFranciscoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6075");
		return "CaliforniaCountySanFranciscoCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Rocky-Mount", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroRockyMount(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40580");
		return "North_CarolinaMetroRockyMount";
	}   
@RequestMapping(value = "/states/California/counties/San-Joaquin-County", method = RequestMethod.GET)
	public String getCaliforniaCountySanJoaquinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6077");
		return "CaliforniaCountySanJoaquinCounty";
	}   
@RequestMapping(value = "/states/Kansas/micros/Dodge-City", method = RequestMethod.GET)
	public String getKansasMicroDodgeCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19980");
		return "KansasMicroDodgeCity";
	}   
@RequestMapping(value = "/states/California/counties/San-Luis-Obispo-County", method = RequestMethod.GET)
	public String getCaliforniaCountySanLuisObispoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6079");
		return "CaliforniaCountySanLuisObispoCounty";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Owensboro-city", method = RequestMethod.GET)
	public String getKentuckyCityOwensborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2158620");
		return "KentuckyCityOwensborocity";
	}   
@RequestMapping(value = "/states/Florida/cities/North-Lauderdale-city", method = RequestMethod.GET)
	public String getFloridaCityNorthLauderdalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1249425");
		return "FloridaCityNorthLauderdalecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Fort-Myers-city", method = RequestMethod.GET)
	public String getFloridaCityFortMyerscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1224125");
		return "FloridaCityFortMyerscity";
	}   
@RequestMapping(value = "/states/California/counties/San-Bernardino-County", method = RequestMethod.GET)
	public String getCaliforniaCountySanBernardinoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6071");
		return "CaliforniaCountySanBernardinoCounty";
	}   
@RequestMapping(value = "/states/California/counties/San-Diego-County", method = RequestMethod.GET)
	public String getCaliforniaCountySanDiegoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6073");
		return "CaliforniaCountySanDiegoCounty";
	}   
@RequestMapping(value = "/states/Kansas/micros/Pittsburg", method = RequestMethod.GET)
	public String getKansasMicroPittsburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38260");
		return "KansasMicroPittsburg";
	}   
@RequestMapping(value = "/states/Florida/cities/Miami-Gardens-city", method = RequestMethod.GET)
	public String getFloridaCityMiamiGardenscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1245060");
		return "FloridaCityMiamiGardenscity";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Waipahu", method = RequestMethod.GET)
	public String getHawaiiCityWaipahu(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1579700");
		return "HawaiiCityWaipahu";
	}   
@RequestMapping(value = "/states/Idaho/metros/Lewiston", method = RequestMethod.GET)
	public String getIdahoMetroLewiston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30300");
		return "IdahoMetroLewiston";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Fremont-County", method = RequestMethod.GET)
	public String getWyomingCountyFremontCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56013");
		return "WyomingCountyFremontCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Austin-city", method = RequestMethod.GET)
	public String getTexasCityAustincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4805000");
		return "TexasCityAustincity";
	}   
@RequestMapping(value = "/states/Georgia/micros/LaGrange", method = RequestMethod.GET)
	public String getGeorgiaMicroLaGrange(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29300");
		return "GeorgiaMicroLaGrange";
	}   
@RequestMapping(value = "/states/Florida/cities/Wekiwa-Springs", method = RequestMethod.GET)
	public String getFloridaCityWekiwaSprings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1275725");
		return "FloridaCityWekiwaSprings";
	}   
@RequestMapping(value = "/states/California/cities/Bellflower-city", method = RequestMethod.GET)
	public String getCaliforniaCityBellflowercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "604982");
		return "CaliforniaCityBellflowercity";
	}   
@RequestMapping(value = "/states/Illinois/cities/New-Lenox-village", method = RequestMethod.GET)
	public String getIllinoisCityNewLenoxvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1752584");
		return "IllinoisCityNewLenoxvillage";
	}   
@RequestMapping(value = "/states/California/counties/Santa-Cruz-County", method = RequestMethod.GET)
	public String getCaliforniaCountySantaCruzCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6087");
		return "CaliforniaCountySantaCruzCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Statesboro-city", method = RequestMethod.GET)
	public String getGeorgiaCityStatesborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1373256");
		return "GeorgiaCityStatesborocity";
	}   
@RequestMapping(value = "/states/California/counties/Shasta-County", method = RequestMethod.GET)
	public String getCaliforniaCountyShastaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6089");
		return "CaliforniaCountyShastaCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Security-Widefield", method = RequestMethod.GET)
	public String getColoradoCitySecurityWidefield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "868847");
		return "ColoradoCitySecurityWidefield";
	}   
@RequestMapping(value = "/states/Arkansas/micros/El-Dorado", method = RequestMethod.GET)
	public String getArkansasMicroElDorado(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20980");
		return "ArkansasMicroElDorado";
	}   
@RequestMapping(value = "/states/New-York/micros/Cortland", method = RequestMethod.GET)
	public String getNew_YorkMicroCortland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18660");
		return "New_YorkMicroCortland";
	}   
@RequestMapping(value = "/states/Florida/cities/Kendall-West", method = RequestMethod.GET)
	public String getFloridaCityKendallWest(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1236121");
		return "FloridaCityKendallWest";
	}   
@RequestMapping(value = "/states/Idaho/counties/Ada-County", method = RequestMethod.GET)
	public String getIdahoCountyAdaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16001");
		return "IdahoCountyAdaCounty";
	}   
@RequestMapping(value = "/states/California/counties/San-Mateo-County", method = RequestMethod.GET)
	public String getCaliforniaCountySanMateoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6081");
		return "CaliforniaCountySanMateoCounty";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Laramie-County", method = RequestMethod.GET)
	public String getWyomingCountyLaramieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56021");
		return "WyomingCountyLaramieCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Eagle-Mountain-city", method = RequestMethod.GET)
	public String getUtahCityEagleMountaincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4920810");
		return "UtahCityEagleMountaincity";
	}   
@RequestMapping(value = "/states/New-York/cities/Troy-city", method = RequestMethod.GET)
	public String getNew_YorkCityTroycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3675484");
		return "New_YorkCityTroycity";
	}   
@RequestMapping(value = "/states/California/counties/Santa-Barbara-County", method = RequestMethod.GET)
	public String getCaliforniaCountySantaBarbaraCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6083");
		return "CaliforniaCountySantaBarbaraCounty";
	}   
@RequestMapping(value = "/states/California/counties/Santa-Clara-County", method = RequestMethod.GET)
	public String getCaliforniaCountySantaClaraCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6085");
		return "CaliforniaCountySantaClaraCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Raleigh", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroRaleigh(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39580");
		return "North_CarolinaMetroRaleigh";
	}   
@RequestMapping(value = "/states/New-York/cities/Lockport-city", method = RequestMethod.GET)
	public String getNew_YorkCityLockportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3643082");
		return "New_YorkCityLockportcity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Wauwatosa-city", method = RequestMethod.GET)
	public String getWisconsinCityWauwatosacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5584675");
		return "WisconsinCityWauwatosacity";
	}   
@RequestMapping(value = "/states/Alabama/micros/Albertville", method = RequestMethod.GET)
	public String getAlabamaMicroAlbertville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10700");
		return "AlabamaMicroAlbertville";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Park-County", method = RequestMethod.GET)
	public String getWyomingCountyParkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56029");
		return "WyomingCountyParkCounty";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Magnolia", method = RequestMethod.GET)
	public String getArkansasMicroMagnolia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31620");
		return "ArkansasMicroMagnolia";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Natrona-County", method = RequestMethod.GET)
	public String getWyomingCountyNatronaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56025");
		return "WyomingCountyNatronaCounty";
	}   
@RequestMapping(value = "/states/Idaho/counties/Bannock-County", method = RequestMethod.GET)
	public String getIdahoCountyBannockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16005");
		return "IdahoCountyBannockCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/University-Park-city", method = RequestMethod.GET)
	public String getTexasCityUniversityParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4874492");
		return "TexasCityUniversityParkcity";
	}   
@RequestMapping(value = "/states/California/counties/Sonoma-County", method = RequestMethod.GET)
	public String getCaliforniaCountySonomaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6097");
		return "CaliforniaCountySonomaCounty";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Clarksville", method = RequestMethod.GET)
	public String getTennesseeMetroClarksville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17300");
		return "TennesseeMetroClarksville";
	}   
@RequestMapping(value = "/states/California/counties/Stanislaus-County", method = RequestMethod.GET)
	public String getCaliforniaCountyStanislausCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6099");
		return "CaliforniaCountyStanislausCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Strongsville-city", method = RequestMethod.GET)
	public String getOhioCityStrongsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3975098");
		return "OhioCityStrongsvillecity";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Sheridan-County", method = RequestMethod.GET)
	public String getWyomingCountySheridanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56033");
		return "WyomingCountySheridanCounty";
	}   
@RequestMapping(value = "/states/California/counties/Siskiyou-County", method = RequestMethod.GET)
	public String getCaliforniaCountySiskiyouCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6093");
		return "CaliforniaCountySiskiyouCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Tonawanda", method = RequestMethod.GET)
	public String getNew_YorkCityTonawanda(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3674183");
		return "New_YorkCityTonawanda";
	}   
@RequestMapping(value = "/states/California/counties/Solano-County", method = RequestMethod.GET)
	public String getCaliforniaCountySolanoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6095");
		return "CaliforniaCountySolanoCounty";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Meridian", method = RequestMethod.GET)
	public String getMississippiMicroMeridian(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32940");
		return "MississippiMicroMeridian";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Teton-County", method = RequestMethod.GET)
	public String getWyomingCountyTetonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56039");
		return "WyomingCountyTetonCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Pikesville", method = RequestMethod.GET)
	public String getMarylandCityPikesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2461400");
		return "MarylandCityPikesville";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Sweetwater-County", method = RequestMethod.GET)
	public String getWyomingCountySweetwaterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56037");
		return "WyomingCountySweetwaterCounty";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Norfolk-city", method = RequestMethod.GET)
	public String getNebraskaCityNorfolkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3134615");
		return "NebraskaCityNorfolkcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Corpus-Christi-city", method = RequestMethod.GET)
	public String getTexasCityCorpusChristicity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4817000");
		return "TexasCityCorpusChristicity";
	}   
@RequestMapping(value = "/states/Florida/cities/Daytona-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityDaytonaBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1216525");
		return "FloridaCityDaytonaBeachcity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Kingsport-city", method = RequestMethod.GET)
	public String getTennesseeCityKingsportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4739560");
		return "TennesseeCityKingsportcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Port-Charlotte", method = RequestMethod.GET)
	public String getFloridaCityPortCharlotte(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1258350");
		return "FloridaCityPortCharlotte";
	}   
@RequestMapping(value = "/states/Florida/cities/Kendall", method = RequestMethod.GET)
	public String getFloridaCityKendall(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1236100");
		return "FloridaCityKendall";
	}   
@RequestMapping(value = "/states/Wyoming/counties/Uinta-County", method = RequestMethod.GET)
	public String getWyomingCountyUintaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "56041");
		return "WyomingCountyUintaCounty";
	}   
@RequestMapping(value = "/states/California/cities/Goleta-city", method = RequestMethod.GET)
	public String getCaliforniaCityGoletacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "630378");
		return "CaliforniaCityGoletacity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Haverhill-city", method = RequestMethod.GET)
	public String getMassachusettsCityHaverhillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2529405");
		return "MassachusettsCityHaverhillcity";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Greenville-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityGreenvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4530850");
		return "South_CarolinaCityGreenvillecity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Vincennes", method = RequestMethod.GET)
	public String getIndianaMicroVincennes(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47180");
		return "IndianaMicroVincennes";
	}   
@RequestMapping(value = "/states/California/cities/Oakland-city", method = RequestMethod.GET)
	public String getCaliforniaCityOaklandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "653000");
		return "CaliforniaCityOaklandcity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Mishawaka-city", method = RequestMethod.GET)
	public String getIndianaCityMishawakacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1849932");
		return "IndianaCityMishawakacity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Wilson-County", method = RequestMethod.GET)
	public String getTennesseeCountyWilsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47189");
		return "TennesseeCountyWilsonCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Williamson-County", method = RequestMethod.GET)
	public String getTennesseeCountyWilliamsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47187");
		return "TennesseeCountyWilliamsonCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/White-County", method = RequestMethod.GET)
	public String getTennesseeCountyWhiteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47185");
		return "TennesseeCountyWhiteCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Weakley-County", method = RequestMethod.GET)
	public String getTennesseeCountyWeakleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47183");
		return "TennesseeCountyWeakleyCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Dixon", method = RequestMethod.GET)
	public String getIllinoisMicroDixon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19940");
		return "IllinoisMicroDixon";
	}   
@RequestMapping(value = "/states/California/cities/Loma-Linda-city", method = RequestMethod.GET)
	public String getCaliforniaCityLomaLindacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "642370");
		return "CaliforniaCityLomaLindacity";
	}   
@RequestMapping(value = "/states/Montana/micros/ButteSilver-Bow", method = RequestMethod.GET)
	public String getMontanaMicroButteSilverBow(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15580");
		return "MontanaMicroButteSilverBow";
	}   
@RequestMapping(value = "/states/Arkansas/metros/Pine-Bluff", method = RequestMethod.GET)
	public String getArkansasMetroPineBluff(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38220");
		return "ArkansasMetroPineBluff";
	}   
@RequestMapping(value = "/states/California/cities/Manhattan-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCityManhattanBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "645400");
		return "CaliforniaCityManhattanBeachcity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Washington-County", method = RequestMethod.GET)
	public String getTennesseeCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47179");
		return "TennesseeCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Wyoming/micros/Rock-Springs", method = RequestMethod.GET)
	public String getWyomingMicroRockSprings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40540");
		return "WyomingMicroRockSprings";
	}   
@RequestMapping(value = "/states/Georgia/micros/Summerville", method = RequestMethod.GET)
	public String getGeorgiaMicroSummerville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44900");
		return "GeorgiaMicroSummerville";
	}   
@RequestMapping(value = "/states/Michigan/cities/Muskegon-city", method = RequestMethod.GET)
	public String getMichiganCityMuskegoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2656320");
		return "MichiganCityMuskegoncity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Warren-County", method = RequestMethod.GET)
	public String getTennesseeCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47177");
		return "TennesseeCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/California/cities/Tulare-city", method = RequestMethod.GET)
	public String getCaliforniaCityTularecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "680644");
		return "CaliforniaCityTularecity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Quincy-city", method = RequestMethod.GET)
	public String getMassachusettsCityQuincycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2555745");
		return "MassachusettsCityQuincycity";
	}   
@RequestMapping(value = "/states/California/cities/Sunnyvale-city", method = RequestMethod.GET)
	public String getCaliforniaCitySunnyvalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "677000");
		return "CaliforniaCitySunnyvalecity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Denver-city", method = RequestMethod.GET)
	public String getColoradoCityDenvercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "820000");
		return "ColoradoCityDenvercity";
	}   
@RequestMapping(value = "/states/California/cities/Diamond-Bar-city", method = RequestMethod.GET)
	public String getCaliforniaCityDiamondBarcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "619192");
		return "CaliforniaCityDiamondBarcity";
	}   
@RequestMapping(value = "/states/California/metros/El-Centro", method = RequestMethod.GET)
	public String getCaliforniaMetroElCentro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20940");
		return "CaliforniaMetroElCentro";
	}   
@RequestMapping(value = "/states/Texas/micros/Corsicana", method = RequestMethod.GET)
	public String getTexasMicroCorsicana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18620");
		return "TexasMicroCorsicana";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Racine", method = RequestMethod.GET)
	public String getWisconsinMetroRacine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39540");
		return "WisconsinMetroRacine";
	}   
@RequestMapping(value = "/states/Kansas/cities/Lenexa-city", method = RequestMethod.GET)
	public String getKansasCityLenexacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2039350");
		return "KansasCityLenexacity";
	}   
@RequestMapping(value = "/states/Idaho/metros/Boise-City", method = RequestMethod.GET)
	public String getIdahoMetroBoiseCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14260");
		return "IdahoMetroBoiseCity";
	}   
@RequestMapping(value = "/states/New-York/cities/Saratoga-Springs-city", method = RequestMethod.GET)
	public String getNew_YorkCitySaratogaSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3665255");
		return "New_YorkCitySaratogaSpringscity";
	}   
@RequestMapping(value = "/states/California/metros/San-FranciscoOaklandHayward", method = RequestMethod.GET)
	public String getCaliforniaMetroSanFranciscoOaklandHayward(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41860");
		return "CaliforniaMetroSanFranciscoOaklandHayward";
	}   
@RequestMapping(value = "/states/Arizona/cities/Peoria-city", method = RequestMethod.GET)
	public String getArizonaCityPeoriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "454050");
		return "ArizonaCityPeoriacity";
	}   
@RequestMapping(value = "/states/Texas/counties/Wood-County", method = RequestMethod.GET)
	public String getTexasCountyWoodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48499");
		return "TexasCountyWoodCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Tucker", method = RequestMethod.GET)
	public String getGeorgiaCityTucker(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1377652");
		return "GeorgiaCityTucker";
	}   
@RequestMapping(value = "/states/Washington/cities/Lakewood-city", method = RequestMethod.GET)
	public String getWashingtonCityLakewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5338038");
		return "WashingtonCityLakewoodcity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Wakefield", method = RequestMethod.GET)
	public String getMassachusettsCityWakefield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2572250");
		return "MassachusettsCityWakefield";
	}   
@RequestMapping(value = "/states/Texas/cities/Garland-city", method = RequestMethod.GET)
	public String getTexasCityGarlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4829000");
		return "TexasCityGarlandcity";
	}   
@RequestMapping(value = "/states/California/cities/San-Bernardino-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanBernardinocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "665000");
		return "CaliforniaCitySanBernardinocity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Wheaton-city", method = RequestMethod.GET)
	public String getIllinoisCityWheatoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1781048");
		return "IllinoisCityWheatoncity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Chillum", method = RequestMethod.GET)
	public String getMarylandCityChillum(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2416875");
		return "MarylandCityChillum";
	}   
@RequestMapping(value = "/states/California/cities/Hesperia-city", method = RequestMethod.GET)
	public String getCaliforniaCityHesperiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "633434");
		return "CaliforniaCityHesperiacity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Vineland-city", method = RequestMethod.GET)
	public String getNew_JerseyCityVinelandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3476070");
		return "New_JerseyCityVinelandcity";
	}   
@RequestMapping(value = "/states/California/cities/Cerritos-city", method = RequestMethod.GET)
	public String getCaliforniaCityCerritoscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "612552");
		return "CaliforniaCityCerritoscity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Ottumwa-city", method = RequestMethod.GET)
	public String getIowaCityOttumwacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1960465");
		return "IowaCityOttumwacity";
	}   
@RequestMapping(value = "/states/Florida/cities/North-Miami-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityNorthMiamiBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1249475");
		return "FloridaCityNorthMiamiBeachcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Darien-city", method = RequestMethod.GET)
	public String getIllinoisCityDariencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1718628");
		return "IllinoisCityDariencity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Avon-Lake-city", method = RequestMethod.GET)
	public String getOhioCityAvonLakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3903464");
		return "OhioCityAvonLakecity";
	}   
@RequestMapping(value = "/states/Washington/cities/Seattle-city", method = RequestMethod.GET)
	public String getWashingtonCitySeattlecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5363000");
		return "WashingtonCitySeattlecity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Tipton-County", method = RequestMethod.GET)
	public String getTennesseeCountyTiptonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47167");
		return "TennesseeCountyTiptonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Wise-County", method = RequestMethod.GET)
	public String getTexasCountyWiseCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48497");
		return "TexasCountyWiseCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Sumner-County", method = RequestMethod.GET)
	public String getTennesseeCountySumnerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47165");
		return "TennesseeCountySumnerCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Collinsville-city", method = RequestMethod.GET)
	public String getIllinoisCityCollinsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1715599");
		return "IllinoisCityCollinsvillecity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Sullivan-County", method = RequestMethod.GET)
	public String getTennesseeCountySullivanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47163");
		return "TennesseeCountySullivanCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Wilson-County", method = RequestMethod.GET)
	public String getTexasCountyWilsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48493");
		return "TexasCountyWilsonCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Edmonds-city", method = RequestMethod.GET)
	public String getWashingtonCityEdmondscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5320750");
		return "WashingtonCityEdmondscity";
	}   
@RequestMapping(value = "/states/Texas/counties/Williamson-County", method = RequestMethod.GET)
	public String getTexasCountyWilliamsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48491");
		return "TexasCountyWilliamsonCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Bartlett-village", method = RequestMethod.GET)
	public String getIllinoisCityBartlettvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1704013");
		return "IllinoisCityBartlettvillage";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Taylors", method = RequestMethod.GET)
	public String getSouth_CarolinaCityTaylors(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4571395");
		return "South_CarolinaCityTaylors";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Shelby-County", method = RequestMethod.GET)
	public String getTennesseeCountyShelbyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47157");
		return "TennesseeCountyShelbyCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Willacy-County", method = RequestMethod.GET)
	public String getTexasCountyWillacyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48489");
		return "TexasCountyWillacyCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Stoneham", method = RequestMethod.GET)
	public String getMassachusettsCityStoneham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2567700");
		return "MassachusettsCityStoneham";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Naugatuck-borough", method = RequestMethod.GET)
	public String getConnecticutCityNaugatuckborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "949880");
		return "ConnecticutCityNaugatuckborough";
	}   
@RequestMapping(value = "/states/Virginia/cities/Portsmouth-city", method = RequestMethod.GET)
	public String getVirginiaCityPortsmouthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5164000");
		return "VirginiaCityPortsmouthcity";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Frankfort", method = RequestMethod.GET)
	public String getKentuckyMicroFrankfort(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23180");
		return "KentuckyMicroFrankfort";
	}   
@RequestMapping(value = "/states/California/cities/San-Bruno-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanBrunocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "665028");
		return "CaliforniaCitySanBrunocity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Jasper", method = RequestMethod.GET)
	public String getIndianaMicroJasper(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27540");
		return "IndianaMicroJasper";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Sevier-County", method = RequestMethod.GET)
	public String getTennesseeCountySevierCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47155");
		return "TennesseeCountySevierCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Wichita-County", method = RequestMethod.GET)
	public String getTexasCountyWichitaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48485");
		return "TexasCountyWichitaCounty";
	}   
@RequestMapping(value = "/states/California/cities/Alameda-city", method = RequestMethod.GET)
	public String getCaliforniaCityAlamedacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "600562");
		return "CaliforniaCityAlamedacity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Scott-County", method = RequestMethod.GET)
	public String getTennesseeCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47151");
		return "TennesseeCountyScottCounty";
	}   
@RequestMapping(value = "/states/California/metros/Merced", method = RequestMethod.GET)
	public String getCaliforniaMetroMerced(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32900");
		return "CaliforniaMetroMerced";
	}   
@RequestMapping(value = "/states/Texas/counties/Wharton-County", method = RequestMethod.GET)
	public String getTexasCountyWhartonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48481");
		return "TexasCountyWhartonCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Rutherford-County", method = RequestMethod.GET)
	public String getTennesseeCountyRutherfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47149");
		return "TennesseeCountyRutherfordCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Webb-County", method = RequestMethod.GET)
	public String getTexasCountyWebbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48479");
		return "TexasCountyWebbCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Scranton-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityScrantoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4269000");
		return "PennsylvaniaCityScrantoncity";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Robertson-County", method = RequestMethod.GET)
	public String getTennesseeCountyRobertsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47147");
		return "TennesseeCountyRobertsonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Washington-County", method = RequestMethod.GET)
	public String getTexasCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48477");
		return "TexasCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Greenwood-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityGreenwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4530895");
		return "South_CarolinaCityGreenwoodcity";
	}   
@RequestMapping(value = "/states/California/cities/Ceres-city", method = RequestMethod.GET)
	public String getCaliforniaCityCerescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "612524");
		return "CaliforniaCityCerescity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Reston", method = RequestMethod.GET)
	public String getVirginiaCityReston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5166672");
		return "VirginiaCityReston";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Perth-Amboy-city", method = RequestMethod.GET)
	public String getNew_JerseyCityPerthAmboycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3458200");
		return "New_JerseyCityPerthAmboycity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Mount-Juliet-city", method = RequestMethod.GET)
	public String getTennesseeCityMountJulietcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4750780");
		return "TennesseeCityMountJulietcity";
	}   
@RequestMapping(value = "/states/Florida/cities/North-Miami-city", method = RequestMethod.GET)
	public String getFloridaCityNorthMiamicity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1249450");
		return "FloridaCityNorthMiamicity";
	}   
@RequestMapping(value = "/states/Oregon/micros/Hood-River", method = RequestMethod.GET)
	public String getOregonMicroHoodRiver(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26220");
		return "OregonMicroHoodRiver";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Roane-County", method = RequestMethod.GET)
	public String getTennesseeCountyRoaneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47145");
		return "TennesseeCountyRoaneCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Rhea-County", method = RequestMethod.GET)
	public String getTennesseeCountyRheaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47143");
		return "TennesseeCountyRheaCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Waller-County", method = RequestMethod.GET)
	public String getTexasCountyWallerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48473");
		return "TexasCountyWallerCounty";
	}   
@RequestMapping(value = "/states/Tennessee/counties/Putnam-County", method = RequestMethod.GET)
	public String getTennesseeCountyPutnamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47141");
		return "TennesseeCountyPutnamCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Walker-County", method = RequestMethod.GET)
	public String getTexasCountyWalkerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48471");
		return "TexasCountyWalkerCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Yonkers-city", method = RequestMethod.GET)
	public String getNew_YorkCityYonkerscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3684000");
		return "New_YorkCityYonkerscity";
	}   
@RequestMapping(value = "/states/California/cities/Coachella-city", method = RequestMethod.GET)
	public String getCaliforniaCityCoachellacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "614260");
		return "CaliforniaCityCoachellacity";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Danville", method = RequestMethod.GET)
	public String getKentuckyMicroDanville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19220");
		return "KentuckyMicroDanville";
	}   
@RequestMapping(value = "/states/Michigan/micros/Escanaba", method = RequestMethod.GET)
	public String getMichiganMicroEscanaba(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21540");
		return "MichiganMicroEscanaba";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Darien", method = RequestMethod.GET)
	public String getConnecticutCityDarien(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "918920");
		return "ConnecticutCityDarien";
	}   
@RequestMapping(value = "/states/Washington/cities/Walla-Walla-city", method = RequestMethod.GET)
	public String getWashingtonCityWallaWallacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5375775");
		return "WashingtonCityWallaWallacity";
	}   
@RequestMapping(value = "/states/Hawaii/micros/Hilo", method = RequestMethod.GET)
	public String getHawaiiMicroHilo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25900");
		return "HawaiiMicroHilo";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Farragut-town", method = RequestMethod.GET)
	public String getTennesseeCityFarraguttown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4725760");
		return "TennesseeCityFarraguttown";
	}   
@RequestMapping(value = "/states/Georgia/cities/Candler-McAfee", method = RequestMethod.GET)
	public String getGeorgiaCityCandlerMcAfee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1312834");
		return "GeorgiaCityCandlerMcAfee";
	}   
@RequestMapping(value = "/states/Texas/micros/Nacogdoches", method = RequestMethod.GET)
	public String getTexasMicroNacogdoches(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34860");
		return "TexasMicroNacogdoches";
	}   
@RequestMapping(value = "/states/Texas/metros/Texarkana", method = RequestMethod.GET)
	public String getTexasMetroTexarkana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45500");
		return "TexasMetroTexarkana";
	}   
@RequestMapping(value = "/states/Maryland/cities/Arnold", method = RequestMethod.GET)
	public String getMarylandCityArnold(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2402275");
		return "MarylandCityArnold";
	}   
@RequestMapping(value = "/states/Missouri/metros/St-Joseph", method = RequestMethod.GET)
	public String getMissouriMetroStJoseph(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41140");
		return "MissouriMetroStJoseph";
	}   
@RequestMapping(value = "/states/Iowa/metros/Dubuque", method = RequestMethod.GET)
	public String getIowaMetroDubuque(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20220");
		return "IowaMetroDubuque";
	}   
@RequestMapping(value = "/states/Iowa/cities/Marion-city", method = RequestMethod.GET)
	public String getIowaCityMarioncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1949485");
		return "IowaCityMarioncity";
	}   
@RequestMapping(value = "/states/Washington/cities/Orchards", method = RequestMethod.GET)
	public String getWashingtonCityOrchards(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5351795");
		return "WashingtonCityOrchards";
	}   
@RequestMapping(value = "/states/California/cities/West-Carson", method = RequestMethod.GET)
	public String getCaliforniaCityWestCarson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684144");
		return "CaliforniaCityWestCarson";
	}   
@RequestMapping(value = "/states/California/cities/Norwalk-city", method = RequestMethod.GET)
	public String getCaliforniaCityNorwalkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "652526");
		return "CaliforniaCityNorwalkcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Bolingbrook-village", method = RequestMethod.GET)
	public String getIllinoisCityBolingbrookvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1707133");
		return "IllinoisCityBolingbrookvillage";
	}   
@RequestMapping(value = "/states/Florida/cities/Golden-Glades", method = RequestMethod.GET)
	public String getFloridaCityGoldenGlades(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1226375");
		return "FloridaCityGoldenGlades";
	}   
@RequestMapping(value = "/states/New-York/cities/Middletown-city", method = RequestMethod.GET)
	public String getNew_YorkCityMiddletowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3647042");
		return "New_YorkCityMiddletowncity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Danvers", method = RequestMethod.GET)
	public String getMassachusettsCityDanvers(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2516285");
		return "MassachusettsCityDanvers";
	}   
@RequestMapping(value = "/states/Michigan/cities/Dearborn-city", method = RequestMethod.GET)
	public String getMichiganCityDearborncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2621000");
		return "MichiganCityDearborncity";
	}   
@RequestMapping(value = "/states/Hawaii/micros/Kapaa", method = RequestMethod.GET)
	public String getHawaiiMicroKapaa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28180");
		return "HawaiiMicroKapaa";
	}   
@RequestMapping(value = "/states/Missouri/cities/Ferguson-city", method = RequestMethod.GET)
	public String getMissouriCityFergusoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2923986");
		return "MissouriCityFergusoncity";
	}   
@RequestMapping(value = "/states/Florida/cities/Lake-Magdalene", method = RequestMethod.GET)
	public String getFloridaCityLakeMagdalene(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1238350");
		return "FloridaCityLakeMagdalene";
	}   
@RequestMapping(value = "/states/Alabama/micros/Scottsboro", method = RequestMethod.GET)
	public String getAlabamaMicroScottsboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42460");
		return "AlabamaMicroScottsboro";
	}   
@RequestMapping(value = "/states/Maryland/cities/Milford-Mill", method = RequestMethod.GET)
	public String getMarylandCityMilfordMill(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2452562");
		return "MarylandCityMilfordMill";
	}   
@RequestMapping(value = "/states/New-York/cities/Holbrook", method = RequestMethod.GET)
	public String getNew_YorkCityHolbrook(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3635056");
		return "New_YorkCityHolbrook";
	}   
@RequestMapping(value = "/states/Florida/cities/West-Pensacola", method = RequestMethod.GET)
	public String getFloridaCityWestPensacola(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1276675");
		return "FloridaCityWestPensacola";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Wayne-County", method = RequestMethod.GET)
	public String getMississippiCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28153");
		return "MississippiCountyWayneCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Rockford-city", method = RequestMethod.GET)
	public String getIllinoisCityRockfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1765000");
		return "IllinoisCityRockfordcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Carrollwood", method = RequestMethod.GET)
	public String getFloridaCityCarrollwood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1210825");
		return "FloridaCityCarrollwood";
	}   
@RequestMapping(value = "/states/Indiana/cities/Michigan-City-city", method = RequestMethod.GET)
	public String getIndianaCityMichiganCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1848798");
		return "IndianaCityMichiganCitycity";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Kailua--Honolulu-County", method = RequestMethod.GET)
	public String getHawaiiCityKailuaHonoluluCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1523150");
		return "HawaiiCityKailuaHonoluluCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Sammamish-city", method = RequestMethod.GET)
	public String getWashingtonCitySammamishcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5361115");
		return "WashingtonCitySammamishcity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Washington-County", method = RequestMethod.GET)
	public String getMississippiCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28151");
		return "MississippiCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/North-Dakota/metros/Bismarck", method = RequestMethod.GET)
	public String getNorth_DakotaMetroBismarck(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13900");
		return "North_DakotaMetroBismarck";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Terrytown", method = RequestMethod.GET)
	public String getLouisianaCityTerrytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2275180");
		return "LouisianaCityTerrytown";
	}   
@RequestMapping(value = "/states/Indiana/metros/South-BendMishawaka", method = RequestMethod.GET)
	public String getIndianaMetroSouthBendMishawaka(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43780");
		return "IndianaMetroSouthBendMishawaka";
	}   
@RequestMapping(value = "/states/Arizona/cities/El-Mirage-city", method = RequestMethod.GET)
	public String getArizonaCityElMiragecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "422220");
		return "ArizonaCityElMiragecity";
	}   
@RequestMapping(value = "/states/California/cities/Fairfield-city", method = RequestMethod.GET)
	public String getCaliforniaCityFairfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "623182");
		return "CaliforniaCityFairfieldcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Bellview", method = RequestMethod.GET)
	public String getFloridaCityBellview(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1205462");
		return "FloridaCityBellview";
	}   
@RequestMapping(value = "/states/Kansas/counties/Wyandotte-County", method = RequestMethod.GET)
	public String getKansasCountyWyandotteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20209");
		return "KansasCountyWyandotteCounty";
	}   
@RequestMapping(value = "/states/Louisiana/micros/Fort-Polk-South", method = RequestMethod.GET)
	public String getLouisianaMicroFortPolkSouth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22860");
		return "LouisianaMicroFortPolkSouth";
	}   
@RequestMapping(value = "/states/Nevada/metros/Carson-City", method = RequestMethod.GET)
	public String getNevadaMetroCarsonCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16180");
		return "NevadaMetroCarsonCity";
	}   
@RequestMapping(value = "/states/California/cities/Wildomar-city", method = RequestMethod.GET)
	public String getCaliforniaCityWildomarcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "685446");
		return "CaliforniaCityWildomarcity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Dakota-Ridge", method = RequestMethod.GET)
	public String getColoradoCityDakotaRidge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "819150");
		return "ColoradoCityDakotaRidge";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Yazoo-County", method = RequestMethod.GET)
	public String getMississippiCountyYazooCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28163");
		return "MississippiCountyYazooCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Van-Buren-city", method = RequestMethod.GET)
	public String getArkansasCityVanBurencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "571480");
		return "ArkansasCityVanBurencity";
	}   
@RequestMapping(value = "/states/North-Dakota/micros/Minot", method = RequestMethod.GET)
	public String getNorth_DakotaMicroMinot(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33500");
		return "North_DakotaMicroMinot";
	}   
@RequestMapping(value = "/states/California/cities/Antioch-city", method = RequestMethod.GET)
	public String getCaliforniaCityAntiochcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "602252");
		return "CaliforniaCityAntiochcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Erie", method = RequestMethod.GET)
	public String getPennsylvaniaMetroErie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21500");
		return "PennsylvaniaMetroErie";
	}   
@RequestMapping(value = "/states/Illinois/cities/Niles-village", method = RequestMethod.GET)
	public String getIllinoisCityNilesvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1753000");
		return "IllinoisCityNilesvillage";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Iredell-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyIredellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37097");
		return "North_CarolinaCountyIredellCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Highland-Park-city", method = RequestMethod.GET)
	public String getIllinoisCityHighlandParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1734722");
		return "IllinoisCityHighlandParkcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Jackson-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37099");
		return "North_CarolinaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Bayonet-Point", method = RequestMethod.GET)
	public String getFloridaCityBayonetPoint(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1204162");
		return "FloridaCityBayonetPoint";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Tippah-County", method = RequestMethod.GET)
	public String getMississippiCountyTippahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28139");
		return "MississippiCountyTippahCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Hertford-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyHertfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37091");
		return "North_CarolinaCountyHertfordCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Hoke-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyHokeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37093");
		return "North_CarolinaCountyHokeCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Batavia-city", method = RequestMethod.GET)
	public String getIllinoisCityBataviacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1704078");
		return "IllinoisCityBataviacity";
	}   
@RequestMapping(value = "/states/California/cities/Clovis-city", method = RequestMethod.GET)
	public String getCaliforniaCityCloviscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "614218");
		return "CaliforniaCityCloviscity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Johnstown-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityJohnstowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4238288");
		return "PennsylvaniaCityJohnstowncity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Massillon-city", method = RequestMethod.GET)
	public String getOhioCityMassilloncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3948244");
		return "OhioCityMassilloncity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Sunflower-County", method = RequestMethod.GET)
	public String getMississippiCountySunflowerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28133");
		return "MississippiCountySunflowerCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/Myrtle-BeachConwayNorth-Myrtle-Beach", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroMyrtleBeachConwayNorthMyrtleBeach(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34820");
		return "South_CarolinaMetroMyrtleBeachConwayNorthMyrtleBeach";
	}   
@RequestMapping(value = "/states/California/cities/Novato-city", method = RequestMethod.GET)
	public String getCaliforniaCityNovatocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "652582");
		return "CaliforniaCityNovatocity";
	}   
@RequestMapping(value = "/states/Kentucky/metros/Lexington-Fayette", method = RequestMethod.GET)
	public String getKentuckyMetroLexingtonFayette(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30460");
		return "KentuckyMetroLexingtonFayette";
	}   
@RequestMapping(value = "/states/Texas/cities/Corinth-city", method = RequestMethod.GET)
	public String getTexasCityCorinthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4816696");
		return "TexasCityCorinthcity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Tate-County", method = RequestMethod.GET)
	public String getMississippiCountyTateCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28137");
		return "MississippiCountyTateCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Cleburne-city", method = RequestMethod.GET)
	public String getTexasCityCleburnecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4815364");
		return "TexasCityCleburnecity";
	}   
@RequestMapping(value = "/states/California/cities/Carlsbad-city", method = RequestMethod.GET)
	public String getCaliforniaCityCarlsbadcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "611194");
		return "CaliforniaCityCarlsbadcity";
	}   
@RequestMapping(value = "/states/Florida/metros/LakelandWinter-Haven", method = RequestMethod.GET)
	public String getFloridaMetroLakelandWinterHaven(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29460");
		return "FloridaMetroLakelandWinterHaven";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Jeffersontown-city", method = RequestMethod.GET)
	public String getKentuckyCityJeffersontowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2140222");
		return "KentuckyCityJeffersontowncity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Harnett-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyHarnettCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37085");
		return "North_CarolinaCountyHarnettCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Haywood-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyHaywoodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37087");
		return "North_CarolinaCountyHaywoodCounty";
	}   
@RequestMapping(value = "/states/California/cities/Florin", method = RequestMethod.GET)
	public String getCaliforniaCityFlorin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "624498");
		return "CaliforniaCityFlorin";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Henderson-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyHendersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37089");
		return "North_CarolinaCountyHendersonCounty";
	}   
@RequestMapping(value = "/states/Utah/metros/St-George", method = RequestMethod.GET)
	public String getUtahMetroStGeorge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41100");
		return "UtahMetroStGeorge";
	}   
@RequestMapping(value = "/states/California/cities/Ontario-city", method = RequestMethod.GET)
	public String getCaliforniaCityOntariocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "653896");
		return "CaliforniaCityOntariocity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Warren-County", method = RequestMethod.GET)
	public String getMississippiCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28149");
		return "MississippiCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/California/cities/Pico-Rivera-city", method = RequestMethod.GET)
	public String getCaliforniaCityPicoRiveracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "656924");
		return "CaliforniaCityPicoRiveracity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Guilford-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyGuilfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37081");
		return "North_CarolinaCountyGuilfordCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Maricopa-city", method = RequestMethod.GET)
	public String getArizonaCityMaricopacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "444410");
		return "ArizonaCityMaricopacity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Halifax-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyHalifaxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37083");
		return "North_CarolinaCountyHalifaxCounty";
	}   
@RequestMapping(value = "/states/California/cities/Rowland-Heights", method = RequestMethod.GET)
	public String getCaliforniaCityRowlandHeights(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "663218");
		return "CaliforniaCityRowlandHeights";
	}   
@RequestMapping(value = "/states/Utah/cities/Clinton-city", method = RequestMethod.GET)
	public String getUtahCityClintoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4914290");
		return "UtahCityClintoncity";
	}   
@RequestMapping(value = "/states/California/cities/Fullerton-city", method = RequestMethod.GET)
	public String getCaliforniaCityFullertoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "628000");
		return "CaliforniaCityFullertoncity";
	}   
@RequestMapping(value = "/states/Idaho/cities/Moscow-city", method = RequestMethod.GET)
	public String getIdahoCityMoscowcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1654550");
		return "IdahoCityMoscowcity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Union-County", method = RequestMethod.GET)
	public String getMississippiCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28145");
		return "MississippiCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Alice", method = RequestMethod.GET)
	public String getTexasMicroAlice(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10860");
		return "TexasMicroAlice";
	}   
@RequestMapping(value = "/states/Missouri/metros/Kansas-City", method = RequestMethod.GET)
	public String getMissouriMetroKansasCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28140");
		return "MissouriMetroKansasCity";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Scottsbluff", method = RequestMethod.GET)
	public String getNebraskaMicroScottsbluff(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42420");
		return "NebraskaMicroScottsbluff";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Granville-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyGranvilleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37077");
		return "North_CarolinaCountyGranvilleCounty";
	}   
@RequestMapping(value = "/states/Ohio/metros/Cleveland-Elyria", method = RequestMethod.GET)
	public String getOhioMetroClevelandElyria(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17460");
		return "OhioMetroClevelandElyria";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Greene-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37079");
		return "North_CarolinaCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Sherwood-city", method = RequestMethod.GET)
	public String getArkansasCitySherwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "563800");
		return "ArkansasCitySherwoodcity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Hobart-city", method = RequestMethod.GET)
	public String getIndianaCityHobartcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1834114");
		return "IndianaCityHobartcity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Prentiss-County", method = RequestMethod.GET)
	public String getMississippiCountyPrentissCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28117");
		return "MississippiCountyPrentissCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Gaston-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyGastonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37071");
		return "North_CarolinaCountyGastonCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Springdale-city", method = RequestMethod.GET)
	public String getArkansasCitySpringdalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "566080");
		return "ArkansasCitySpringdalecity";
	}   
@RequestMapping(value = "/states/Utah/counties/Wasatch-County", method = RequestMethod.GET)
	public String getUtahCountyWasatchCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49051");
		return "UtahCountyWasatchCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Pontotoc-County", method = RequestMethod.GET)
	public String getMississippiCountyPontotocCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28115");
		return "MississippiCountyPontotocCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Pike-County", method = RequestMethod.GET)
	public String getMississippiCountyPikeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28113");
		return "MississippiCountyPikeCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Baltimore-city", method = RequestMethod.GET)
	public String getMarylandCityBaltimorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2404000");
		return "MarylandCityBaltimorecity";
	}   
@RequestMapping(value = "/states/Texas/cities/Kingsville-city", method = RequestMethod.GET)
	public String getTexasCityKingsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4839352");
		return "TexasCityKingsvillecity";
	}   
@RequestMapping(value = "/states/Utah/counties/Weber-County", method = RequestMethod.GET)
	public String getUtahCountyWeberCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49057");
		return "UtahCountyWeberCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Washington-County", method = RequestMethod.GET)
	public String getUtahCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49053");
		return "UtahCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Somerset", method = RequestMethod.GET)
	public String getPennsylvaniaMicroSomerset(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43740");
		return "PennsylvaniaMicroSomerset";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Durham-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyDurhamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37063");
		return "North_CarolinaCountyDurhamCounty";
	}   
@RequestMapping(value = "/states/California/cities/Florence-Graham", method = RequestMethod.GET)
	public String getCaliforniaCityFlorenceGraham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "624477");
		return "CaliforniaCityFlorenceGraham";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Edgecombe-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyEdgecombeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37065");
		return "North_CarolinaCountyEdgecombeCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Forsyth-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyForsythCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37067");
		return "North_CarolinaCountyForsythCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Franklin-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37069");
		return "North_CarolinaCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Utah-County", method = RequestMethod.GET)
	public String getUtahCountyUtahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49049");
		return "UtahCountyUtahCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Simpson-County", method = RequestMethod.GET)
	public String getMississippiCountySimpsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28127");
		return "MississippiCountySimpsonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Paramount-city", method = RequestMethod.GET)
	public String getCaliforniaCityParamountcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "655618");
		return "CaliforniaCityParamountcity";
	}   
@RequestMapping(value = "/states/Colorado/micros/Fort-Morgan", method = RequestMethod.GET)
	public String getColoradoMicroFortMorgan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22820");
		return "ColoradoMicroFortMorgan";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Oxford", method = RequestMethod.GET)
	public String getMississippiMicroOxford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37060");
		return "MississippiMicroOxford";
	}   
@RequestMapping(value = "/states/Colorado/cities/Greeley-city", method = RequestMethod.GET)
	public String getColoradoCityGreeleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "832155");
		return "ColoradoCityGreeleycity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Duplin-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyDuplinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37061");
		return "North_CarolinaCountyDuplinCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Rankin-County", method = RequestMethod.GET)
	public String getMississippiCountyRankinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28121");
		return "MississippiCountyRankinCounty";
	}   
@RequestMapping(value = "/states/California/cities/Bell-city", method = RequestMethod.GET)
	public String getCaliforniaCityBellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "604870");
		return "CaliforniaCityBellcity";
	}   
@RequestMapping(value = "/states/Texas/cities/San-Marcos-city", method = RequestMethod.GET)
	public String getTexasCitySanMarcoscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4865600");
		return "TexasCitySanMarcoscity";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Scott-County", method = RequestMethod.GET)
	public String getMississippiCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28123");
		return "MississippiCountyScottCounty";
	}   
@RequestMapping(value = "/states/California/cities/Antelope", method = RequestMethod.GET)
	public String getCaliforniaCityAntelope(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "602210");
		return "CaliforniaCityAntelope";
	}   
@RequestMapping(value = "/states/Utah/counties/Uintah-County", method = RequestMethod.GET)
	public String getUtahCountyUintahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49047");
		return "UtahCountyUintahCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Tooele-County", method = RequestMethod.GET)
	public String getUtahCountyTooeleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49045");
		return "UtahCountyTooeleCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Summit-County", method = RequestMethod.GET)
	public String getUtahCountySummitCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49043");
		return "UtahCountySummitCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Sevier-County", method = RequestMethod.GET)
	public String getUtahCountySevierCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49041");
		return "UtahCountySevierCounty";
	}   
@RequestMapping(value = "/states/Kansas/metros/Wichita", method = RequestMethod.GET)
	public String getKansasMetroWichita(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48620");
		return "KansasMetroWichita";
	}   
@RequestMapping(value = "/states/Virginia/cities/Mechanicsville", method = RequestMethod.GET)
	public String getVirginiaCityMechanicsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5150856");
		return "VirginiaCityMechanicsville";
	}   
@RequestMapping(value = "/states/Illinois/cities/Moline-city", method = RequestMethod.GET)
	public String getIllinoisCityMolinecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1749867");
		return "IllinoisCityMolinecity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Martin", method = RequestMethod.GET)
	public String getTennesseeMicroMartin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32280");
		return "TennesseeMicroMartin";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Ardmore-city", method = RequestMethod.GET)
	public String getOklahomaCityArdmorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4002600");
		return "OklahomaCityArdmorecity";
	}   
@RequestMapping(value = "/states/Utah/cities/Draper-city", method = RequestMethod.GET)
	public String getUtahCityDrapercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4920120");
		return "UtahCityDrapercity";
	}   
@RequestMapping(value = "/states/Washington/cities/Tacoma-city", method = RequestMethod.GET)
	public String getWashingtonCityTacomacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5370000");
		return "WashingtonCityTacomacity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Springfield-city", method = RequestMethod.GET)
	public String getMassachusettsCitySpringfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2567000");
		return "MassachusettsCitySpringfieldcity";
	}   
@RequestMapping(value = "/states/Georgia/metros/Hinesville", method = RequestMethod.GET)
	public String getGeorgiaMetroHinesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25980");
		return "GeorgiaMetroHinesville";
	}   
@RequestMapping(value = "/states/Maryland/micros/Cambridge", method = RequestMethod.GET)
	public String getMarylandMicroCambridge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15700");
		return "MarylandMicroCambridge";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Starkville", method = RequestMethod.GET)
	public String getMississippiMicroStarkville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44260");
		return "MississippiMicroStarkville";
	}   
@RequestMapping(value = "/states/Florida/cities/East-LakeOrient-Park", method = RequestMethod.GET)
	public String getFloridaCityEastLakeOrientPark(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1219212");
		return "FloridaCityEastLakeOrientPark";
	}   
@RequestMapping(value = "/states/Michigan/cities/Rochester-Hills-city", method = RequestMethod.GET)
	public String getMichiganCityRochesterHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2669035");
		return "MichiganCityRochesterHillscity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Liberal-city", method = RequestMethod.GET)
	public String getKansasCityLiberalcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2039825");
		return "KansasCityLiberalcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Holt", method = RequestMethod.GET)
	public String getMichiganCityHolt(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2638780");
		return "MichiganCityHolt";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Mooresville-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityMooresvilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3744220");
		return "North_CarolinaCityMooresvilletown";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Avoyelles-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyAvoyellesParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22009");
		return "LouisianaCountyAvoyellesParish";
	}   
@RequestMapping(value = "/states/Ohio/cities/Lakewood-city", method = RequestMethod.GET)
	public String getOhioCityLakewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3941664");
		return "OhioCityLakewoodcity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Goodyear-city", method = RequestMethod.GET)
	public String getArizonaCityGoodyearcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "428380");
		return "ArizonaCityGoodyearcity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Acadia-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyAcadiaParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22001");
		return "LouisianaCountyAcadiaParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Allen-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyAllenParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22003");
		return "LouisianaCountyAllenParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Ascension-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyAscensionParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22005");
		return "LouisianaCountyAscensionParish";
	}   
@RequestMapping(value = "/states/Ohio/cities/South-Euclid-city", method = RequestMethod.GET)
	public String getOhioCitySouthEuclidcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3973264");
		return "OhioCitySouthEuclidcity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Assumption-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyAssumptionParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22007");
		return "LouisianaCountyAssumptionParish";
	}   
@RequestMapping(value = "/states/Texas/cities/Cedar-Park-city", method = RequestMethod.GET)
	public String getTexasCityCedarParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4813552");
		return "TexasCityCedarParkcity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Bettendorf-city", method = RequestMethod.GET)
	public String getIowaCityBettendorfcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1906355");
		return "IowaCityBettendorfcity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Salisbury-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCitySalisburycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3758860");
		return "North_CarolinaCitySalisburycity";
	}   
@RequestMapping(value = "/states/Connecticut/metros/New-HavenMilford", method = RequestMethod.GET)
	public String getConnecticutMetroNewHavenMilford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35300");
		return "ConnecticutMetroNewHavenMilford";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/GreensboroHigh-Point", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroGreensboroHighPoint(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24660");
		return "North_CarolinaMetroGreensboroHighPoint";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Ridgewood-village", method = RequestMethod.GET)
	public String getNew_JerseyCityRidgewoodvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3463000");
		return "New_JerseyCityRidgewoodvillage";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Chambersburg-borough", method = RequestMethod.GET)
	public String getPennsylvaniaCityChambersburgborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4212536");
		return "PennsylvaniaCityChambersburgborough";
	}   
@RequestMapping(value = "/states/Georgia/micros/Thomaston", method = RequestMethod.GET)
	public String getGeorgiaMicroThomaston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45580");
		return "GeorgiaMicroThomaston";
	}   
@RequestMapping(value = "/states/Illinois/cities/Charleston-city", method = RequestMethod.GET)
	public String getIllinoisCityCharlestoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1712567");
		return "IllinoisCityCharlestoncity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Huntsville-city", method = RequestMethod.GET)
	public String getAlabamaCityHuntsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "137000");
		return "AlabamaCityHuntsvillecity";
	}   
@RequestMapping(value = "/states/Florida/cities/East-Lake", method = RequestMethod.GET)
	public String getFloridaCityEastLake(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1219206");
		return "FloridaCityEastLake";
	}   
@RequestMapping(value = "/states/Minnesota/cities/St-Louis-Park-city", method = RequestMethod.GET)
	public String getMinnesotaCityStLouisParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2757220");
		return "MinnesotaCityStLouisParkcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Mansfield-city", method = RequestMethod.GET)
	public String getTexasCityMansfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4846452");
		return "TexasCityMansfieldcity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Kennesaw-city", method = RequestMethod.GET)
	public String getGeorgiaCityKennesawcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1343192");
		return "GeorgiaCityKennesawcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Wooster-city", method = RequestMethod.GET)
	public String getOhioCityWoostercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3986548");
		return "OhioCityWoostercity";
	}   
@RequestMapping(value = "/states/Virginia/metros/Blacksburg-Christiansburg-Radford", method = RequestMethod.GET)
	public String getVirginiaMetroBlacksburgChristiansburgRadford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13980");
		return "VirginiaMetroBlacksburgChristiansburgRadford";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Bowling-Green-city", method = RequestMethod.GET)
	public String getKentuckyCityBowlingGreencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2108902");
		return "KentuckyCityBowlingGreencity";
	}   
@RequestMapping(value = "/states/Illinois/micros/Freeport", method = RequestMethod.GET)
	public String getIllinoisMicroFreeport(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23300");
		return "IllinoisMicroFreeport";
	}   
@RequestMapping(value = "/states/Iowa/micros/Marshalltown", method = RequestMethod.GET)
	public String getIowaMicroMarshalltown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32260");
		return "IowaMicroMarshalltown";
	}   
@RequestMapping(value = "/states/Florida/cities/Pembroke-Pines-city", method = RequestMethod.GET)
	public String getFloridaCityPembrokePinescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1255775");
		return "FloridaCityPembrokePinescity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Royal-Oak-city", method = RequestMethod.GET)
	public String getMichiganCityRoyalOakcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2670040");
		return "MichiganCityRoyalOakcity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Holly-Springs-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityHollySpringstown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3732260");
		return "North_CarolinaCityHollySpringstown";
	}   
@RequestMapping(value = "/states/Oregon/micros/Ontario", method = RequestMethod.GET)
	public String getOregonMicroOntario(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36620");
		return "OregonMicroOntario";
	}   
@RequestMapping(value = "/states/Ohio/cities/Portsmouth-city", method = RequestMethod.GET)
	public String getOhioCityPortsmouthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3964304");
		return "OhioCityPortsmouthcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Kentwood-city", method = RequestMethod.GET)
	public String getMichiganCityKentwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2642820");
		return "MichiganCityKentwoodcity";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Baraboo", method = RequestMethod.GET)
	public String getWisconsinMicroBaraboo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12660");
		return "WisconsinMicroBaraboo";
	}   
@RequestMapping(value = "/states/Texas/cities/Wylie-city", method = RequestMethod.GET)
	public String getTexasCityWyliecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4880356");
		return "TexasCityWyliecity";
	}   
@RequestMapping(value = "/states/South-Dakota/micros/Mitchell", method = RequestMethod.GET)
	public String getSouth_DakotaMicroMitchell(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33580");
		return "South_DakotaMicroMitchell";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Atlantic-City-city", method = RequestMethod.GET)
	public String getNew_JerseyCityAtlanticCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3402080");
		return "New_JerseyCityAtlanticCitycity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Alexandria-city", method = RequestMethod.GET)
	public String getVirginiaCityAlexandriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5101000");
		return "VirginiaCityAlexandriacity";
	}   
@RequestMapping(value = "/states/California/cities/Barstow-city", method = RequestMethod.GET)
	public String getCaliforniaCityBarstowcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "604030");
		return "CaliforniaCityBarstowcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Rock-Island-city", method = RequestMethod.GET)
	public String getIllinoisCityRockIslandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1765078");
		return "IllinoisCityRockIslandcity";
	}   
@RequestMapping(value = "/states/California/cities/Watsonville-city", method = RequestMethod.GET)
	public String getCaliforniaCityWatsonvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "683668");
		return "CaliforniaCityWatsonvillecity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Peru", method = RequestMethod.GET)
	public String getIndianaMicroPeru(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37940");
		return "IndianaMicroPeru";
	}   
@RequestMapping(value = "/states/Delaware/counties/Kent-County", method = RequestMethod.GET)
	public String getDelawareCountyKentCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10001");
		return "DelawareCountyKentCounty";
	}   
@RequestMapping(value = "/states/Delaware/counties/New-Castle-County", method = RequestMethod.GET)
	public String getDelawareCountyNewCastleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10003");
		return "DelawareCountyNewCastleCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Golden-Valley-city", method = RequestMethod.GET)
	public String getMinnesotaCityGoldenValleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2724308");
		return "MinnesotaCityGoldenValleycity";
	}   
@RequestMapping(value = "/states/Delaware/counties/Sussex-County", method = RequestMethod.GET)
	public String getDelawareCountySussexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10005");
		return "DelawareCountySussexCounty";
	}   
@RequestMapping(value = "/states/California/cities/Duarte-city", method = RequestMethod.GET)
	public String getCaliforniaCityDuartecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "619990");
		return "CaliforniaCityDuartecity";
	}   
@RequestMapping(value = "/states/California/cities/Concord-city", method = RequestMethod.GET)
	public String getCaliforniaCityConcordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "616000");
		return "CaliforniaCityConcordcity";
	}   
@RequestMapping(value = "/states/Ohio/metros/Springfield", method = RequestMethod.GET)
	public String getOhioMetroSpringfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44220");
		return "OhioMetroSpringfield";
	}   
@RequestMapping(value = "/states/Virginia/micros/Danville", method = RequestMethod.GET)
	public String getVirginiaMicroDanville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19260");
		return "VirginiaMicroDanville";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/Hilton-Head-IslandBlufftonBeaufort", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroHiltonHeadIslandBlufftonBeaufort(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25940");
		return "South_CarolinaMetroHiltonHeadIslandBlufftonBeaufort";
	}   
@RequestMapping(value = "/states/California/cities/San-Leandro-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanLeandrocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668084");
		return "CaliforniaCitySanLeandrocity";
	}   
@RequestMapping(value = "/states/Texas/cities/Greenville-city", method = RequestMethod.GET)
	public String getTexasCityGreenvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4830920");
		return "TexasCityGreenvillecity";
	}   
@RequestMapping(value = "/states/Texas/cities/Coppell-city", method = RequestMethod.GET)
	public String getTexasCityCoppellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4816612");
		return "TexasCityCoppellcity";
	}   
@RequestMapping(value = "/states/Washington/cities/Mercer-Island-city", method = RequestMethod.GET)
	public String getWashingtonCityMercerIslandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5345005");
		return "WashingtonCityMercerIslandcity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Rocky-Mount-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityRockyMountcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3757500");
		return "North_CarolinaCityRockyMountcity";
	}   
@RequestMapping(value = "/states/California/cities/Calexico-city", method = RequestMethod.GET)
	public String getCaliforniaCityCalexicocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "609710");
		return "CaliforniaCityCalexicocity";
	}   
@RequestMapping(value = "/states/New-York/cities/Freeport-village", method = RequestMethod.GET)
	public String getNew_YorkCityFreeportvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3627485");
		return "New_YorkCityFreeportvillage";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Tupelo-city", method = RequestMethod.GET)
	public String getMississippiCityTupelocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2874840");
		return "MississippiCityTupelocity";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Espanola", method = RequestMethod.GET)
	public String getNew_MexicoMicroEspaola(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21580");
		return "New_MexicoMicroEspaola";
	}   
@RequestMapping(value = "/states/Connecticut/cities/New-Haven-city", method = RequestMethod.GET)
	public String getConnecticutCityNewHavencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "952000");
		return "ConnecticutCityNewHavencity";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Norwalk-city", method = RequestMethod.GET)
	public String getConnecticutCityNorwalkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "955990");
		return "ConnecticutCityNorwalkcity";
	}   
@RequestMapping(value = "/states/Florida/metros/The-Villages", method = RequestMethod.GET)
	public String getFloridaMetroTheVillages(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45540");
		return "FloridaMetroTheVillages";
	}   
@RequestMapping(value = "/states/Illinois/cities/DeKalb-city", method = RequestMethod.GET)
	public String getIllinoisCityDeKalbcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1719161");
		return "IllinoisCityDeKalbcity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Greeneville", method = RequestMethod.GET)
	public String getTennesseeMicroGreeneville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24620");
		return "TennesseeMicroGreeneville";
	}   
@RequestMapping(value = "/states/Maryland/cities/Frederick-city", method = RequestMethod.GET)
	public String getMarylandCityFrederickcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2430325");
		return "MarylandCityFrederickcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Copperas-Cove-city", method = RequestMethod.GET)
	public String getTexasCityCopperasCovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4816624");
		return "TexasCityCopperasCovecity";
	}   
@RequestMapping(value = "/states/Texas/cities/Pflugerville-city", method = RequestMethod.GET)
	public String getTexasCityPflugervillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4857176");
		return "TexasCityPflugervillecity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Bergenfield-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityBergenfieldborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3405170");
		return "New_JerseyCityBergenfieldborough";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Stratford", method = RequestMethod.GET)
	public String getConnecticutCityStratford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "974260");
		return "ConnecticutCityStratford";
	}   
@RequestMapping(value = "/states/California/cities/Redwood-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityRedwoodCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "660102");
		return "CaliforniaCityRedwoodCitycity";
	}   
@RequestMapping(value = "/states/Minnesota/metros/Duluth", method = RequestMethod.GET)
	public String getMinnesotaMetroDuluth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20260");
		return "MinnesotaMetroDuluth";
	}   
@RequestMapping(value = "/states/Maryland/cities/Bethesda", method = RequestMethod.GET)
	public String getMarylandCityBethesda(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2407125");
		return "MarylandCityBethesda";
	}   
@RequestMapping(value = "/states/Missouri/metros/St-Louis", method = RequestMethod.GET)
	public String getMissouriMetroStLouis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41180");
		return "MissouriMetroStLouis";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Chelsea-city", method = RequestMethod.GET)
	public String getMassachusettsCityChelseacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2513205");
		return "MassachusettsCityChelseacity";
	}   
@RequestMapping(value = "/states/West-Virginia/cities/Huntington-city", method = RequestMethod.GET)
	public String getWest_VirginiaCityHuntingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5439460");
		return "West_VirginiaCityHuntingtoncity";
	}   
@RequestMapping(value = "/states/Utah/micros/Vernal", method = RequestMethod.GET)
	public String getUtahMicroVernal(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46860");
		return "UtahMicroVernal";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Newark-city", method = RequestMethod.GET)
	public String getNew_JerseyCityNewarkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3451000");
		return "New_JerseyCityNewarkcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Ormond-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityOrmondBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1253150");
		return "FloridaCityOrmondBeachcity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Redmond-city", method = RequestMethod.GET)
	public String getOregonCityRedmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4161200");
		return "OregonCityRedmondcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Westmont-village", method = RequestMethod.GET)
	public String getIllinoisCityWestmontvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1780645");
		return "IllinoisCityWestmontvillage";
	}   
@RequestMapping(value = "/states/Iowa/cities/Cedar-Falls-city", method = RequestMethod.GET)
	public String getIowaCityCedarFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1911755");
		return "IowaCityCedarFallscity";
	}   
@RequestMapping(value = "/states/Utah/cities/Layton-city", method = RequestMethod.GET)
	public String getUtahCityLaytoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4943660");
		return "UtahCityLaytoncity";
	}   
@RequestMapping(value = "/states/Texas/micros/Marshall", method = RequestMethod.GET)
	public String getTexasMicroMarshall(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32220");
		return "TexasMicroMarshall";
	}   
@RequestMapping(value = "/states/Idaho/micros/Blackfoot", method = RequestMethod.GET)
	public String getIdahoMicroBlackfoot(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13940");
		return "IdahoMicroBlackfoot";
	}   
@RequestMapping(value = "/states/California/cities/East-Palo-Alto-city", method = RequestMethod.GET)
	public String getCaliforniaCityEastPaloAltocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "620956");
		return "CaliforniaCityEastPaloAltocity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Linden-city", method = RequestMethod.GET)
	public String getNew_JerseyCityLindencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3440350");
		return "New_JerseyCityLindencity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Hazleton-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityHazletoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4233408");
		return "PennsylvaniaCityHazletoncity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Urbana-city", method = RequestMethod.GET)
	public String getIllinoisCityUrbanacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1777005");
		return "IllinoisCityUrbanacity";
	}   
@RequestMapping(value = "/states/California/counties/Sutter-County", method = RequestMethod.GET)
	public String getCaliforniaCountySutterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6101");
		return "CaliforniaCountySutterCounty";
	}   
@RequestMapping(value = "/states/California/counties/Tehama-County", method = RequestMethod.GET)
	public String getCaliforniaCountyTehamaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6103");
		return "CaliforniaCountyTehamaCounty";
	}   
@RequestMapping(value = "/states/Oregon/micros/The-Dalles", method = RequestMethod.GET)
	public String getOregonMicroTheDalles(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45520");
		return "OregonMicroTheDalles";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Indian-Trail-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityIndianTrailtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3733560");
		return "North_CarolinaCityIndianTrailtown";
	}   
@RequestMapping(value = "/states/Montana/metros/Missoula", method = RequestMethod.GET)
	public String getMontanaMetroMissoula(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33540");
		return "MontanaMetroMissoula";
	}   
@RequestMapping(value = "/states/Maine/metros/Bangor", method = RequestMethod.GET)
	public String getMaineMetroBangor(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12620");
		return "MaineMetroBangor";
	}   
@RequestMapping(value = "/states/California/cities/South-Whittier", method = RequestMethod.GET)
	public String getCaliforniaCitySouthWhittier(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673430");
		return "CaliforniaCitySouthWhittier";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Racine-city", method = RequestMethod.GET)
	public String getWisconsinCityRacinecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5566000");
		return "WisconsinCityRacinecity";
	}   
@RequestMapping(value = "/states/Illinois/metros/Peoria", method = RequestMethod.GET)
	public String getIllinoisMetroPeoria(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37900");
		return "IllinoisMetroPeoria";
	}   
@RequestMapping(value = "/states/Georgia/cities/Gainesville-city", method = RequestMethod.GET)
	public String getGeorgiaCityGainesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1331908");
		return "GeorgiaCityGainesvillecity";
	}   
@RequestMapping(value = "/states/California/counties/Ventura-County", method = RequestMethod.GET)
	public String getCaliforniaCountyVenturaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6111");
		return "CaliforniaCountyVenturaCounty";
	}   
@RequestMapping(value = "/states/Nevada/cities/Whitney", method = RequestMethod.GET)
	public String getNevadaCityWhitney(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3283800");
		return "NevadaCityWhitney";
	}   
@RequestMapping(value = "/states/California/counties/Yolo-County", method = RequestMethod.GET)
	public String getCaliforniaCountyYoloCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6113");
		return "CaliforniaCountyYoloCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Sunny-Isles-Beach-city", method = RequestMethod.GET)
	public String getFloridaCitySunnyIslesBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1269555");
		return "FloridaCitySunnyIslesBeachcity";
	}   
@RequestMapping(value = "/states/Washington/cities/Puyallup-city", method = RequestMethod.GET)
	public String getWashingtonCityPuyallupcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5356695");
		return "WashingtonCityPuyallupcity";
	}   
@RequestMapping(value = "/states/California/counties/Yuba-County", method = RequestMethod.GET)
	public String getCaliforniaCountyYubaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6115");
		return "CaliforniaCountyYubaCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Pittsburgh", method = RequestMethod.GET)
	public String getPennsylvaniaMetroPittsburgh(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38300");
		return "PennsylvaniaMetroPittsburgh";
	}   
@RequestMapping(value = "/states/Georgia/micros/Calhoun", method = RequestMethod.GET)
	public String getGeorgiaMicroCalhoun(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15660");
		return "GeorgiaMicroCalhoun";
	}   
@RequestMapping(value = "/states/Missouri/micros/Rolla", method = RequestMethod.GET)
	public String getMissouriMicroRolla(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40620");
		return "MissouriMicroRolla";
	}   
@RequestMapping(value = "/states/Illinois/cities/Cicero-town", method = RequestMethod.GET)
	public String getIllinoisCityCicerotown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1714351");
		return "IllinoisCityCicerotown";
	}   
@RequestMapping(value = "/states/California/cities/West-WhittierLos-Nietos", method = RequestMethod.GET)
	public String getCaliforniaCityWestWhittierLosNietos(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684921");
		return "CaliforniaCityWestWhittierLosNietos";
	}   
@RequestMapping(value = "/states/Texas/cities/Schertz-city", method = RequestMethod.GET)
	public String getTexasCitySchertzcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4866128");
		return "TexasCitySchertzcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Zion-city", method = RequestMethod.GET)
	public String getIllinoisCityZioncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1784220");
		return "IllinoisCityZioncity";
	}   
@RequestMapping(value = "/states/Florida/cities/Homestead-city", method = RequestMethod.GET)
	public String getFloridaCityHomesteadcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1232275");
		return "FloridaCityHomesteadcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Big-Spring-city", method = RequestMethod.GET)
	public String getTexasCityBigSpringcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4808236");
		return "TexasCityBigSpringcity";
	}   
@RequestMapping(value = "/states/California/counties/Tulare-County", method = RequestMethod.GET)
	public String getCaliforniaCountyTulareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6107");
		return "CaliforniaCountyTulareCounty";
	}   
@RequestMapping(value = "/states/California/cities/Encinitas-city", method = RequestMethod.GET)
	public String getCaliforniaCityEncinitascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "622678");
		return "CaliforniaCityEncinitascity";
	}   
@RequestMapping(value = "/states/Idaho/cities/Nampa-city", method = RequestMethod.GET)
	public String getIdahoCityNampacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1656260");
		return "IdahoCityNampacity";
	}   
@RequestMapping(value = "/states/California/counties/Tuolumne-County", method = RequestMethod.GET)
	public String getCaliforniaCountyTuolumneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "6109");
		return "CaliforniaCountyTuolumneCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Baldwin-County", method = RequestMethod.GET)
	public String getGeorgiaCountyBaldwinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13009");
		return "GeorgiaCountyBaldwinCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Whitewater-Elkhorn", method = RequestMethod.GET)
	public String getWisconsinMicroWhitewaterElkhorn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48580");
		return "WisconsinMicroWhitewaterElkhorn";
	}   
@RequestMapping(value = "/states/California/cities/Dublin-city", method = RequestMethod.GET)
	public String getCaliforniaCityDublincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "620018");
		return "CaliforniaCityDublincity";
	}   
@RequestMapping(value = "/states/California/cities/Los-Angeles-city", method = RequestMethod.GET)
	public String getCaliforniaCityLosAngelescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "644000");
		return "CaliforniaCityLosAngelescity";
	}   
@RequestMapping(value = "/states/Iowa/micros/Boone", method = RequestMethod.GET)
	public String getIowaMicroBoone(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14340");
		return "IowaMicroBoone";
	}   
@RequestMapping(value = "/states/California/metros/San-JoseSunnyvaleSanta-Clara", method = RequestMethod.GET)
	public String getCaliforniaMetroSanJoseSunnyvaleSantaClara(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41940");
		return "CaliforniaMetroSanJoseSunnyvaleSantaClara";
	}   
@RequestMapping(value = "/states/Ohio/cities/Troy-city", method = RequestMethod.GET)
	public String getOhioCityTroycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3977588");
		return "OhioCityTroycity";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/New-Castle", method = RequestMethod.GET)
	public String getPennsylvaniaMicroNewCastle(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35260");
		return "PennsylvaniaMicroNewCastle";
	}   
@RequestMapping(value = "/states/Florida/cities/New-Smyrna-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityNewSmyrnaBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1248625");
		return "FloridaCityNewSmyrnaBeachcity";
	}   
@RequestMapping(value = "/states/California/cities/Redlands-city", method = RequestMethod.GET)
	public String getCaliforniaCityRedlandscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659962");
		return "CaliforniaCityRedlandscity";
	}   
@RequestMapping(value = "/states/Washington/cities/Mukilteo-city", method = RequestMethod.GET)
	public String getWashingtonCityMukilteocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5347735");
		return "WashingtonCityMukilteocity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Aurora-city", method = RequestMethod.GET)
	public String getColoradoCityAuroracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "804000");
		return "ColoradoCityAuroracity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Bartow-County", method = RequestMethod.GET)
	public String getGeorgiaCountyBartowCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13015");
		return "GeorgiaCountyBartowCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Eagan-city", method = RequestMethod.GET)
	public String getMinnesotaCityEagancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2717288");
		return "MinnesotaCityEagancity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/St-Cloud-city", method = RequestMethod.GET)
	public String getMinnesotaCityStCloudcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2756896");
		return "MinnesotaCityStCloudcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Barrow-County", method = RequestMethod.GET)
	public String getGeorgiaCountyBarrowCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13013");
		return "GeorgiaCountyBarrowCounty";
	}   
@RequestMapping(value = "/states/Oregon/metros/Corvallis", method = RequestMethod.GET)
	public String getOregonMetroCorvallis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18700");
		return "OregonMetroCorvallis";
	}   
@RequestMapping(value = "/states/New-York/micros/Oneonta", method = RequestMethod.GET)
	public String getNew_YorkMicroOneonta(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36580");
		return "New_YorkMicroOneonta";
	}   
@RequestMapping(value = "/states/Florida/cities/Plant-City-city", method = RequestMethod.GET)
	public String getFloridaCityPlantCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1257550");
		return "FloridaCityPlantCitycity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Aloha", method = RequestMethod.GET)
	public String getOregonCityAloha(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4101650");
		return "OregonCityAloha";
	}   
@RequestMapping(value = "/states/California/cities/Pasadena-city", method = RequestMethod.GET)
	public String getCaliforniaCityPasadenacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "656000");
		return "CaliforniaCityPasadenacity";
	}   
@RequestMapping(value = "/states/Missouri/metros/Jefferson-City", method = RequestMethod.GET)
	public String getMissouriMetroJeffersonCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27620");
		return "MissouriMetroJeffersonCity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Gahanna-city", method = RequestMethod.GET)
	public String getOhioCityGahannacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3929106");
		return "OhioCityGahannacity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Richfield-city", method = RequestMethod.GET)
	public String getMinnesotaCityRichfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2754214");
		return "MinnesotaCityRichfieldcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Cuyahoga-Falls-city", method = RequestMethod.GET)
	public String getOhioCityCuyahogaFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3919778");
		return "OhioCityCuyahogaFallscity";
	}   
@RequestMapping(value = "/states/Illinois/metros/Chicago-Naperville-Elgin", method = RequestMethod.GET)
	public String getIllinoisMetroChicagoNapervilleElgin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16980");
		return "IllinoisMetroChicagoNapervilleElgin";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Menomonee-Falls-village", method = RequestMethod.GET)
	public String getWisconsinCityMenomoneeFallsvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5551000");
		return "WisconsinCityMenomoneeFallsvillage";
	}   
@RequestMapping(value = "/states/Idaho/cities/Idaho-Falls-city", method = RequestMethod.GET)
	public String getIdahoCityIdahoFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1639700");
		return "IdahoCityIdahoFallscity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Methuen-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityMethuenTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2540710");
		return "MassachusettsCityMethuenTowncity";
	}   
@RequestMapping(value = "/states/Utah/cities/Midvale-city", method = RequestMethod.GET)
	public String getUtahCityMidvalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4949710");
		return "UtahCityMidvalecity";
	}   
@RequestMapping(value = "/states/Arkansas/metros/Hot-Springs", method = RequestMethod.GET)
	public String getArkansasMetroHotSprings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26300");
		return "ArkansasMetroHotSprings";
	}   
@RequestMapping(value = "/states/New-Jersey/metros/Vineland-Bridgeton", method = RequestMethod.GET)
	public String getNew_JerseyMetroVinelandBridgeton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47220");
		return "New_JerseyMetroVinelandBridgeton";
	}   
@RequestMapping(value = "/states/California/cities/San-Jose-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanJosecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668000");
		return "CaliforniaCitySanJosecity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Burton-city", method = RequestMethod.GET)
	public String getMichiganCityBurtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2612060");
		return "MichiganCityBurtoncity";
	}   
@RequestMapping(value = "/states/Alaska/metros/Anchorage", method = RequestMethod.GET)
	public String getAlaskaMetroAnchorage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11260");
		return "AlaskaMetroAnchorage";
	}   
@RequestMapping(value = "/states/Maryland/cities/Columbia", method = RequestMethod.GET)
	public String getMarylandCityColumbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2419125");
		return "MarylandCityColumbia";
	}   
@RequestMapping(value = "/states/Texas/cities/Sherman-city", method = RequestMethod.GET)
	public String getTexasCityShermancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4867496");
		return "TexasCityShermancity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Hays-city", method = RequestMethod.GET)
	public String getKansasCityHayscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2031100");
		return "KansasCityHayscity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Wichita-city", method = RequestMethod.GET)
	public String getKansasCityWichitacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2079000");
		return "KansasCityWichitacity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Queen-Creek-town", method = RequestMethod.GET)
	public String getArizonaCityQueenCreektown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "458150");
		return "ArizonaCityQueenCreektown";
	}   
@RequestMapping(value = "/states/Ohio/cities/Wadsworth-city", method = RequestMethod.GET)
	public String getOhioCityWadsworthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3980304");
		return "OhioCityWadsworthcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Pharr-city", method = RequestMethod.GET)
	public String getTexasCityPharrcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4857200");
		return "TexasCityPharrcity";
	}   
@RequestMapping(value = "/states/Texas/micros/Fredericksburg", method = RequestMethod.GET)
	public String getTexasMicroFredericksburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23240");
		return "TexasMicroFredericksburg";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Covington-city", method = RequestMethod.GET)
	public String getKentuckyCityCovingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2117848");
		return "KentuckyCityCovingtoncity";
	}   
@RequestMapping(value = "/states/California/cities/Los-Banos-city", method = RequestMethod.GET)
	public String getCaliforniaCityLosBanoscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "644028");
		return "CaliforniaCityLosBanoscity";
	}   
@RequestMapping(value = "/states/West-Virginia/metros/Wheeling", method = RequestMethod.GET)
	public String getWest_VirginiaMetroWheeling(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48540");
		return "West_VirginiaMetroWheeling";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Franklin-city", method = RequestMethod.GET)
	public String getWisconsinCityFranklincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5527300");
		return "WisconsinCityFranklincity";
	}   
@RequestMapping(value = "/states/Michigan/micros/Cadillac", method = RequestMethod.GET)
	public String getMichiganMicroCadillac(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15620");
		return "MichiganMicroCadillac";
	}   
@RequestMapping(value = "/states/Missouri/metros/Springfield", method = RequestMethod.GET)
	public String getMissouriMetroSpringfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44180");
		return "MissouriMetroSpringfield";
	}   
@RequestMapping(value = "/states/Florida/cities/Coral-Springs-city", method = RequestMethod.GET)
	public String getFloridaCityCoralSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1214400");
		return "FloridaCityCoralSpringscity";
	}   
@RequestMapping(value = "/states/Texas/cities/Mesquite-city", method = RequestMethod.GET)
	public String getTexasCityMesquitecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4847892");
		return "TexasCityMesquitecity";
	}   
@RequestMapping(value = "/states/California/cities/South-El-Monte-city", method = RequestMethod.GET)
	public String getCaliforniaCitySouthElMontecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "672996");
		return "CaliforniaCitySouthElMontecity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Leawood-city", method = RequestMethod.GET)
	public String getKansasCityLeawoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2039075");
		return "KansasCityLeawoodcity";
	}   
@RequestMapping(value = "/states/Indiana/micros/New-Castle", method = RequestMethod.GET)
	public String getIndianaMicroNewCastle(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35220");
		return "IndianaMicroNewCastle";
	}   
@RequestMapping(value = "/states/Missouri/cities/Mehlville", method = RequestMethod.GET)
	public String getMissouriCityMehlville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2947180");
		return "MissouriCityMehlville";
	}   
@RequestMapping(value = "/states/Puerto-Rico/metros/San-German", method = RequestMethod.GET)
	public String getPuerto_RicoMetroSanGerman(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41900");
		return "Puerto_RicoMetroSanGerman";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Green-Bay", method = RequestMethod.GET)
	public String getWisconsinMetroGreenBay(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24580");
		return "WisconsinMetroGreenBay";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Kannapolis-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityKannapoliscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3735200");
		return "North_CarolinaCityKannapoliscity";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Knoxville", method = RequestMethod.GET)
	public String getTennesseeMetroKnoxville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28940");
		return "TennesseeMetroKnoxville";
	}   
@RequestMapping(value = "/states/Vermont/counties/Addison-County", method = RequestMethod.GET)
	public String getVermontCountyAddisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50001");
		return "VermontCountyAddisonCounty";
	}   
@RequestMapping(value = "/states/Vermont/counties/Bennington-County", method = RequestMethod.GET)
	public String getVermontCountyBenningtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50003");
		return "VermontCountyBenningtonCounty";
	}   
@RequestMapping(value = "/states/Vermont/counties/Caledonia-County", method = RequestMethod.GET)
	public String getVermontCountyCaledoniaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50005");
		return "VermontCountyCaledoniaCounty";
	}   
@RequestMapping(value = "/states/Vermont/counties/Chittenden-County", method = RequestMethod.GET)
	public String getVermontCountyChittendenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50007");
		return "VermontCountyChittendenCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Villa-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityVillaParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1777993");
		return "IllinoisCityVillaParkvillage";
	}   
@RequestMapping(value = "/states/Illinois/cities/Evanston-city", method = RequestMethod.GET)
	public String getIllinoisCityEvanstoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1724582");
		return "IllinoisCityEvanstoncity";
	}   
@RequestMapping(value = "/states/Alaska/cities/Juneau-city-and-borough", method = RequestMethod.GET)
	public String getAlaskaCityJuneaucityandborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "236400");
		return "AlaskaCityJuneaucityandborough";
	}   
@RequestMapping(value = "/states/California/cities/San-Juan-Capistrano-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanJuanCapistranocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668028");
		return "CaliforniaCitySanJuanCapistranocity";
	}   
@RequestMapping(value = "/states/Nebraska/metros/OmahaCouncil-Bluffs", method = RequestMethod.GET)
	public String getNebraskaMetroOmahaCouncilBluffs(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36540");
		return "NebraskaMetroOmahaCouncilBluffs";
	}   
@RequestMapping(value = "/states/Illinois/cities/Elk-Grove-Village-village", method = RequestMethod.GET)
	public String getIllinoisCityElkGroveVillagevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1723256");
		return "IllinoisCityElkGroveVillagevillage";
	}   
@RequestMapping(value = "/states/Maryland/cities/Greenbelt-city", method = RequestMethod.GET)
	public String getMarylandCityGreenbeltcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2434775");
		return "MarylandCityGreenbeltcity";
	}   
@RequestMapping(value = "/states/California/cities/Benicia-city", method = RequestMethod.GET)
	public String getCaliforniaCityBeniciacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "605290");
		return "CaliforniaCityBeniciacity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Marshall", method = RequestMethod.GET)
	public String getMissouriMicroMarshall(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32180");
		return "MissouriMicroMarshall";
	}   
@RequestMapping(value = "/states/California/cities/Castro-Valley", method = RequestMethod.GET)
	public String getCaliforniaCityCastroValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "611964");
		return "CaliforniaCityCastroValley";
	}   
@RequestMapping(value = "/states/Vermont/counties/Franklin-County", method = RequestMethod.GET)
	public String getVermontCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50011");
		return "VermontCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Terre-Haute-city", method = RequestMethod.GET)
	public String getIndianaCityTerreHautecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1875428");
		return "IndianaCityTerreHautecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Merritt-Island", method = RequestMethod.GET)
	public String getFloridaCityMerrittIsland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1244275");
		return "FloridaCityMerrittIsland";
	}   
@RequestMapping(value = "/states/Vermont/counties/Lamoille-County", method = RequestMethod.GET)
	public String getVermontCountyLamoilleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50015");
		return "VermontCountyLamoilleCounty";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Lincoln-city", method = RequestMethod.GET)
	public String getNebraskaCityLincolncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3128000");
		return "NebraskaCityLincolncity";
	}   
@RequestMapping(value = "/states/Vermont/counties/Orange-County", method = RequestMethod.GET)
	public String getVermontCountyOrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50017");
		return "VermontCountyOrangeCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Farmington-city", method = RequestMethod.GET)
	public String getNew_MexicoCityFarmingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3525800");
		return "New_MexicoCityFarmingtoncity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Chesapeake-city", method = RequestMethod.GET)
	public String getVirginiaCityChesapeakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5116000");
		return "VirginiaCityChesapeakecity";
	}   
@RequestMapping(value = "/states/Kansas/counties/Sumner-County", method = RequestMethod.GET)
	public String getKansasCountySumnerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20191");
		return "KansasCountySumnerCounty";
	}   
@RequestMapping(value = "/states/Vermont/counties/Orleans-County", method = RequestMethod.GET)
	public String getVermontCountyOrleansCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50019");
		return "VermontCountyOrleansCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Allen-Park-city", method = RequestMethod.GET)
	public String getMichiganCityAllenParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2601380");
		return "MichiganCityAllenParkcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Portage-city", method = RequestMethod.GET)
	public String getMichiganCityPortagecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2665560");
		return "MichiganCityPortagecity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Blue-Island-city", method = RequestMethod.GET)
	public String getIllinoisCityBlueIslandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1706704");
		return "IllinoisCityBlueIslandcity";
	}   
@RequestMapping(value = "/states/Maryland/metros/Baltimore-Columbia-Towson", method = RequestMethod.GET)
	public String getMarylandMetroBaltimoreColumbiaTowson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12580");
		return "MarylandMetroBaltimoreColumbiaTowson";
	}   
@RequestMapping(value = "/states/Florida/metros/PensacolaFerry-PassBrent", method = RequestMethod.GET)
	public String getFloridaMetroPensacolaFerryPassBrent(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37860");
		return "FloridaMetroPensacolaFerryPassBrent";
	}   
@RequestMapping(value = "/states/Colorado/cities/Colorado-Springs-city", method = RequestMethod.GET)
	public String getColoradoCityColoradoSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "816000");
		return "ColoradoCityColoradoSpringscity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Oakville", method = RequestMethod.GET)
	public String getMissouriCityOakville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2953876");
		return "MissouriCityOakville";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Union-City-city", method = RequestMethod.GET)
	public String getNew_JerseyCityUnionCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3474630");
		return "New_JerseyCityUnionCitycity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Marion-city", method = RequestMethod.GET)
	public String getIndianaCityMarioncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1846908");
		return "IndianaCityMarioncity";
	}   
@RequestMapping(value = "/states/California/cities/Indio-city", method = RequestMethod.GET)
	public String getCaliforniaCityIndiocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "636448");
		return "CaliforniaCityIndiocity";
	}   
@RequestMapping(value = "/states/Vermont/counties/Rutland-County", method = RequestMethod.GET)
	public String getVermontCountyRutlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50021");
		return "VermontCountyRutlandCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Rockville-city", method = RequestMethod.GET)
	public String getMarylandCityRockvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2467675");
		return "MarylandCityRockvillecity";
	}   
@RequestMapping(value = "/states/Vermont/counties/Washington-County", method = RequestMethod.GET)
	public String getVermontCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50023");
		return "VermontCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Vermont/counties/Windham-County", method = RequestMethod.GET)
	public String getVermontCountyWindhamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50025");
		return "VermontCountyWindhamCounty";
	}   
@RequestMapping(value = "/states/Vermont/counties/Windsor-County", method = RequestMethod.GET)
	public String getVermontCountyWindsorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "50027");
		return "VermontCountyWindsorCounty";
	}   
@RequestMapping(value = "/states/Wyoming/metros/Cheyenne", method = RequestMethod.GET)
	public String getWyomingMetroCheyenne(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16940");
		return "WyomingMetroCheyenne";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Searcy-city", method = RequestMethod.GET)
	public String getArkansasCitySearcycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "563020");
		return "ArkansasCitySearcycity";
	}   
@RequestMapping(value = "/states/Florida/cities/Coral-Terrace", method = RequestMethod.GET)
	public String getFloridaCityCoralTerrace(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1214412");
		return "FloridaCityCoralTerrace";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Marblehead", method = RequestMethod.GET)
	public String getMassachusettsCityMarblehead(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2538435");
		return "MassachusettsCityMarblehead";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Cumberland-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCumberlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37051");
		return "North_CarolinaCountyCumberlandCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Dawson-County", method = RequestMethod.GET)
	public String getGeorgiaCountyDawsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13085");
		return "GeorgiaCountyDawsonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Bakersfield-city", method = RequestMethod.GET)
	public String getCaliforniaCityBakersfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "603526");
		return "CaliforniaCityBakersfieldcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Currituck-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCurrituckCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37053");
		return "North_CarolinaCountyCurrituckCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Dare-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyDareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37055");
		return "North_CarolinaCountyDareCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/DeKalb-County", method = RequestMethod.GET)
	public String getGeorgiaCountyDeKalbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13089");
		return "GeorgiaCountyDeKalbCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/North-Richland-Hills-city", method = RequestMethod.GET)
	public String getTexasCityNorthRichlandHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4852356");
		return "TexasCityNorthRichlandHillscity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Davidson-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyDavidsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37057");
		return "North_CarolinaCountyDavidsonCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Sanpete-County", method = RequestMethod.GET)
	public String getUtahCountySanpeteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49039");
		return "UtahCountySanpeteCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Franklin-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityFranklinTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2525172");
		return "MassachusettsCityFranklinTowncity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Decatur-County", method = RequestMethod.GET)
	public String getGeorgiaCountyDecaturCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13087");
		return "GeorgiaCountyDecaturCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Northglenn-city", method = RequestMethod.GET)
	public String getColoradoCityNorthglenncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "854330");
		return "ColoradoCityNorthglenncity";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities/Cranston-city", method = RequestMethod.GET)
	public String getRhode_IslandCityCranstoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4419180");
		return "Rhode_IslandCityCranstoncity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Crisp-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCrispCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13081");
		return "GeorgiaCountyCrispCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Plainview", method = RequestMethod.GET)
	public String getTexasMicroPlainview(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38380");
		return "TexasMicroPlainview";
	}   
@RequestMapping(value = "/states/Arizona/metros/Lake-Havasu-CityKingman", method = RequestMethod.GET)
	public String getArizonaMetroLakeHavasuCityKingman(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29420");
		return "ArizonaMetroLakeHavasuCityKingman";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Lexington", method = RequestMethod.GET)
	public String getNebraskaMicroLexington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30420");
		return "NebraskaMicroLexington";
	}   
@RequestMapping(value = "/states/Alabama/cities/Decatur-city", method = RequestMethod.GET)
	public String getAlabamaCityDecaturcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "120104");
		return "AlabamaCityDecaturcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Tampa-city", method = RequestMethod.GET)
	public String getFloridaCityTampacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271000");
		return "FloridaCityTampacity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Marion-city", method = RequestMethod.GET)
	public String getOhioCityMarioncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3947754");
		return "OhioCityMarioncity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Davie-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyDavieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37059");
		return "North_CarolinaCountyDavieCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lodi-city", method = RequestMethod.GET)
	public String getCaliforniaCityLodicity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "642202");
		return "CaliforniaCityLodicity";
	}   
@RequestMapping(value = "/states/Utah/counties/Salt-Lake-County", method = RequestMethod.GET)
	public String getUtahCountySaltLakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49035");
		return "UtahCountySaltLakeCounty";
	}   
@RequestMapping(value = "/states/Mississippi/metros/Gulfport-Biloxi-Pascagoula", method = RequestMethod.GET)
	public String getMississippiMetroGulfportBiloxiPascagoula(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25060");
		return "MississippiMetroGulfportBiloxiPascagoula";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Sanford-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCitySanfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3759280");
		return "North_CarolinaCitySanfordcity";
	}   
@RequestMapping(value = "/states/Utah/cities/Orem-city", method = RequestMethod.GET)
	public String getUtahCityOremcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4957300");
		return "UtahCityOremcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Dougherty-County", method = RequestMethod.GET)
	public String getGeorgiaCountyDoughertyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13095");
		return "GeorgiaCountyDoughertyCounty";
	}   
@RequestMapping(value = "/states/Iowa/micros/Fort-MadisonKeokuk", method = RequestMethod.GET)
	public String getIowaMicroFortMadisonKeokuk(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22800");
		return "IowaMicroFortMadisonKeokuk";
	}   
@RequestMapping(value = "/states/Ohio/cities/Newark-city", method = RequestMethod.GET)
	public String getOhioCityNewarkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3954040");
		return "OhioCityNewarkcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Cleveland-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyClevelandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37045");
		return "North_CarolinaCountyClevelandCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Douglas-County", method = RequestMethod.GET)
	public String getGeorgiaCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13097");
		return "GeorgiaCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Milford-city-balance", method = RequestMethod.GET)
	public String getConnecticutCityMilfordcitybalance(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "947515");
		return "ConnecticutCityMilfordcitybalance";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Columbus-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyColumbusCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37047");
		return "North_CarolinaCountyColumbusCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Ossining-village", method = RequestMethod.GET)
	public String getNew_YorkCityOssiningvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3655530");
		return "New_YorkCityOssiningvillage";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Panola-County", method = RequestMethod.GET)
	public String getMississippiCountyPanolaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28107");
		return "MississippiCountyPanolaCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Oktibbeha-County", method = RequestMethod.GET)
	public String getMississippiCountyOktibbehaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28105");
		return "MississippiCountyOktibbehaCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Lake-Forest-city", method = RequestMethod.GET)
	public String getIllinoisCityLakeForestcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1741105");
		return "IllinoisCityLakeForestcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Dodge-County", method = RequestMethod.GET)
	public String getGeorgiaCountyDodgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13091");
		return "GeorgiaCountyDodgeCounty";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Pearl-River-County", method = RequestMethod.GET)
	public String getMississippiCountyPearlRiverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28109");
		return "MississippiCountyPearlRiverCounty";
	}   
@RequestMapping(value = "/states/Kansas/metros/Manhattan", method = RequestMethod.GET)
	public String getKansasMetroManhattan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31740");
		return "KansasMetroManhattan";
	}   
@RequestMapping(value = "/states/Illinois/metros/Kankakee", method = RequestMethod.GET)
	public String getIllinoisMetroKankakee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28100");
		return "IllinoisMetroKankakee";
	}   
@RequestMapping(value = "/states/Illinois/cities/Crest-Hill-city", method = RequestMethod.GET)
	public String getIllinoisCityCrestHillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1717458");
		return "IllinoisCityCrestHillcity";
	}   
@RequestMapping(value = "/states/California/cities/Paradise-town", method = RequestMethod.GET)
	public String getCaliforniaCityParadisetown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "655520");
		return "CaliforniaCityParadisetown";
	}   
@RequestMapping(value = "/states/Mississippi/counties/Newton-County", method = RequestMethod.GET)
	public String getMississippiCountyNewtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28101");
		return "MississippiCountyNewtonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Craven-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCravenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37049");
		return "North_CarolinaCountyCravenCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Iron-County", method = RequestMethod.GET)
	public String getUtahCountyIronCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49021");
		return "UtahCountyIronCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Alexandria", method = RequestMethod.GET)
	public String getMinnesotaMicroAlexandria(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10820");
		return "MinnesotaMicroAlexandria";
	}   
@RequestMapping(value = "/states/Virginia/metros/Winchester", method = RequestMethod.GET)
	public String getVirginiaMetroWinchester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49020");
		return "VirginiaMetroWinchester";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Cleveland", method = RequestMethod.GET)
	public String getTennesseeMetroCleveland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17420");
		return "TennesseeMetroCleveland";
	}   
@RequestMapping(value = "/states/Georgia/counties/Clayton-County", method = RequestMethod.GET)
	public String getGeorgiaCountyClaytonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13063");
		return "GeorgiaCountyClaytonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Carteret-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCarteretCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37031");
		return "North_CarolinaCountyCarteretCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Bay-City", method = RequestMethod.GET)
	public String getTexasMicroBayCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13060");
		return "TexasMicroBayCity";
	}   
@RequestMapping(value = "/states/Texas/cities/Del-Rio-city", method = RequestMethod.GET)
	public String getTexasCityDelRiocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4819792");
		return "TexasCityDelRiocity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Caswell-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCaswellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37033");
		return "North_CarolinaCountyCaswellCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Leavenworth-city", method = RequestMethod.GET)
	public String getKansasCityLeavenworthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2039000");
		return "KansasCityLeavenworthcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Cobb-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCobbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13067");
		return "GeorgiaCountyCobbCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Catawba-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCatawbaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37035");
		return "North_CarolinaCountyCatawbaCounty";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Hastings-city", method = RequestMethod.GET)
	public String getNebraskaCityHastingscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3121415");
		return "NebraskaCityHastingscity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Chatham-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyChathamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37037");
		return "North_CarolinaCountyChathamCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Avon-city", method = RequestMethod.GET)
	public String getOhioCityAvoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3903352");
		return "OhioCityAvoncity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Cherokee-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCherokeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37039");
		return "North_CarolinaCountyCherokeeCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Coffee-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCoffeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13069");
		return "GeorgiaCountyCoffeeCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Davis-County", method = RequestMethod.GET)
	public String getUtahCountyDavisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49011");
		return "UtahCountyDavisCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Blue-Springs-city", method = RequestMethod.GET)
	public String getMissouriCityBlueSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2906652");
		return "MissouriCityBlueSpringscity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Columbia-County", method = RequestMethod.GET)
	public String getGeorgiaCountyColumbiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13073");
		return "GeorgiaCountyColumbiaCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Colquitt-County", method = RequestMethod.GET)
	public String getGeorgiaCountyColquittCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13071");
		return "GeorgiaCountyColquittCounty";
	}   
@RequestMapping(value = "/states/Michigan/micros/Owosso", method = RequestMethod.GET)
	public String getMichiganMicroOwosso(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37020");
		return "MichiganMicroOwosso";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Buncombe-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyBuncombeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37021");
		return "North_CarolinaCountyBuncombeCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Leesburg-town", method = RequestMethod.GET)
	public String getVirginiaCityLeesburgtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5144984");
		return "VirginiaCityLeesburgtown";
	}   
@RequestMapping(value = "/states/Georgia/counties/Coweta-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCowetaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13077");
		return "GeorgiaCountyCowetaCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/De-Pere-city", method = RequestMethod.GET)
	public String getWisconsinCityDePerecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5519775");
		return "WisconsinCityDePerecity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Burke-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyBurkeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37023");
		return "North_CarolinaCountyBurkeCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Carbon-County", method = RequestMethod.GET)
	public String getUtahCountyCarbonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49007");
		return "UtahCountyCarbonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Cabarrus-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCabarrusCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37025");
		return "North_CarolinaCountyCabarrusCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Cache-County", method = RequestMethod.GET)
	public String getUtahCountyCacheCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49005");
		return "UtahCountyCacheCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Carlsbad-Artesia", method = RequestMethod.GET)
	public String getNew_MexicoMicroCarlsbadArtesia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16100");
		return "New_MexicoMicroCarlsbadArtesia";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Somerset", method = RequestMethod.GET)
	public String getKentuckyMicroSomerset(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43700");
		return "KentuckyMicroSomerset";
	}   
@RequestMapping(value = "/states/Colorado/cities/Grand-Junction-city", method = RequestMethod.GET)
	public String getColoradoCityGrandJunctioncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "831660");
		return "ColoradoCityGrandJunctioncity";
	}   
@RequestMapping(value = "/states/Washington/cities/Pullman-city", method = RequestMethod.GET)
	public String getWashingtonCityPullmancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5356625");
		return "WashingtonCityPullmancity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Bartlett-city", method = RequestMethod.GET)
	public String getTennesseeCityBartlettcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4703440");
		return "TennesseeCityBartlettcity";
	}   
@RequestMapping(value = "/states/Washington/cities/Eastmont", method = RequestMethod.GET)
	public String getWashingtonCityEastmont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5319630");
		return "WashingtonCityEastmont";
	}   
@RequestMapping(value = "/states/California/cities/Hacienda-Heights", method = RequestMethod.GET)
	public String getCaliforniaCityHaciendaHeights(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "631596");
		return "CaliforniaCityHaciendaHeights";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Caldwell-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyCaldwellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37027");
		return "North_CarolinaCountyCaldwellCounty";
	}   
@RequestMapping(value = "/states/Utah/counties/Box-Elder-County", method = RequestMethod.GET)
	public String getUtahCountyBoxElderCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49003");
		return "UtahCountyBoxElderCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Staunton-city", method = RequestMethod.GET)
	public String getVirginiaCityStauntoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5175216");
		return "VirginiaCityStauntoncity";
	}   
@RequestMapping(value = "/states/California/cities/Newport-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCityNewportBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "651182");
		return "CaliforniaCityNewportBeachcity";
	}   
@RequestMapping(value = "/states/Louisiana/metros/Houma-Thibodaux", method = RequestMethod.GET)
	public String getLouisianaMetroHoumaThibodaux(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26380");
		return "LouisianaMetroHoumaThibodaux";
	}   
@RequestMapping(value = "/states/Florida/cities/Meadow-Woods", method = RequestMethod.GET)
	public String getFloridaCityMeadowWoods(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1243800");
		return "FloridaCityMeadowWoods";
	}   
@RequestMapping(value = "/states/Massachusetts/metros/Pittsfield", method = RequestMethod.GET)
	public String getMassachusettsMetroPittsfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38340");
		return "MassachusettsMetroPittsfield";
	}   
@RequestMapping(value = "/states/New-York/cities/Selden", method = RequestMethod.GET)
	public String getNew_YorkCitySelden(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3666212");
		return "New_YorkCitySelden";
	}   
@RequestMapping(value = "/states/Georgia/counties/Carroll-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13045");
		return "GeorgiaCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Beaufort-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyBeaufortCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37013");
		return "North_CarolinaCountyBeaufortCounty";
	}   
@RequestMapping(value = "/states/Georgia/metros/Rome", method = RequestMethod.GET)
	public String getGeorgiaMetroRome(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40660");
		return "GeorgiaMetroRome";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Suffolk-County", method = RequestMethod.GET)
	public String getMassachusettsCountySuffolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25025");
		return "MassachusettsCountySuffolkCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Worcester-County", method = RequestMethod.GET)
	public String getMassachusettsCountyWorcesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25027");
		return "MassachusettsCountyWorcesterCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Pasco-city", method = RequestMethod.GET)
	public String getWashingtonCityPascocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5353545");
		return "WashingtonCityPascocity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/metros/Guayama", method = RequestMethod.GET)
	public String getPuerto_RicoMetroGuayama(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25020");
		return "Puerto_RicoMetroGuayama";
	}   
@RequestMapping(value = "/states/Virginia/cities/Baileys-Crossroads", method = RequestMethod.GET)
	public String getVirginiaCityBaileysCrossroads(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5104088");
		return "VirginiaCityBaileysCrossroads";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Norfolk-County", method = RequestMethod.GET)
	public String getMassachusettsCountyNorfolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25021");
		return "MassachusettsCountyNorfolkCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Plymouth-County", method = RequestMethod.GET)
	public String getMassachusettsCountyPlymouthCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25023");
		return "MassachusettsCountyPlymouthCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Wheaton", method = RequestMethod.GET)
	public String getMarylandCityWheaton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2483775");
		return "MarylandCityWheaton";
	}   
@RequestMapping(value = "/states/New-York/cities/Irondequoit", method = RequestMethod.GET)
	public String getNew_YorkCityIrondequoit(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3637737");
		return "New_YorkCityIrondequoit";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Bertie-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyBertieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37015");
		return "North_CarolinaCountyBertieCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Bladen-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyBladenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37017");
		return "North_CarolinaCountyBladenCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Mundelein-village", method = RequestMethod.GET)
	public String getIllinoisCityMundeleinvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1751349");
		return "IllinoisCityMundeleinvillage";
	}   
@RequestMapping(value = "/states/Georgia/counties/Catoosa-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCatoosaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13047");
		return "GeorgiaCountyCatoosaCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Brunswick-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyBrunswickCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37019");
		return "North_CarolinaCountyBrunswickCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Matthews-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityMatthewstown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3741960");
		return "North_CarolinaCityMatthewstown";
	}   
@RequestMapping(value = "/states/Georgia/counties/Chatham-County", method = RequestMethod.GET)
	public String getGeorgiaCountyChathamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13051");
		return "GeorgiaCountyChathamCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Coshocton", method = RequestMethod.GET)
	public String getOhioMicroCoshocton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18740");
		return "OhioMicroCoshocton";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Boone", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroBoone(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14380");
		return "North_CarolinaMicroBoone";
	}   
@RequestMapping(value = "/states/South-Dakota/metros/Rapid-City", method = RequestMethod.GET)
	public String getSouth_DakotaMetroRapidCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39660");
		return "South_DakotaMetroRapidCity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Chattooga-County", method = RequestMethod.GET)
	public String getGeorgiaCountyChattoogaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13055");
		return "GeorgiaCountyChattoogaCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Alamance-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyAlamanceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37001");
		return "North_CarolinaCountyAlamanceCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Alexander-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyAlexanderCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37003");
		return "North_CarolinaCountyAlexanderCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/metros/San-JuanCarolinaCaguas", method = RequestMethod.GET)
	public String getPuerto_RicoMetroSanJuanCarolinaCaguas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41980");
		return "Puerto_RicoMetroSanJuanCarolinaCaguas";
	}   
@RequestMapping(value = "/states/California/cities/Hercules-city", method = RequestMethod.GET)
	public String getCaliforniaCityHerculescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "633308");
		return "CaliforniaCityHerculescity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Plainfield-village", method = RequestMethod.GET)
	public String getIllinoisCityPlainfieldvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1760287");
		return "IllinoisCityPlainfieldvillage";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Beverly-city", method = RequestMethod.GET)
	public String getMassachusettsCityBeverlycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2505595");
		return "MassachusettsCityBeverlycity";
	}   
@RequestMapping(value = "/states/Florida/cities/Pompano-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityPompanoBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1258050");
		return "FloridaCityPompanoBeachcity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Eugene-city", method = RequestMethod.GET)
	public String getOregonCityEugenecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4123850");
		return "OregonCityEugenecity";
	}   
@RequestMapping(value = "/states/California/cities/Claremont-city", method = RequestMethod.GET)
	public String getCaliforniaCityClaremontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "613756");
		return "CaliforniaCityClaremontcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Drexel-Hill", method = RequestMethod.GET)
	public String getPennsylvaniaCityDrexelHill(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4219920");
		return "PennsylvaniaCityDrexelHill";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Moore-city", method = RequestMethod.GET)
	public String getOklahomaCityMoorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4049200");
		return "OklahomaCityMoorecity";
	}   
@RequestMapping(value = "/states/California/cities/Redding-city", method = RequestMethod.GET)
	public String getCaliforniaCityReddingcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659920");
		return "CaliforniaCityReddingcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Clarke-County", method = RequestMethod.GET)
	public String getGeorgiaCountyClarkeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13059");
		return "GeorgiaCountyClarkeCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Cherokee-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCherokeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13057");
		return "GeorgiaCountyCherokeeCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Anson-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyAnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37007");
		return "North_CarolinaCountyAnsonCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/metros/Manchester-Nashua", method = RequestMethod.GET)
	public String getNew_HampshireMetroManchesterNashua(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31700");
		return "New_HampshireMetroManchesterNashua";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Ashe-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyAsheCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37009");
		return "North_CarolinaCountyAsheCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Bay-City", method = RequestMethod.GET)
	public String getMichiganMetroBayCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13020");
		return "MichiganMetroBayCity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Bibb-County", method = RequestMethod.GET)
	public String getGeorgiaCountyBibbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13021");
		return "GeorgiaCountyBibbCounty";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Kahului", method = RequestMethod.GET)
	public String getHawaiiCityKahului(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1522700");
		return "HawaiiCityKahului";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Berkshire-County", method = RequestMethod.GET)
	public String getMassachusettsCountyBerkshireCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25003");
		return "MassachusettsCountyBerkshireCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Merrick", method = RequestMethod.GET)
	public String getNew_YorkCityMerrick(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3646668");
		return "New_YorkCityMerrick";
	}   
@RequestMapping(value = "/states/Arizona/cities/Glendale-city", method = RequestMethod.GET)
	public String getArizonaCityGlendalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "427820");
		return "ArizonaCityGlendalecity";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Bristol-County", method = RequestMethod.GET)
	public String getMassachusettsCountyBristolCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25005");
		return "MassachusettsCountyBristolCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Hammond-city", method = RequestMethod.GET)
	public String getIndianaCityHammondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1831000");
		return "IndianaCityHammondcity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Clifton-city", method = RequestMethod.GET)
	public String getNew_JerseyCityCliftoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3413690");
		return "New_JerseyCityCliftoncity";
	}   
@RequestMapping(value = "/states/Arkansas/cities/West-Memphis-city", method = RequestMethod.GET)
	public String getArkansasCityWestMemphiscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "574540");
		return "ArkansasCityWestMemphiscity";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Essex-County", method = RequestMethod.GET)
	public String getMassachusettsCountyEssexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25009");
		return "MassachusettsCountyEssexCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Barnstable-County", method = RequestMethod.GET)
	public String getMassachusettsCountyBarnstableCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25001");
		return "MassachusettsCountyBarnstableCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Bryan-County", method = RequestMethod.GET)
	public String getGeorgiaCountyBryanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13029");
		return "GeorgiaCountyBryanCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Bremerton-city", method = RequestMethod.GET)
	public String getWashingtonCityBremertoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5307695");
		return "WashingtonCityBremertoncity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Burke-County", method = RequestMethod.GET)
	public String getGeorgiaCountyBurkeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13033");
		return "GeorgiaCountyBurkeCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Bulloch-County", method = RequestMethod.GET)
	public String getGeorgiaCountyBullochCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13031");
		return "GeorgiaCountyBullochCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Hampshire-County", method = RequestMethod.GET)
	public String getMassachusettsCountyHampshireCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25015");
		return "MassachusettsCountyHampshireCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Middlesex-County", method = RequestMethod.GET)
	public String getMassachusettsCountyMiddlesexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25017");
		return "MassachusettsCountyMiddlesexCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Bloomingdale", method = RequestMethod.GET)
	public String getFloridaCityBloomingdale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1206875");
		return "FloridaCityBloomingdale";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Milford", method = RequestMethod.GET)
	public String getMassachusettsCityMilford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2541200");
		return "MassachusettsCityMilford";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Crystal-city", method = RequestMethod.GET)
	public String getMinnesotaCityCrystalcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2714158");
		return "MinnesotaCityCrystalcity";
	}   
@RequestMapping(value = "/states/California/cities/Bloomington", method = RequestMethod.GET)
	public String getCaliforniaCityBloomington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "607064");
		return "CaliforniaCityBloomington";
	}   
@RequestMapping(value = "/states/Michigan/micros/Houghton", method = RequestMethod.GET)
	public String getMichiganMicroHoughton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26340");
		return "MichiganMicroHoughton";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Fajardo-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityFajardozonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7227964");
		return "Puerto_RicoCityFajardozonaurbana";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Franklin-County", method = RequestMethod.GET)
	public String getMassachusettsCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25011");
		return "MassachusettsCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/counties/Hampden-County", method = RequestMethod.GET)
	public String getMassachusettsCountyHampdenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25013");
		return "MassachusettsCountyHampdenCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Butts-County", method = RequestMethod.GET)
	public String getGeorgiaCountyButtsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13035");
		return "GeorgiaCountyButtsCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Anniston-city", method = RequestMethod.GET)
	public String getAlabamaCityAnnistoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "101852");
		return "AlabamaCityAnnistoncity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Rome-city", method = RequestMethod.GET)
	public String getGeorgiaCityRomecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1366668");
		return "GeorgiaCityRomecity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Walker-city", method = RequestMethod.GET)
	public String getMichiganCityWalkercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2682960");
		return "MichiganCityWalkercity";
	}   
@RequestMapping(value = "/states/Washington/cities/Longview-city", method = RequestMethod.GET)
	public String getWashingtonCityLongviewcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5340245");
		return "WashingtonCityLongviewcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Camden-County", method = RequestMethod.GET)
	public String getGeorgiaCountyCamdenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13039");
		return "GeorgiaCountyCamdenCounty";
	}   
@RequestMapping(value = "/states/Virginia/metros/Virginia-BeachNorfolkNewport-News", method = RequestMethod.GET)
	public String getVirginiaMetroVirginiaBeachNorfolkNewportNews(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47260");
		return "VirginiaMetroVirginiaBeachNorfolkNewportNews";
	}   
@RequestMapping(value = "/states/Indiana/counties/Carroll-County", method = RequestMethod.GET)
	public String getIndianaCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18015");
		return "IndianaCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Taylorsville-city", method = RequestMethod.GET)
	public String getUtahCityTaylorsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4975360");
		return "UtahCityTaylorsvillecity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Cass-County", method = RequestMethod.GET)
	public String getIndianaCountyCassCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18017");
		return "IndianaCountyCassCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Boone-County", method = RequestMethod.GET)
	public String getIndianaCountyBooneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18011");
		return "IndianaCountyBooneCounty";
	}   
@RequestMapping(value = "/states/Oregon/metros/Eugene", method = RequestMethod.GET)
	public String getOregonMetroEugene(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21660");
		return "OregonMetroEugene";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/State-College", method = RequestMethod.GET)
	public String getPennsylvaniaMetroStateCollege(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44300");
		return "PennsylvaniaMetroStateCollege";
	}   
@RequestMapping(value = "/states/Maryland/cities/College-Park-city", method = RequestMethod.GET)
	public String getMarylandCityCollegeParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2418750");
		return "MarylandCityCollegeParkcity";
	}   
@RequestMapping(value = "/states/Iowa/metros/DavenportMolineRock-Island", method = RequestMethod.GET)
	public String getIowaMetroDavenportMolineRockIsland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19340");
		return "IowaMetroDavenportMolineRockIsland";
	}   
@RequestMapping(value = "/states/Missouri/cities/Old-Jamestown", method = RequestMethod.GET)
	public String getMissouriCityOldJamestown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2954352");
		return "MissouriCityOldJamestown";
	}   
@RequestMapping(value = "/states/Florida/cities/Gainesville-city", method = RequestMethod.GET)
	public String getFloridaCityGainesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1225175");
		return "FloridaCityGainesvillecity";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Nashville-Davidson--Murfreesboro--Franklin", method = RequestMethod.GET)
	public String getTennesseeMetroNashvilleDavidsonMurfreesboroFranklin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34980");
		return "TennesseeMetroNashvilleDavidsonMurfreesboroFranklin";
	}   
@RequestMapping(value = "/states/Georgia/cities/Sandy-Springs-city", method = RequestMethod.GET)
	public String getGeorgiaCitySandySpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1368516");
		return "GeorgiaCitySandySpringscity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Clark-County", method = RequestMethod.GET)
	public String getIndianaCountyClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18019");
		return "IndianaCountyClarkCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Hendersonville-city", method = RequestMethod.GET)
	public String getTennesseeCityHendersonvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4733280");
		return "TennesseeCityHendersonvillecity";
	}   
@RequestMapping(value = "/states/Utah/cities/Tooele-city", method = RequestMethod.GET)
	public String getUtahCityTooelecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4976680");
		return "UtahCityTooelecity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Daviess-County", method = RequestMethod.GET)
	public String getIndianaCountyDaviessCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18027");
		return "IndianaCountyDaviessCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Clay-County", method = RequestMethod.GET)
	public String getIndianaCountyClayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18021");
		return "IndianaCountyClayCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Clinton-County", method = RequestMethod.GET)
	public String getIndianaCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18023");
		return "IndianaCountyClintonCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Duncan", method = RequestMethod.GET)
	public String getOklahomaMicroDuncan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20340");
		return "OklahomaMicroDuncan";
	}   
@RequestMapping(value = "/states/Georgia/micros/Thomasville", method = RequestMethod.GET)
	public String getGeorgiaMicroThomasville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45620");
		return "GeorgiaMicroThomasville";
	}   
@RequestMapping(value = "/states/Indiana/metros/Columbus", method = RequestMethod.GET)
	public String getIndianaMetroColumbus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18020");
		return "IndianaMetroColumbus";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Jackson-city", method = RequestMethod.GET)
	public String getTennesseeCityJacksoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4737640");
		return "TennesseeCityJacksoncity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Greensburg", method = RequestMethod.GET)
	public String getIndianaMicroGreensburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24700");
		return "IndianaMicroGreensburg";
	}   
@RequestMapping(value = "/states/Illinois/cities/Lake-in-the-Hills-village", method = RequestMethod.GET)
	public String getIllinoisCityLakeintheHillsvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1741183");
		return "IllinoisCityLakeintheHillsvillage";
	}   
@RequestMapping(value = "/states/California/cities/East-Los-Angeles", method = RequestMethod.GET)
	public String getCaliforniaCityEastLosAngeles(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "620802");
		return "CaliforniaCityEastLosAngeles";
	}   
@RequestMapping(value = "/states/Colorado/cities/Westminster-city", method = RequestMethod.GET)
	public String getColoradoCityWestminstercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "883835");
		return "ColoradoCityWestminstercity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Dearborn-County", method = RequestMethod.GET)
	public String getIndianaCountyDearbornCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18029");
		return "IndianaCountyDearbornCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Westerville-city", method = RequestMethod.GET)
	public String getOhioCityWestervillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3983342");
		return "OhioCityWestervillecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Royal-Palm-Beach-village", method = RequestMethod.GET)
	public String getFloridaCityRoyalPalmBeachvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1262100");
		return "FloridaCityRoyalPalmBeachvillage";
	}   
@RequestMapping(value = "/states/Maryland/cities/Potomac", method = RequestMethod.GET)
	public String getMarylandCityPotomac(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2463300");
		return "MarylandCityPotomac";
	}   
@RequestMapping(value = "/states/Virginia/micros/Martinsville", method = RequestMethod.GET)
	public String getVirginiaMicroMartinsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32300");
		return "VirginiaMicroMartinsville";
	}   
@RequestMapping(value = "/states/Ohio/cities/Miamisburg-city", method = RequestMethod.GET)
	public String getOhioCityMiamisburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3949434");
		return "OhioCityMiamisburgcity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Parkville", method = RequestMethod.GET)
	public String getMarylandCityParkville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2460275");
		return "MarylandCityParkville";
	}   
@RequestMapping(value = "/states/California/cities/Simi-Valley-city", method = RequestMethod.GET)
	public String getCaliforniaCitySimiValleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "672016");
		return "CaliforniaCitySimiValleycity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Allen-County", method = RequestMethod.GET)
	public String getIndianaCountyAllenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18003");
		return "IndianaCountyAllenCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Randolph", method = RequestMethod.GET)
	public String getMassachusettsCityRandolph(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2555990");
		return "MassachusettsCityRandolph";
	}   
@RequestMapping(value = "/states/Indiana/counties/Bartholomew-County", method = RequestMethod.GET)
	public String getIndianaCountyBartholomewCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18005");
		return "IndianaCountyBartholomewCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Westfield-city", method = RequestMethod.GET)
	public String getMassachusettsCityWestfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2576030");
		return "MassachusettsCityWestfieldcity";
	}   
@RequestMapping(value = "/states/Washington/cities/Oak-Harbor-city", method = RequestMethod.GET)
	public String getWashingtonCityOakHarborcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5350360");
		return "WashingtonCityOakHarborcity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Adams-County", method = RequestMethod.GET)
	public String getIndianaCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18001");
		return "IndianaCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/St-Louis-city", method = RequestMethod.GET)
	public String getMissouriCityStLouiscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2965000");
		return "MissouriCityStLouiscity";
	}   
@RequestMapping(value = "/states/Washington/cities/Issaquah-city", method = RequestMethod.GET)
	public String getWashingtonCityIssaquahcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5333805");
		return "WashingtonCityIssaquahcity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Agawam-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityAgawamTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2500840");
		return "MassachusettsCityAgawamTowncity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Moberly", method = RequestMethod.GET)
	public String getMissouriMicroMoberly(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33620");
		return "MissouriMicroMoberly";
	}   
@RequestMapping(value = "/states/Washington/cities/Salmon-Creek", method = RequestMethod.GET)
	public String getWashingtonCitySalmonCreek(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5361000");
		return "WashingtonCitySalmonCreek";
	}   
@RequestMapping(value = "/states/Massachusetts/metros/Barnstable-Town", method = RequestMethod.GET)
	public String getMassachusettsMetroBarnstableTown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12700");
		return "MassachusettsMetroBarnstableTown";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Fayetteville-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityFayettevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3722920");
		return "North_CarolinaCityFayettevillecity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Cleveland-city", method = RequestMethod.GET)
	public String getTennesseeCityClevelandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4715400");
		return "TennesseeCityClevelandcity";
	}   
@RequestMapping(value = "/states/Alabama/metros/Daphne-Fairhope-Foley", method = RequestMethod.GET)
	public String getAlabamaMetroDaphneFairhopeFoley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19300");
		return "AlabamaMetroDaphneFairhopeFoley";
	}   
@RequestMapping(value = "/states/Nevada/cities/Paradise", method = RequestMethod.GET)
	public String getNevadaCityParadise(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3254600");
		return "NevadaCityParadise";
	}   
@RequestMapping(value = "/states/New-York/cities/Utica-city", method = RequestMethod.GET)
	public String getNew_YorkCityUticacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3676540");
		return "New_YorkCityUticacity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Adams-County", method = RequestMethod.GET)
	public String getWisconsinCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55001");
		return "WisconsinCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Florida/metros/NaplesImmokaleeMarco-Island", method = RequestMethod.GET)
	public String getFloridaMetroNaplesImmokaleeMarcoIsland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34940");
		return "FloridaMetroNaplesImmokaleeMarcoIsland";
	}   
@RequestMapping(value = "/states/Kansas/micros/Liberal", method = RequestMethod.GET)
	public String getKansasMicroLiberal(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30580");
		return "KansasMicroLiberal";
	}   
@RequestMapping(value = "/states/Utah/cities/Roy-city", method = RequestMethod.GET)
	public String getUtahCityRoycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4965110");
		return "UtahCityRoycity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Barron-County", method = RequestMethod.GET)
	public String getWisconsinCountyBarronCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55005");
		return "WisconsinCountyBarronCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lake-Elsinore-city", method = RequestMethod.GET)
	public String getCaliforniaCityLakeElsinorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639486");
		return "CaliforniaCityLakeElsinorecity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Brown-County", method = RequestMethod.GET)
	public String getWisconsinCountyBrownCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55009");
		return "WisconsinCountyBrownCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Burien-city", method = RequestMethod.GET)
	public String getWashingtonCityBuriencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5308850");
		return "WashingtonCityBuriencity";
	}   
@RequestMapping(value = "/states/Georgia/micros/St-Marys", method = RequestMethod.GET)
	public String getGeorgiaMicroStMarys(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41220");
		return "GeorgiaMicroStMarys";
	}   
@RequestMapping(value = "/states/Texas/micros/Dumas", method = RequestMethod.GET)
	public String getTexasMicroDumas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20300");
		return "TexasMicroDumas";
	}   
@RequestMapping(value = "/states/Kansas/cities/Kansas-City-city", method = RequestMethod.GET)
	public String getKansasCityKansasCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2036000");
		return "KansasCityKansasCitycity";
	}   
@RequestMapping(value = "/states/California/cities/Eureka-city", method = RequestMethod.GET)
	public String getCaliforniaCityEurekacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "623042");
		return "CaliforniaCityEurekacity";
	}   
@RequestMapping(value = "/states/Florida/cities/Boca-Raton-city", method = RequestMethod.GET)
	public String getFloridaCityBocaRatoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1207300");
		return "FloridaCityBocaRatoncity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Garden-City-city", method = RequestMethod.GET)
	public String getKansasCityGardenCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2025325");
		return "KansasCityGardenCitycity";
	}   
@RequestMapping(value = "/states/Texas/cities/West-Odessa", method = RequestMethod.GET)
	public String getTexasCityWestOdessa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4877728");
		return "TexasCityWestOdessa";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Winston-Salem", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroWinstonSalem(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49180");
		return "North_CarolinaMetroWinstonSalem";
	}   
@RequestMapping(value = "/states/New-York/cities/Binghamton-city", method = RequestMethod.GET)
	public String getNew_YorkCityBinghamtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3606607");
		return "New_YorkCityBinghamtoncity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Chippewa-County", method = RequestMethod.GET)
	public String getWisconsinCountyChippewaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55017");
		return "WisconsinCountyChippewaCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Calumet-County", method = RequestMethod.GET)
	public String getWisconsinCountyCalumetCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55015");
		return "WisconsinCountyCalumetCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lake-Forest-city", method = RequestMethod.GET)
	public String getCaliforniaCityLakeForestcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639496");
		return "CaliforniaCityLakeForestcity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Clark-County", method = RequestMethod.GET)
	public String getWisconsinCountyClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55019");
		return "WisconsinCountyClarkCounty";
	}   
@RequestMapping(value = "/states/Michigan/micros/Alpena", method = RequestMethod.GET)
	public String getMichiganMicroAlpena(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10980");
		return "MichiganMicroAlpena";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Kearney", method = RequestMethod.GET)
	public String getNebraskaMicroKearney(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28260");
		return "NebraskaMicroKearney";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Wilson-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyWilsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37195");
		return "North_CarolinaCountyWilsonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Beaumont-city", method = RequestMethod.GET)
	public String getCaliforniaCityBeaumontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "604758");
		return "CaliforniaCityBeaumontcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Yadkin-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyYadkinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37197");
		return "North_CarolinaCountyYadkinCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Scranton--Wilkes-Barre--Hazleton", method = RequestMethod.GET)
	public String getPennsylvaniaMetroScrantonWilkesBarreHazleton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42540");
		return "PennsylvaniaMetroScrantonWilkesBarreHazleton";
	}   
@RequestMapping(value = "/states/Arizona/cities/Flagstaff-city", method = RequestMethod.GET)
	public String getArizonaCityFlagstaffcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "423620");
		return "ArizonaCityFlagstaffcity";
	}   
@RequestMapping(value = "/states/California/cities/Covina-city", method = RequestMethod.GET)
	public String getCaliforniaCityCovinacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "616742");
		return "CaliforniaCityCovinacity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Woodbury-city", method = RequestMethod.GET)
	public String getMinnesotaCityWoodburycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2771428");
		return "MinnesotaCityWoodburycity";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Clovis", method = RequestMethod.GET)
	public String getNew_MexicoMicroClovis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17580");
		return "New_MexicoMicroClovis";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Columbia-County", method = RequestMethod.GET)
	public String getWisconsinCountyColumbiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55021");
		return "WisconsinCountyColumbiaCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Wayne-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37191");
		return "North_CarolinaCountyWayneCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Wilkes-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyWilkesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37193");
		return "North_CarolinaCountyWilkesCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Dane-County", method = RequestMethod.GET)
	public String getWisconsinCountyDaneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55025");
		return "WisconsinCountyDaneCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Door-County", method = RequestMethod.GET)
	public String getWisconsinCountyDoorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55029");
		return "WisconsinCountyDoorCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Dodge-County", method = RequestMethod.GET)
	public String getWisconsinCountyDodgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55027");
		return "WisconsinCountyDodgeCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Wake-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyWakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37183");
		return "North_CarolinaCountyWakeCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Brookline", method = RequestMethod.GET)
	public String getMassachusettsCityBrookline(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2509210");
		return "MassachusettsCityBrookline";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Warren-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37185");
		return "North_CarolinaCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/cities/Brookings-city", method = RequestMethod.GET)
	public String getSouth_DakotaCityBrookingscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4607580");
		return "South_DakotaCityBrookingscity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Watauga-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyWataugaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37189");
		return "North_CarolinaCountyWataugaCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Waldorf", method = RequestMethod.GET)
	public String getMarylandCityWaldorf(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2481175");
		return "MarylandCityWaldorf";
	}   
@RequestMapping(value = "/states/Utah/micros/Cedar-City", method = RequestMethod.GET)
	public String getUtahMicroCedarCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16260");
		return "UtahMicroCedarCity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Douglas-County", method = RequestMethod.GET)
	public String getWisconsinCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55031");
		return "WisconsinCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Vance-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyVanceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37181");
		return "North_CarolinaCountyVanceCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Holland-city", method = RequestMethod.GET)
	public String getMichiganCityHollandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2638640");
		return "MichiganCityHollandcity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Eau-Claire-County", method = RequestMethod.GET)
	public String getWisconsinCountyEauClaireCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55035");
		return "WisconsinCountyEauClaireCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Dunn-County", method = RequestMethod.GET)
	public String getWisconsinCountyDunnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55033");
		return "WisconsinCountyDunnCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Herndon-town", method = RequestMethod.GET)
	public String getVirginiaCityHerndontown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5136648");
		return "VirginiaCityHerndontown";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Fond-du-Lac-County", method = RequestMethod.GET)
	public String getWisconsinCountyFondduLacCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55039");
		return "WisconsinCountyFondduLacCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Alliance-city", method = RequestMethod.GET)
	public String getOhioCityAlliancecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3901420");
		return "OhioCityAlliancecity";
	}   
@RequestMapping(value = "/states/California/cities/Agoura-Hills-city", method = RequestMethod.GET)
	public String getCaliforniaCityAgouraHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "600394");
		return "CaliforniaCityAgouraHillscity";
	}   
@RequestMapping(value = "/states/Utah/cities/Magna", method = RequestMethod.GET)
	public String getUtahCityMagna(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4947290");
		return "UtahCityMagna";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Murrysville-municipality", method = RequestMethod.GET)
	public String getPennsylvaniaCityMurrysvillemunicipality(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4252432");
		return "PennsylvaniaCityMurrysvillemunicipality";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Webster-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyWebsterParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22119");
		return "LouisianaCountyWebsterParish";
	}   
@RequestMapping(value = "/states/Washington/cities/Richland-city", method = RequestMethod.GET)
	public String getWashingtonCityRichlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5358235");
		return "WashingtonCityRichlandcity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Marshall-County", method = RequestMethod.GET)
	public String getIndianaCountyMarshallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18099");
		return "IndianaCountyMarshallCounty";
	}   
@RequestMapping(value = "/states/Vermont/cities/Burlington-city", method = RequestMethod.GET)
	public String getVermontCityBurlingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5010675");
		return "VermontCityBurlingtoncity";
	}   
@RequestMapping(value = "/states/Michigan/metros/Ann-Arbor", method = RequestMethod.GET)
	public String getMichiganMetroAnnArbor(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11460");
		return "MichiganMetroAnnArbor";
	}   
@RequestMapping(value = "/states/Indiana/counties/Madison-County", method = RequestMethod.GET)
	public String getIndianaCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18095");
		return "IndianaCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Union-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyUnionParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22111");
		return "LouisianaCountyUnionParish";
	}   
@RequestMapping(value = "/states/Indiana/counties/Marion-County", method = RequestMethod.GET)
	public String getIndianaCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18097");
		return "IndianaCountyMarionCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Vermilion-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyVermilionParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22113");
		return "LouisianaCountyVermilionParish";
	}   
@RequestMapping(value = "/states/Indiana/counties/LaPorte-County", method = RequestMethod.GET)
	public String getIndianaCountyLaPorteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18091");
		return "IndianaCountyLaPorteCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Vernon-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyVernonParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22115");
		return "LouisianaCountyVernonParish";
	}   
@RequestMapping(value = "/states/Indiana/counties/Lawrence-County", method = RequestMethod.GET)
	public String getIndianaCountyLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18093");
		return "IndianaCountyLawrenceCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Washington-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyWashingtonParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22117");
		return "LouisianaCountyWashingtonParish";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Raleigh-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityRaleighcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3755000");
		return "North_CarolinaCityRaleighcity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Hall-County", method = RequestMethod.GET)
	public String getNebraskaCountyHallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31079");
		return "NebraskaCountyHallCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Dayton-city", method = RequestMethod.GET)
	public String getOhioCityDaytoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3921000");
		return "OhioCityDaytoncity";
	}   
@RequestMapping(value = "/states/Nevada/cities/Las-Vegas-city", method = RequestMethod.GET)
	public String getNevadaCityLasVegascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3240000");
		return "NevadaCityLasVegascity";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Morristown", method = RequestMethod.GET)
	public String getTennesseeMetroMorristown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34100");
		return "TennesseeMetroMorristown";
	}   
@RequestMapping(value = "/states/Ohio/cities/Marysville-city", method = RequestMethod.GET)
	public String getOhioCityMarysvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3948160");
		return "OhioCityMarysvillecity";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Campbellsville", method = RequestMethod.GET)
	public String getKentuckyMicroCampbellsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15820");
		return "KentuckyMicroCampbellsville";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Derry", method = RequestMethod.GET)
	public String getNew_HampshireCityDerry(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3317860");
		return "New_HampshireCityDerry";
	}   
@RequestMapping(value = "/states/Maryland/cities/Towson", method = RequestMethod.GET)
	public String getMarylandCityTowson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2478425");
		return "MarylandCityTowson";
	}   
@RequestMapping(value = "/states/Illinois/cities/Carpentersville-village", method = RequestMethod.GET)
	public String getIllinoisCityCarpentersvillevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1711358");
		return "IllinoisCityCarpentersvillevillage";
	}   
@RequestMapping(value = "/states/Washington/micros/Aberdeen", method = RequestMethod.GET)
	public String getWashingtonMicroAberdeen(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10140");
		return "WashingtonMicroAberdeen";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Hammond-city", method = RequestMethod.GET)
	public String getLouisianaCityHammondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2232755");
		return "LouisianaCityHammondcity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/West-Baton-Rouge-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyWestBatonRougeParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22121");
		return "LouisianaCountyWestBatonRougeParish";
	}   
@RequestMapping(value = "/states/Arizona/cities/Drexel-Heights", method = RequestMethod.GET)
	public String getArizonaCityDrexelHeights(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "420540");
		return "ArizonaCityDrexelHeights";
	}   
@RequestMapping(value = "/states/Ohio/cities/Athens-city", method = RequestMethod.GET)
	public String getOhioCityAthenscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3902736");
		return "OhioCityAthenscity";
	}   
@RequestMapping(value = "/states/Missouri/cities/University-City-city", method = RequestMethod.GET)
	public String getMissouriCityUniversityCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2975220");
		return "MissouriCityUniversityCitycity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Trotwood-city", method = RequestMethod.GET)
	public String getOhioCityTrotwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3977504");
		return "OhioCityTrotwoodcity";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Greenville", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroGreenville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24780");
		return "North_CarolinaMetroGreenville";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Gage-County", method = RequestMethod.GET)
	public String getNebraskaCountyGageCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31067");
		return "NebraskaCountyGageCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/New-PhiladelphiaDover", method = RequestMethod.GET)
	public String getOhioMicroNewPhiladelphiaDover(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35420");
		return "OhioMicroNewPhiladelphiaDover";
	}   
@RequestMapping(value = "/states/Colorado/metros/Boulder", method = RequestMethod.GET)
	public String getColoradoMetroBoulder(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14500");
		return "ColoradoMetroBoulder";
	}   
@RequestMapping(value = "/states/Florida/cities/Tallahassee-city", method = RequestMethod.GET)
	public String getFloridaCityTallahasseecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1270600");
		return "FloridaCityTallahasseecity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Flint-city", method = RequestMethod.GET)
	public String getMichiganCityFlintcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2629000");
		return "MichiganCityFlintcity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Roswell-city", method = RequestMethod.GET)
	public String getGeorgiaCityRoswellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1367284");
		return "GeorgiaCityRoswellcity";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Elizabethtown-city", method = RequestMethod.GET)
	public String getKentuckyCityElizabethtowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2124274");
		return "KentuckyCityElizabethtowncity";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Pearl-City", method = RequestMethod.GET)
	public String getHawaiiCityPearlCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1562600");
		return "HawaiiCityPearlCity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Jefferson-County", method = RequestMethod.GET)
	public String getIndianaCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18077");
		return "IndianaCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Santee-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanteecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670224");
		return "CaliforniaCitySanteecity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Jennings-County", method = RequestMethod.GET)
	public String getIndianaCountyJenningsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18079");
		return "IndianaCountyJenningsCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Jasper-County", method = RequestMethod.GET)
	public String getIndianaCountyJasperCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18073");
		return "IndianaCountyJasperCounty";
	}   
@RequestMapping(value = "/states/California/metros/Fresno", method = RequestMethod.GET)
	public String getCaliforniaMetroFresno(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23420");
		return "CaliforniaMetroFresno";
	}   
@RequestMapping(value = "/states/Iowa/micros/Mason-City", method = RequestMethod.GET)
	public String getIowaMicroMasonCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32380");
		return "IowaMicroMasonCity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Jay-County", method = RequestMethod.GET)
	public String getIndianaCountyJayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18075");
		return "IndianaCountyJayCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Jackson-County", method = RequestMethod.GET)
	public String getIndianaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18071");
		return "IndianaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Dodge-County", method = RequestMethod.GET)
	public String getNebraskaCountyDodgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31053");
		return "NebraskaCountyDodgeCounty";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Douglas-County", method = RequestMethod.GET)
	public String getNebraskaCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31055");
		return "NebraskaCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/Florida/metros/Orlando-Kissimmee-Sanford", method = RequestMethod.GET)
	public String getFloridaMetroOrlandoKissimmeeSanford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36740");
		return "FloridaMetroOrlandoKissimmeeSanford";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Anderson-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityAndersoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4501360");
		return "South_CarolinaCityAndersoncity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Mason-city", method = RequestMethod.GET)
	public String getOhioCityMasoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3948188");
		return "OhioCityMasoncity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Terrebonne-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyTerrebonneParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22109");
		return "LouisianaCountyTerrebonneParish";
	}   
@RequestMapping(value = "/states/Indiana/counties/LaGrange-County", method = RequestMethod.GET)
	public String getIndianaCountyLaGrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18087");
		return "IndianaCountyLaGrangeCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Bartlesville", method = RequestMethod.GET)
	public String getOklahomaMicroBartlesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12780");
		return "OklahomaMicroBartlesville";
	}   
@RequestMapping(value = "/states/Missouri/cities/St-Joseph-city", method = RequestMethod.GET)
	public String getMissouriCityStJosephcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2964550");
		return "MissouriCityStJosephcity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Lake-County", method = RequestMethod.GET)
	public String getIndianaCountyLakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18089");
		return "IndianaCountyLakeCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Knox-County", method = RequestMethod.GET)
	public String getIndianaCountyKnoxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18083");
		return "IndianaCountyKnoxCounty";
	}   
@RequestMapping(value = "/states/California/cities/Mountain-View-city", method = RequestMethod.GET)
	public String getCaliforniaCityMountainViewcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "649670");
		return "CaliforniaCityMountainViewcity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Farmington", method = RequestMethod.GET)
	public String getMissouriMicroFarmington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22100");
		return "MissouriMicroFarmington";
	}   
@RequestMapping(value = "/states/Indiana/counties/Kosciusko-County", method = RequestMethod.GET)
	public String getIndianaCountyKosciuskoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18085");
		return "IndianaCountyKosciuskoCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-Mary-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStMaryParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22101");
		return "LouisianaCountyStMaryParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-Tammany-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStTammanyParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22103");
		return "LouisianaCountyStTammanyParish";
	}   
@RequestMapping(value = "/states/Indiana/counties/Johnson-County", method = RequestMethod.GET)
	public String getIndianaCountyJohnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18081");
		return "IndianaCountyJohnsonCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Tangipahoa-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyTangipahoaParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22105");
		return "LouisianaCountyTangipahoaParish";
	}   
@RequestMapping(value = "/states/California/cities/Wasco-city", method = RequestMethod.GET)
	public String getCaliforniaCityWascocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "683542");
		return "CaliforniaCityWascocity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Dawson-County", method = RequestMethod.GET)
	public String getNebraskaCountyDawsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31047");
		return "NebraskaCountyDawsonCounty";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Urban-Honolulu", method = RequestMethod.GET)
	public String getHawaiiCityUrbanHonolulu(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1571550");
		return "HawaiiCityUrbanHonolulu";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Charleston-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityCharlestoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4513330");
		return "South_CarolinaCityCharlestoncity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Dakota-County", method = RequestMethod.GET)
	public String getNebraskaCountyDakotaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31043");
		return "NebraskaCountyDakotaCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Hickory-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityHickorycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3731060");
		return "North_CarolinaCityHickorycity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Wyandotte-city", method = RequestMethod.GET)
	public String getMichiganCityWyandottecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2688900");
		return "MichiganCityWyandottecity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Hancock-County", method = RequestMethod.GET)
	public String getIndianaCountyHancockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18059");
		return "IndianaCountyHancockCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Centreville", method = RequestMethod.GET)
	public String getVirginiaCityCentreville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5114440");
		return "VirginiaCityCentreville";
	}   
@RequestMapping(value = "/states/California/cities/Modesto-city", method = RequestMethod.GET)
	public String getCaliforniaCityModestocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "648354");
		return "CaliforniaCityModestocity";
	}   
@RequestMapping(value = "/states/New-York/cities/Jamestown-city", method = RequestMethod.GET)
	public String getNew_YorkCityJamestowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3638264");
		return "New_YorkCityJamestowncity";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Williamsport", method = RequestMethod.GET)
	public String getPennsylvaniaMetroWilliamsport(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48700");
		return "PennsylvaniaMetroWilliamsport";
	}   
@RequestMapping(value = "/states/Indiana/counties/Greene-County", method = RequestMethod.GET)
	public String getIndianaCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18055");
		return "IndianaCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Savannah-city", method = RequestMethod.GET)
	public String getGeorgiaCitySavannahcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1369000");
		return "GeorgiaCitySavannahcity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Hamilton-County", method = RequestMethod.GET)
	public String getIndianaCountyHamiltonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18057");
		return "IndianaCountyHamiltonCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Gibson-County", method = RequestMethod.GET)
	public String getIndianaCountyGibsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18051");
		return "IndianaCountyGibsonCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Grant-County", method = RequestMethod.GET)
	public String getIndianaCountyGrantCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18053");
		return "IndianaCountyGrantCounty";
	}   
@RequestMapping(value = "/states/Ohio/metros/Dayton", method = RequestMethod.GET)
	public String getOhioMetroDayton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19380");
		return "OhioMetroDayton";
	}   
@RequestMapping(value = "/states/Georgia/micros/Statesboro", method = RequestMethod.GET)
	public String getGeorgiaMicroStatesboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44340");
		return "GeorgiaMicroStatesboro";
	}   
@RequestMapping(value = "/states/Indiana/micros/Angola", method = RequestMethod.GET)
	public String getIndianaMicroAngola(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11420");
		return "IndianaMicroAngola";
	}   
@RequestMapping(value = "/states/Indiana/counties/Huntington-County", method = RequestMethod.GET)
	public String getIndianaCountyHuntingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18069");
		return "IndianaCountyHuntingtonCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Indianapolis-city-balance", method = RequestMethod.GET)
	public String getIndianaCityIndianapoliscitybalance(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1836003");
		return "IndianaCityIndianapoliscitybalance";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Brentwood-city", method = RequestMethod.GET)
	public String getTennesseeCityBrentwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4708280");
		return "TennesseeCityBrentwoodcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Dolton-village", method = RequestMethod.GET)
	public String getIllinoisCityDoltonvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1720292");
		return "IllinoisCityDoltonvillage";
	}   
@RequestMapping(value = "/states/Indiana/counties/Henry-County", method = RequestMethod.GET)
	public String getIndianaCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18065");
		return "IndianaCountyHenryCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Alamogordo-city", method = RequestMethod.GET)
	public String getNew_MexicoCityAlamogordocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3501780");
		return "New_MexicoCityAlamogordocity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Howard-County", method = RequestMethod.GET)
	public String getIndianaCountyHowardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18067");
		return "IndianaCountyHowardCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Harrison-County", method = RequestMethod.GET)
	public String getIndianaCountyHarrisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18061");
		return "IndianaCountyHarrisonCounty";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Greenville", method = RequestMethod.GET)
	public String getMississippiMicroGreenville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24740");
		return "MississippiMicroGreenville";
	}   
@RequestMapping(value = "/states/Indiana/counties/Hendricks-County", method = RequestMethod.GET)
	public String getIndianaCountyHendricksCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18063");
		return "IndianaCountyHendricksCounty";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities/East-Providence-city", method = RequestMethod.GET)
	public String getRhode_IslandCityEastProvidencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4422960");
		return "Rhode_IslandCityEastProvidencecity";
	}   
@RequestMapping(value = "/states/Utah/cities/Springville-city", method = RequestMethod.GET)
	public String getUtahCitySpringvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4972280");
		return "UtahCitySpringvillecity";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Columbus", method = RequestMethod.GET)
	public String getMississippiMicroColumbus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18060");
		return "MississippiMicroColumbus";
	}   
@RequestMapping(value = "/states/Texas/cities/Houston-city", method = RequestMethod.GET)
	public String getTexasCityHoustoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4835000");
		return "TexasCityHoustoncity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Cass-County", method = RequestMethod.GET)
	public String getNebraskaCountyCassCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31025");
		return "NebraskaCountyCassCounty";
	}   
@RequestMapping(value = "/states/Washington/metros/Longview", method = RequestMethod.GET)
	public String getWashingtonMetroLongview(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31020");
		return "WashingtonMetroLongview";
	}   
@RequestMapping(value = "/states/Washington/cities/Spokane-Valley-city", method = RequestMethod.GET)
	public String getWashingtonCitySpokaneValleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5367167");
		return "WashingtonCitySpokaneValleycity";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Dunn", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroDunn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20380");
		return "North_CarolinaMicroDunn";
	}   
@RequestMapping(value = "/states/Ohio/micros/Tiffin", method = RequestMethod.GET)
	public String getOhioMicroTiffin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45660");
		return "OhioMicroTiffin";
	}   
@RequestMapping(value = "/states/Florida/cities/Princeton", method = RequestMethod.GET)
	public String getFloridaCityPrinceton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1258975");
		return "FloridaCityPrinceton";
	}   
@RequestMapping(value = "/states/South-Dakota/micros/Aberdeen", method = RequestMethod.GET)
	public String getSouth_DakotaMicroAberdeen(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10100");
		return "South_DakotaMicroAberdeen";
	}   
@RequestMapping(value = "/states/Indiana/counties/Dubois-County", method = RequestMethod.GET)
	public String getIndianaCountyDuboisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18037");
		return "IndianaCountyDuboisCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Elkhart-County", method = RequestMethod.GET)
	public String getIndianaCountyElkhartCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18039");
		return "IndianaCountyElkhartCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/DeKalb-County", method = RequestMethod.GET)
	public String getIndianaCountyDeKalbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18033");
		return "IndianaCountyDeKalbCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Mount-Vernon-city", method = RequestMethod.GET)
	public String getWashingtonCityMountVernoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5347560");
		return "WashingtonCityMountVernoncity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Delaware-County", method = RequestMethod.GET)
	public String getIndianaCountyDelawareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18035");
		return "IndianaCountyDelawareCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Decatur-County", method = RequestMethod.GET)
	public String getIndianaCountyDecaturCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18031");
		return "IndianaCountyDecaturCounty";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Omaha-city", method = RequestMethod.GET)
	public String getNebraskaCityOmahacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3137000");
		return "NebraskaCityOmahacity";
	}   
@RequestMapping(value = "/states/California/cities/Redondo-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCityRedondoBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "660018");
		return "CaliforniaCityRedondoBeachcity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Maryville", method = RequestMethod.GET)
	public String getMissouriMicroMaryville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32340");
		return "MissouriMicroMaryville";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Vicksburg", method = RequestMethod.GET)
	public String getMississippiMicroVicksburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46980");
		return "MississippiMicroVicksburg";
	}   
@RequestMapping(value = "/states/South-Carolina/micros/Orangeburg", method = RequestMethod.GET)
	public String getSouth_CarolinaMicroOrangeburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36700");
		return "South_CarolinaMicroOrangeburg";
	}   
@RequestMapping(value = "/states/Florida/cities/Titusville-city", method = RequestMethod.GET)
	public String getFloridaCityTitusvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271900");
		return "FloridaCityTitusvillecity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Buffalo-County", method = RequestMethod.GET)
	public String getNebraskaCountyBuffaloCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31019");
		return "NebraskaCountyBuffaloCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Franklin-County", method = RequestMethod.GET)
	public String getIndianaCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18047");
		return "IndianaCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Fulton-County", method = RequestMethod.GET)
	public String getIndianaCountyFultonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18049");
		return "IndianaCountyFultonCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Floyd-County", method = RequestMethod.GET)
	public String getIndianaCountyFloydCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18043");
		return "IndianaCountyFloydCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Hopewell-city", method = RequestMethod.GET)
	public String getVirginiaCityHopewellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5138424");
		return "VirginiaCityHopewellcity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Fayette-County", method = RequestMethod.GET)
	public String getIndianaCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18041");
		return "IndianaCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Algonquin-village", method = RequestMethod.GET)
	public String getIllinoisCityAlgonquinvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1700685");
		return "IllinoisCityAlgonquinvillage";
	}   
@RequestMapping(value = "/states/Illinois/cities/Lockport-city", method = RequestMethod.GET)
	public String getIllinoisCityLockportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1744225");
		return "IllinoisCityLockportcity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/White-Bear-Lake-city", method = RequestMethod.GET)
	public String getMinnesotaCityWhiteBearLakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2769970");
		return "MinnesotaCityWhiteBearLakecity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Adams-County", method = RequestMethod.GET)
	public String getNebraskaCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31001");
		return "NebraskaCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Alabama/metros/Mobile", method = RequestMethod.GET)
	public String getAlabamaMetroMobile(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33660");
		return "AlabamaMetroMobile";
	}   
@RequestMapping(value = "/states/California/cities/Saratoga-city", method = RequestMethod.GET)
	public String getCaliforniaCitySaratogacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670280");
		return "CaliforniaCitySaratogacity";
	}   
@RequestMapping(value = "/states/Vermont/micros/Barre", method = RequestMethod.GET)
	public String getVermontMicroBarre(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12740");
		return "VermontMicroBarre";
	}   
@RequestMapping(value = "/states/Illinois/cities/Carol-Stream-village", method = RequestMethod.GET)
	public String getIllinoisCityCarolStreamvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1711332");
		return "IllinoisCityCarolStreamvillage";
	}   
@RequestMapping(value = "/states/New-York/cities/Deer-Park", method = RequestMethod.GET)
	public String getNew_YorkCityDeerPark(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3619972");
		return "New_YorkCityDeerPark";
	}   
@RequestMapping(value = "/states/Arizona/cities/Tempe-city", method = RequestMethod.GET)
	public String getArizonaCityTempecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "473000");
		return "ArizonaCityTempecity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Wyoming-city", method = RequestMethod.GET)
	public String getMichiganCityWyomingcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2688940");
		return "MichiganCityWyomingcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/San-Juan-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCitySanJuanzonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7276770");
		return "Puerto_RicoCitySanJuanzonaurbana";
	}   
@RequestMapping(value = "/states/California/cities/San-Fernando-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanFernandocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "666140");
		return "CaliforniaCitySanFernandocity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Jackson-city", method = RequestMethod.GET)
	public String getMichiganCityJacksoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2641420");
		return "MichiganCityJacksoncity";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Camden", method = RequestMethod.GET)
	public String getArkansasMicroCamden(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15780");
		return "ArkansasMicroCamden";
	}   
@RequestMapping(value = "/states/Missouri/cities/Columbia-city", method = RequestMethod.GET)
	public String getMissouriCityColumbiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2915670");
		return "MissouriCityColumbiacity";
	}   
@RequestMapping(value = "/states/Connecticut/cities/East-Haven", method = RequestMethod.GET)
	public String getConnecticutCityEastHaven(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "922980");
		return "ConnecticutCityEastHaven";
	}   
@RequestMapping(value = "/states/Georgia/counties/Fulton-County", method = RequestMethod.GET)
	public String getGeorgiaCountyFultonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13121");
		return "GeorgiaCountyFultonCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Roswell", method = RequestMethod.GET)
	public String getNew_MexicoMicroRoswell(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40740");
		return "New_MexicoMicroRoswell";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Platteville", method = RequestMethod.GET)
	public String getWisconsinMicroPlatteville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38420");
		return "WisconsinMicroPlatteville";
	}   
@RequestMapping(value = "/states/California/cities/Eastvale-city", method = RequestMethod.GET)
	public String getCaliforniaCityEastvalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "621230");
		return "CaliforniaCityEastvalecity";
	}   
@RequestMapping(value = "/states/Texas/cities/Edinburg-city", method = RequestMethod.GET)
	public String getTexasCityEdinburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4822660");
		return "TexasCityEdinburgcity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Pointe-Coupee-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyPointeCoupeeParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22077");
		return "LouisianaCountyPointeCoupeeParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Rapides-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyRapidesParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22079");
		return "LouisianaCountyRapidesParish";
	}   
@RequestMapping(value = "/states/West-Virginia/metros/Morgantown", method = RequestMethod.GET)
	public String getWest_VirginiaMetroMorgantown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34060");
		return "West_VirginiaMetroMorgantown";
	}   
@RequestMapping(value = "/states/California/cities/Poway-city", method = RequestMethod.GET)
	public String getCaliforniaCityPowaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "658520");
		return "CaliforniaCityPowaycity";
	}   
@RequestMapping(value = "/states/California/cities/Calabasas-city", method = RequestMethod.GET)
	public String getCaliforniaCityCalabasascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "609598");
		return "CaliforniaCityCalabasascity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Orleans-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyOrleansParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22071");
		return "LouisianaCountyOrleansParish";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Austin-city", method = RequestMethod.GET)
	public String getMinnesotaCityAustincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2702908");
		return "MinnesotaCityAustincity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Ouachita-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyOuachitaParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22073");
		return "LouisianaCountyOuachitaParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Plaquemines-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyPlaqueminesParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22075");
		return "LouisianaCountyPlaqueminesParish";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Guymon", method = RequestMethod.GET)
	public String getOklahomaMicroGuymon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25100");
		return "OklahomaMicroGuymon";
	}   
@RequestMapping(value = "/states/Florida/cities/Valrico", method = RequestMethod.GET)
	public String getFloridaCityValrico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1273700");
		return "FloridaCityValrico";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/West-Bend-city", method = RequestMethod.GET)
	public String getWisconsinCityWestBendcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5585350");
		return "WisconsinCityWestBendcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Gilmer-County", method = RequestMethod.GET)
	public String getGeorgiaCountyGilmerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13123");
		return "GeorgiaCountyGilmerCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Tamarac-city", method = RequestMethod.GET)
	public String getFloridaCityTamaraccity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1270675");
		return "FloridaCityTamaraccity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Gordon-County", method = RequestMethod.GET)
	public String getGeorgiaCountyGordonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13129");
		return "GeorgiaCountyGordonCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Glynn-County", method = RequestMethod.GET)
	public String getGeorgiaCountyGlynnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13127");
		return "GeorgiaCountyGlynnCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/metros/Boston-Cambridge-Newton", method = RequestMethod.GET)
	public String getMassachusettsMetroBostonCambridgeNewton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14460");
		return "MassachusettsMetroBostonCambridgeNewton";
	}   
@RequestMapping(value = "/states/Colorado/cities/Pueblo-city", method = RequestMethod.GET)
	public String getColoradoCityPueblocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "862000");
		return "ColoradoCityPueblocity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Crawfordsville", method = RequestMethod.GET)
	public String getIndianaMicroCrawfordsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18820");
		return "IndianaMicroCrawfordsville";
	}   
@RequestMapping(value = "/states/Texas/cities/Dallas-city", method = RequestMethod.GET)
	public String getTexasCityDallascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4819000");
		return "TexasCityDallascity";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Reading", method = RequestMethod.GET)
	public String getPennsylvaniaMetroReading(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39740");
		return "PennsylvaniaMetroReading";
	}   
@RequestMapping(value = "/states/Florida/cities/Holiday", method = RequestMethod.GET)
	public String getFloridaCityHoliday(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1231075");
		return "FloridaCityHoliday";
	}   
@RequestMapping(value = "/states/Georgia/counties/Grady-County", method = RequestMethod.GET)
	public String getGeorgiaCountyGradyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13131");
		return "GeorgiaCountyGradyCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-Charles-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStCharlesParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22089");
		return "LouisianaCountyStCharlesParish";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Burlington-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityBurlingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3709060");
		return "North_CarolinaCityBurlingtoncity";
	}   
@RequestMapping(value = "/states/Louisiana/metros/New-OrleansMetairie", method = RequestMethod.GET)
	public String getLouisianaMetroNewOrleansMetairie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35380");
		return "LouisianaMetroNewOrleansMetairie";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Richland-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyRichlandParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22083");
		return "LouisianaCountyRichlandParish";
	}   
@RequestMapping(value = "/states/Illinois/cities/Decatur-city", method = RequestMethod.GET)
	public String getIllinoisCityDecaturcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1718823");
		return "IllinoisCityDecaturcity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Sabine-Parish", method = RequestMethod.GET)
	public String getLouisianaCountySabineParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22085");
		return "LouisianaCountySabineParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-Bernard-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStBernardParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22087");
		return "LouisianaCountyStBernardParish";
	}   
@RequestMapping(value = "/states/California/cities/Temple-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityTempleCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "678148");
		return "CaliforniaCityTempleCitycity";
	}   
@RequestMapping(value = "/states/California/cities/West-Sacramento-city", method = RequestMethod.GET)
	public String getCaliforniaCityWestSacramentocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684816");
		return "CaliforniaCityWestSacramentocity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Habersham-County", method = RequestMethod.GET)
	public String getGeorgiaCountyHabershamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13137");
		return "GeorgiaCountyHabershamCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Gwinnett-County", method = RequestMethod.GET)
	public String getGeorgiaCountyGwinnettCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13135");
		return "GeorgiaCountyGwinnettCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Hall-County", method = RequestMethod.GET)
	public String getGeorgiaCountyHallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13139");
		return "GeorgiaCountyHallCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Medford-city", method = RequestMethod.GET)
	public String getMassachusettsCityMedfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2539835");
		return "MassachusettsCityMedfordcity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Jefferson-City-city", method = RequestMethod.GET)
	public String getMissouriCityJeffersonCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2937000");
		return "MissouriCityJeffersonCitycity";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Codington-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyCodingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46029");
		return "South_DakotaCountyCodingtonCounty";
	}   
@RequestMapping(value = "/states/Iowa/cities/Des-Moines-city", method = RequestMethod.GET)
	public String getIowaCityDesMoinescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1921000");
		return "IowaCityDesMoinescity";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Beatrice", method = RequestMethod.GET)
	public String getNebraskaMicroBeatrice(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13100");
		return "NebraskaMicroBeatrice";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Lafayette-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyLafayetteParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22055");
		return "LouisianaCountyLafayetteParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Lafourche-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyLafourcheParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22057");
		return "LouisianaCountyLafourcheParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Warren-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34041");
		return "New_JerseyCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Fremont", method = RequestMethod.GET)
	public String getOhioMicroFremont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23380");
		return "OhioMicroFremont";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Jefferson-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyJeffersonParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22051");
		return "LouisianaCountyJeffersonParish";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Johnson-City", method = RequestMethod.GET)
	public String getTennesseeMetroJohnsonCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27740");
		return "TennesseeMetroJohnsonCity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Jefferson-Davis-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyJeffersonDavisParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22053");
		return "LouisianaCountyJeffersonDavisParish";
	}   
@RequestMapping(value = "/states/New-York/cities/Spring-Valley-village", method = RequestMethod.GET)
	public String getNew_YorkCitySpringValleyvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3670420");
		return "New_YorkCitySpringValleyvillage";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Beloit-city", method = RequestMethod.GET)
	public String getWisconsinCityBeloitcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5506500");
		return "WisconsinCityBeloitcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Effingham-County", method = RequestMethod.GET)
	public String getGeorgiaCountyEffinghamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13103");
		return "GeorgiaCountyEffinghamCounty";
	}   
@RequestMapping(value = "/states/California/micros/TruckeeGrass-Valley", method = RequestMethod.GET)
	public String getCaliforniaMicroTruckeeGrassValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46020");
		return "CaliforniaMicroTruckeeGrassValley";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Kearney-city", method = RequestMethod.GET)
	public String getNebraskaCityKearneycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3125055");
		return "NebraskaCityKearneycity";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities/Woonsocket-city", method = RequestMethod.GET)
	public String getRhode_IslandCityWoonsocketcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4480780");
		return "Rhode_IslandCityWoonsocketcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Emanuel-County", method = RequestMethod.GET)
	public String getGeorgiaCountyEmanuelCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13107");
		return "GeorgiaCountyEmanuelCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Philadelphia-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityPhiladelphiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4260000");
		return "PennsylvaniaCityPhiladelphiacity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Elbert-County", method = RequestMethod.GET)
	public String getGeorgiaCountyElbertCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13105");
		return "GeorgiaCountyElbertCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Fannin-County", method = RequestMethod.GET)
	public String getGeorgiaCountyFanninCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13111");
		return "GeorgiaCountyFanninCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Brown-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyBrownCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46013");
		return "South_DakotaCountyBrownCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Salem-County", method = RequestMethod.GET)
	public String getNew_JerseyCountySalemCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34033");
		return "New_JerseyCountySalemCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Morehouse-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyMorehouseParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22067");
		return "LouisianaCountyMorehouseParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Passaic-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyPassaicCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34031");
		return "New_JerseyCountyPassaicCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Bayou-Cane", method = RequestMethod.GET)
	public String getLouisianaCityBayouCane(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2205210");
		return "LouisianaCityBayouCane";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Natchitoches-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyNatchitochesParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22069");
		return "LouisianaCountyNatchitochesParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Union-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34039");
		return "New_JerseyCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Faribault-Northfield", method = RequestMethod.GET)
	public String getMinnesotaMicroFaribaultNorthfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22060");
		return "MinnesotaMicroFaribaultNorthfield";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Lincoln-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyLincolnParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22061");
		return "LouisianaCountyLincolnParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Sussex-County", method = RequestMethod.GET)
	public String getNew_JerseyCountySussexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34037");
		return "New_JerseyCountySussexCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Livingston-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyLivingstonParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22063");
		return "LouisianaCountyLivingstonParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Somerset-County", method = RequestMethod.GET)
	public String getNew_JerseyCountySomersetCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34035");
		return "New_JerseyCountySomersetCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/HoustonThe-WoodlandsSugar-Land", method = RequestMethod.GET)
	public String getTexasMetroHoustonTheWoodlandsSugarLand(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26420");
		return "TexasMetroHoustonTheWoodlandsSugarLand";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Brookings-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyBrookingsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46011");
		return "South_DakotaCountyBrookingsCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Floyd-County", method = RequestMethod.GET)
	public String getGeorgiaCountyFloydCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13115");
		return "GeorgiaCountyFloydCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Wabash", method = RequestMethod.GET)
	public String getIndianaMicroWabash(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47340");
		return "IndianaMicroWabash";
	}   
@RequestMapping(value = "/states/Georgia/counties/Fayette-County", method = RequestMethod.GET)
	public String getGeorgiaCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13113");
		return "GeorgiaCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Franklin-County", method = RequestMethod.GET)
	public String getGeorgiaCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13119");
		return "GeorgiaCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/California/cities/Temecula-city", method = RequestMethod.GET)
	public String getCaliforniaCityTemeculacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "678120");
		return "CaliforniaCityTemeculacity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Gary-city", method = RequestMethod.GET)
	public String getIndianaCityGarycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1827000");
		return "IndianaCityGarycity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Forsyth-County", method = RequestMethod.GET)
	public String getGeorgiaCountyForsythCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13117");
		return "GeorgiaCountyForsythCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Cambridge", method = RequestMethod.GET)
	public String getOhioMicroCambridge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15740");
		return "OhioMicroCambridge";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Jonesboro-city", method = RequestMethod.GET)
	public String getArkansasCityJonesborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "535710");
		return "ArkansasCityJonesborocity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/East-Baton-Rouge-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyEastBatonRougeParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22033");
		return "LouisianaCountyEastBatonRougeParish";
	}   
@RequestMapping(value = "/states/Oregon/micros/Roseburg", method = RequestMethod.GET)
	public String getOregonMicroRoseburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40700");
		return "OregonMicroRoseburg";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Maplewood-city", method = RequestMethod.GET)
	public String getMinnesotaCityMaplewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2740382");
		return "MinnesotaCityMaplewoodcity";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Mercer-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyMercerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34021");
		return "New_JerseyCountyMercerCounty";
	}   
@RequestMapping(value = "/states/Louisiana/micros/Morgan-City", method = RequestMethod.GET)
	public String getLouisianaMicroMorganCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34020");
		return "LouisianaMicroMorganCity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Milton-city", method = RequestMethod.GET)
	public String getGeorgiaCityMiltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1351670");
		return "GeorgiaCityMiltoncity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/East-Feliciana-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyEastFelicianaParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22037");
		return "LouisianaCountyEastFelicianaParish";
	}   
@RequestMapping(value = "/states/California/cities/North-Highlands", method = RequestMethod.GET)
	public String getCaliforniaCityNorthHighlands(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "651924");
		return "CaliforniaCityNorthHighlands";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Evangeline-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyEvangelineParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22039");
		return "LouisianaCountyEvangelineParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Ocean-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyOceanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34029");
		return "New_JerseyCountyOceanCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Hackensack-city", method = RequestMethod.GET)
	public String getNew_JerseyCityHackensackcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3428680");
		return "New_JerseyCityHackensackcity";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Morris-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyMorrisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34027");
		return "New_JerseyCountyMorrisCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Monmouth-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyMonmouthCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34025");
		return "New_JerseyCountyMonmouthCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/De-Soto-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyDeSotoParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22031");
		return "LouisianaCountyDeSotoParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Middlesex-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyMiddlesexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34023");
		return "New_JerseyCountyMiddlesexCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/Wichita-Falls", method = RequestMethod.GET)
	public String getTexasMetroWichitaFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48660");
		return "TexasMetroWichitaFalls";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Kenner-city", method = RequestMethod.GET)
	public String getLouisianaCityKennercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2239475");
		return "LouisianaCityKennercity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Grove-City-city", method = RequestMethod.GET)
	public String getOhioCityGroveCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3932592");
		return "OhioCityGroveCitycity";
	}   
@RequestMapping(value = "/states/Illinois/cities/East-Moline-city", method = RequestMethod.GET)
	public String getIllinoisCityEastMolinecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1722073");
		return "IllinoisCityEastMolinecity";
	}   
@RequestMapping(value = "/states/Texas/micros/Borger", method = RequestMethod.GET)
	public String getTexasMicroBorger(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14420");
		return "TexasMicroBorger";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Sapulpa-city", method = RequestMethod.GET)
	public String getOklahomaCitySapulpacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4065400");
		return "OklahomaCitySapulpacity";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Cumberland-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyCumberlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34011");
		return "New_JerseyCountyCumberlandCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Pine-Bluff-city", method = RequestMethod.GET)
	public String getArkansasCityPineBluffcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "555310");
		return "ArkansasCityPineBluffcity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Iberia-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyIberiaParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22045");
		return "LouisianaCountyIberiaParish";
	}   
@RequestMapping(value = "/states/Illinois/cities/Alton-city", method = RequestMethod.GET)
	public String getIllinoisCityAltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1701114");
		return "IllinoisCityAltoncity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Iberville-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyIbervilleParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22047");
		return "LouisianaCountyIbervilleParish";
	}   
@RequestMapping(value = "/states/Arizona/cities/Green-Valley", method = RequestMethod.GET)
	public String getArizonaCityGreenValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "429710");
		return "ArizonaCityGreenValley";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Hunterdon-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyHunterdonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34019");
		return "New_JerseyCountyHunterdonCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Hudson-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyHudsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34017");
		return "New_JerseyCountyHudsonCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Gloucester-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyGloucesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34015");
		return "New_JerseyCountyGloucesterCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Franklin-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyFranklinParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22041");
		return "LouisianaCountyFranklinParish";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Essex-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyEssexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34013");
		return "New_JerseyCountyEssexCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Grant-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyGrantParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22043");
		return "LouisianaCountyGrantParish";
	}   
@RequestMapping(value = "/states/Texas/micros/Raymondville", method = RequestMethod.GET)
	public String getTexasMicroRaymondville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39700");
		return "TexasMicroRaymondville";
	}   
@RequestMapping(value = "/states/Texas/cities/Pasadena-city", method = RequestMethod.GET)
	public String getTexasCityPasadenacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4856000");
		return "TexasCityPasadenacity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Calcasieu-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyCalcasieuParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22019");
		return "LouisianaCountyCalcasieuParish";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Wake-Forest-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityWakeForesttown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3770540");
		return "North_CarolinaCityWakeForesttown";
	}   
@RequestMapping(value = "/states/Louisiana/micros/Opelousas", method = RequestMethod.GET)
	public String getLouisianaMicroOpelousas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36660");
		return "LouisianaMicroOpelousas";
	}   
@RequestMapping(value = "/states/Colorado/cities/Columbine", method = RequestMethod.GET)
	public String getColoradoCityColumbine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "816110");
		return "ColoradoCityColumbine";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Beauregard-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyBeauregardParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22011");
		return "LouisianaCountyBeauregardParish";
	}   
@RequestMapping(value = "/states/Georgia/micros/Jesup", method = RequestMethod.GET)
	public String getGeorgiaMicroJesup(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27700");
		return "GeorgiaMicroJesup";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Lumberton-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityLumbertoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3739700");
		return "North_CarolinaCityLumbertoncity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Mequon-city", method = RequestMethod.GET)
	public String getWisconsinCityMequoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5551150");
		return "WisconsinCityMequoncity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/South-Milwaukee-city", method = RequestMethod.GET)
	public String getWisconsinCitySouthMilwaukeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5575125");
		return "WisconsinCitySouthMilwaukeecity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Bossier-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyBossierParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22015");
		return "LouisianaCountyBossierParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Caddo-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyCaddoParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22017");
		return "LouisianaCountyCaddoParish";
	}   
@RequestMapping(value = "/states/New-York/cities/East-Patchogue", method = RequestMethod.GET)
	public String getNew_YorkCityEastPatchogue(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3622733");
		return "New_YorkCityEastPatchogue";
	}   
@RequestMapping(value = "/states/Virginia/cities/Short-Pump", method = RequestMethod.GET)
	public String getVirginiaCityShortPump(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5172272");
		return "VirginiaCityShortPump";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Camden-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyCamdenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34007");
		return "New_JerseyCountyCamdenCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Burlington-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyBurlingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34005");
		return "New_JerseyCountyBurlingtonCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Bergen-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyBergenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34003");
		return "New_JerseyCountyBergenCounty";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Fremont", method = RequestMethod.GET)
	public String getNebraskaMicroFremont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23340");
		return "NebraskaMicroFremont";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Atlantic-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyAtlanticCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34001");
		return "New_JerseyCountyAtlanticCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Clearfield-city", method = RequestMethod.GET)
	public String getUtahCityClearfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4913850");
		return "UtahCityClearfieldcity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Goshen-city", method = RequestMethod.GET)
	public String getIndianaCityGoshencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1828386");
		return "IndianaCityGoshencity";
	}   
@RequestMapping(value = "/states/New-Jersey/counties/Cape-May-County", method = RequestMethod.GET)
	public String getNew_JerseyCountyCapeMayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34009");
		return "New_JerseyCountyCapeMayCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Roseville-city", method = RequestMethod.GET)
	public String getMichiganCityRosevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2669800");
		return "MichiganCityRosevillecity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Pontiac-city", method = RequestMethod.GET)
	public String getMichiganCityPontiaccity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2665440");
		return "MichiganCityPontiaccity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Adams-County", method = RequestMethod.GET)
	public String getColoradoCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8001");
		return "ColoradoCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Dodge-City-city", method = RequestMethod.GET)
	public String getKansasCityDodgeCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2018250");
		return "KansasCityDodgeCitycity";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Philadelphia-Camden-Wilmington", method = RequestMethod.GET)
	public String getPennsylvaniaMetroPhiladelphiaCamdenWilmington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37980");
		return "PennsylvaniaMetroPhiladelphiaCamdenWilmington";
	}   
@RequestMapping(value = "/states/California/metros/Visalia-Porterville", method = RequestMethod.GET)
	public String getCaliforniaMetroVisaliaPorterville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47300");
		return "CaliforniaMetroVisaliaPorterville";
	}   
@RequestMapping(value = "/states/Colorado/counties/Arapahoe-County", method = RequestMethod.GET)
	public String getColoradoCountyArapahoeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8005");
		return "ColoradoCountyArapahoeCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/Concordia-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyConcordiaParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22029");
		return "LouisianaCountyConcordiaParish";
	}   
@RequestMapping(value = "/states/North-Dakota/metros/Fargo", method = RequestMethod.GET)
	public String getNorth_DakotaMetroFargo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22020");
		return "North_DakotaMetroFargo";
	}   
@RequestMapping(value = "/states/Florida/cities/Spring-Hill", method = RequestMethod.GET)
	public String getFloridaCitySpringHill(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1268350");
		return "FloridaCitySpringHill";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Williamsport-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityWilliamsportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4285312");
		return "PennsylvaniaCityWilliamsportcity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Boulder-County", method = RequestMethod.GET)
	public String getColoradoCountyBoulderCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8013");
		return "ColoradoCountyBoulderCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Summit-city", method = RequestMethod.GET)
	public String getNew_JerseyCitySummitcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3471430");
		return "New_JerseyCitySummitcity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Broomfield-County", method = RequestMethod.GET)
	public String getColoradoCountyBroomfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8014");
		return "ColoradoCountyBroomfieldCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Transylvania-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyTransylvaniaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37175");
		return "North_CarolinaCountyTransylvaniaCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Rockville-Centre-village", method = RequestMethod.GET)
	public String getNew_YorkCityRockvilleCentrevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3663264");
		return "New_YorkCityRockvilleCentrevillage";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Union-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37179");
		return "North_CarolinaCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Fountain-Hills-town", method = RequestMethod.GET)
	public String getArizonaCityFountainHillstown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "425300");
		return "ArizonaCityFountainHillstown";
	}   
@RequestMapping(value = "/states/Florida/cities/Sebastian-city", method = RequestMethod.GET)
	public String getFloridaCitySebastiancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1264825");
		return "FloridaCitySebastiancity";
	}   
@RequestMapping(value = "/states/California/cities/North-Tustin", method = RequestMethod.GET)
	public String getCaliforniaCityNorthTustin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "652379");
		return "CaliforniaCityNorthTustin";
	}   
@RequestMapping(value = "/states/Iowa/cities/Dubuque-city", method = RequestMethod.GET)
	public String getIowaCityDubuquecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1922395");
		return "IowaCityDubuquecity";
	}   
@RequestMapping(value = "/states/South-Dakota/cities/Aberdeen-city", method = RequestMethod.GET)
	public String getSouth_DakotaCityAberdeencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4600100");
		return "South_DakotaCityAberdeencity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Surry-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountySurryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37171");
		return "North_CarolinaCountySurryCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Peekskill-city", method = RequestMethod.GET)
	public String getNew_YorkCityPeekskillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3656979");
		return "New_YorkCityPeekskillcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Lancaster", method = RequestMethod.GET)
	public String getPennsylvaniaMetroLancaster(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29540");
		return "PennsylvaniaMetroLancaster";
	}   
@RequestMapping(value = "/states/Michigan/cities/East-Lansing-city", method = RequestMethod.GET)
	public String getMichiganCityEastLansingcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2624120");
		return "MichiganCityEastLansingcity";
	}   
@RequestMapping(value = "/states/Maryland/metros/Hagerstown-Martinsburg", method = RequestMethod.GET)
	public String getMarylandMetroHagerstownMartinsburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25180");
		return "MarylandMetroHagerstownMartinsburg";
	}   
@RequestMapping(value = "/states/California/metros/Napa", method = RequestMethod.GET)
	public String getCaliforniaMetroNapa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34900");
		return "CaliforniaMetroNapa";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Rutherford-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyRutherfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37161");
		return "North_CarolinaCountyRutherfordCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/South-Laurel", method = RequestMethod.GET)
	public String getMarylandCitySouthLaurel(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2473650");
		return "MarylandCitySouthLaurel";
	}   
@RequestMapping(value = "/states/Florida/cities/Leesburg-city", method = RequestMethod.GET)
	public String getFloridaCityLeesburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239875");
		return "FloridaCityLeesburgcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Sampson-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountySampsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37163");
		return "North_CarolinaCountySampsonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Scotland-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyScotlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37165");
		return "North_CarolinaCountyScotlandCounty";
	}   
@RequestMapping(value = "/states/Colorado/counties/Delta-County", method = RequestMethod.GET)
	public String getColoradoCountyDeltaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8029");
		return "ColoradoCountyDeltaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Bartlesville-city", method = RequestMethod.GET)
	public String getOklahomaCityBartlesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4004450");
		return "OklahomaCityBartlesvillecity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Stanly-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyStanlyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37167");
		return "North_CarolinaCountyStanlyCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Cape-Girardeau-city", method = RequestMethod.GET)
	public String getMissouriCityCapeGirardeaucity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2911242");
		return "MissouriCityCapeGirardeaucity";
	}   
@RequestMapping(value = "/states/Indiana/cities/East-Chicago-city", method = RequestMethod.GET)
	public String getIndianaCityEastChicagocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1819486");
		return "IndianaCityEastChicagocity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Caledonia-village", method = RequestMethod.GET)
	public String getWisconsinCityCaledoniavillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5511950");
		return "WisconsinCityCaledoniavillage";
	}   
@RequestMapping(value = "/states/Minnesota/metros/MankatoNorth-Mankato", method = RequestMethod.GET)
	public String getMinnesotaMetroMankatoNorthMankato(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31860");
		return "MinnesotaMetroMankatoNorthMankato";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Stokes-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyStokesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37169");
		return "North_CarolinaCountyStokesCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Chandler-city", method = RequestMethod.GET)
	public String getArizonaCityChandlercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "412000");
		return "ArizonaCityChandlercity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/West-Mifflin-borough", method = RequestMethod.GET)
	public String getPennsylvaniaCityWestMifflinborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4283512");
		return "PennsylvaniaCityWestMifflinborough";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Altoona-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityAltoonacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4202184");
		return "PennsylvaniaCityAltoonacity";
	}   
@RequestMapping(value = "/states/Michigan/micros/Alma", method = RequestMethod.GET)
	public String getMichiganMicroAlma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10940");
		return "MichiganMicroAlma";
	}   
@RequestMapping(value = "/states/Colorado/counties/Douglas-County", method = RequestMethod.GET)
	public String getColoradoCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8035");
		return "ColoradoCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Randolph-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyRandolphCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37151");
		return "North_CarolinaCountyRandolphCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Hamilton-city", method = RequestMethod.GET)
	public String getOhioCityHamiltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3933012");
		return "OhioCityHamiltoncity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Richmond-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyRichmondCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37153");
		return "North_CarolinaCountyRichmondCounty";
	}   
@RequestMapping(value = "/states/Colorado/counties/Elbert-County", method = RequestMethod.GET)
	public String getColoradoCountyElbertCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8039");
		return "ColoradoCountyElbertCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Lumpkin-County", method = RequestMethod.GET)
	public String getGeorgiaCountyLumpkinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13187");
		return "GeorgiaCountyLumpkinCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Auburn-city", method = RequestMethod.GET)
	public String getWashingtonCityAuburncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5303180");
		return "WashingtonCityAuburncity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Robeson-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyRobesonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37155");
		return "North_CarolinaCountyRobesonCounty";
	}   
@RequestMapping(value = "/states/Colorado/counties/Eagle-County", method = RequestMethod.GET)
	public String getColoradoCountyEagleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8037");
		return "ColoradoCountyEagleCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Lowndes-County", method = RequestMethod.GET)
	public String getGeorgiaCountyLowndesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13185");
		return "GeorgiaCountyLowndesCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Harrisburg-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityHarrisburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4232800");
		return "PennsylvaniaCityHarrisburgcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Rockingham-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyRockinghamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37157");
		return "North_CarolinaCountyRockinghamCounty";
	}   
@RequestMapping(value = "/states/Iowa/micros/Clinton", method = RequestMethod.GET)
	public String getIowaMicroClinton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17540");
		return "IowaMicroClinton";
	}   
@RequestMapping(value = "/states/Colorado/counties/Denver-County", method = RequestMethod.GET)
	public String getColoradoCountyDenverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8031");
		return "ColoradoCountyDenverCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/North-Little-Rock-city", method = RequestMethod.GET)
	public String getArkansasCityNorthLittleRockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "550450");
		return "ArkansasCityNorthLittleRockcity";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Beaver-Dam", method = RequestMethod.GET)
	public String getWisconsinMicroBeaverDam(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13180");
		return "WisconsinMicroBeaverDam";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Statesville-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityStatesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3764740");
		return "North_CarolinaCityStatesvillecity";
	}   
@RequestMapping(value = "/states/California/cities/Stockton-city", method = RequestMethod.GET)
	public String getCaliforniaCityStocktoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "675000");
		return "CaliforniaCityStocktoncity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Rowan-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyRowanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37159");
		return "North_CarolinaCountyRowanCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/McDuffie-County", method = RequestMethod.GET)
	public String getGeorgiaCountyMcDuffieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13189");
		return "GeorgiaCountyMcDuffieCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Oro-Valley-town", method = RequestMethod.GET)
	public String getArizonaCityOroValleytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "451600");
		return "ArizonaCityOroValleytown";
	}   
@RequestMapping(value = "/states/Virginia/cities/Annandale", method = RequestMethod.GET)
	public String getVirginiaCityAnnandale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5101912");
		return "VirginiaCityAnnandale";
	}   
@RequestMapping(value = "/states/Wyoming/metros/Casper", method = RequestMethod.GET)
	public String getWyomingMetroCasper(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16220");
		return "WyomingMetroCasper";
	}   
@RequestMapping(value = "/states/Georgia/counties/Madison-County", method = RequestMethod.GET)
	public String getGeorgiaCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13195");
		return "GeorgiaCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Arkansas/metros/Fort-Smith", method = RequestMethod.GET)
	public String getArkansasMetroFortSmith(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22900");
		return "ArkansasMetroFortSmith";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Paducah", method = RequestMethod.GET)
	public String getKentuckyMicroPaducah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37140");
		return "KentuckyMicroPaducah";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Pender-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyPenderCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37141");
		return "North_CarolinaCountyPenderCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Birmingham-city", method = RequestMethod.GET)
	public String getAlabamaCityBirminghamcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "107000");
		return "AlabamaCityBirminghamcity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Garfield-County", method = RequestMethod.GET)
	public String getColoradoCountyGarfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8045");
		return "ColoradoCountyGarfieldCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Meriwether-County", method = RequestMethod.GET)
	public String getGeorgiaCountyMeriwetherCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13199");
		return "GeorgiaCountyMeriwetherCounty";
	}   
@RequestMapping(value = "/states/Florida/metros/CrestviewFort-Walton-BeachDestin", method = RequestMethod.GET)
	public String getFloridaMetroCrestviewFortWaltonBeachDestin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18880");
		return "FloridaMetroCrestviewFortWaltonBeachDestin";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Person-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyPersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37145");
		return "North_CarolinaCountyPersonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Whittier-city", method = RequestMethod.GET)
	public String getCaliforniaCityWhittiercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "685292");
		return "CaliforniaCityWhittiercity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Fremont-County", method = RequestMethod.GET)
	public String getColoradoCountyFremontCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8043");
		return "ColoradoCountyFremontCounty";
	}   
@RequestMapping(value = "/states/Colorado/counties/El-Paso-County", method = RequestMethod.GET)
	public String getColoradoCountyElPasoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8041");
		return "ColoradoCountyElPasoCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Tarpon-Springs-city", method = RequestMethod.GET)
	public String getFloridaCityTarponSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271150");
		return "FloridaCityTarponSpringscity";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Trumbull", method = RequestMethod.GET)
	public String getConnecticutCityTrumbull(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "977270");
		return "ConnecticutCityTrumbull";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Pitt-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyPittCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37147");
		return "North_CarolinaCountyPittCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Minnehaha-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyMinnehahaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46099");
		return "South_DakotaCountyMinnehahaCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Polk-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37149");
		return "North_CarolinaCountyPolkCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Fair-Lawn-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityFairLawnborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3422470");
		return "New_JerseyCityFairLawnborough";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Meade-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyMeadeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46093");
		return "South_DakotaCountyMeadeCounty";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Russellville", method = RequestMethod.GET)
	public String getArkansasMicroRussellville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40780");
		return "ArkansasMicroRussellville";
	}   
@RequestMapping(value = "/states/New-York/micros/Plattsburgh", method = RequestMethod.GET)
	public String getNew_YorkMicroPlattsburgh(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38460");
		return "New_YorkMicroPlattsburgh";
	}   
@RequestMapping(value = "/states/Florida/cities/Coconut-Creek-city", method = RequestMethod.GET)
	public String getFloridaCityCoconutCreekcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1213275");
		return "FloridaCityCoconutCreekcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Northampton-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyNorthamptonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37131");
		return "North_CarolinaCountyNorthamptonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Onslow-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyOnslowCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37133");
		return "North_CarolinaCountyOnslowCounty";
	}   
@RequestMapping(value = "/states/Colorado/counties/Jefferson-County", method = RequestMethod.GET)
	public String getColoradoCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8059");
		return "ColoradoCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Orange-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyOrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37135");
		return "North_CarolinaCountyOrangeCounty";
	}   
@RequestMapping(value = "/states/California/cities/Yucaipa-city", method = RequestMethod.GET)
	public String getCaliforniaCityYucaipacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "687042");
		return "CaliforniaCityYucaipacity";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Lawrence-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46081");
		return "South_DakotaCountyLawrenceCounty";
	}   
@RequestMapping(value = "/states/California/cities/Orcutt", method = RequestMethod.GET)
	public String getCaliforniaCityOrcutt(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "654120");
		return "CaliforniaCityOrcutt";
	}   
@RequestMapping(value = "/states/New-York/cities/Bay-Shore", method = RequestMethod.GET)
	public String getNew_YorkCityBayShore(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3604935");
		return "New_YorkCityBayShore";
	}   
@RequestMapping(value = "/states/California/cities/Petaluma-city", method = RequestMethod.GET)
	public String getCaliforniaCityPetalumacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "656784");
		return "CaliforniaCityPetalumacity";
	}   
@RequestMapping(value = "/states/Ohio/cities/North-Royalton-city", method = RequestMethod.GET)
	public String getOhioCityNorthRoyaltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3957008");
		return "OhioCityNorthRoyaltoncity";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Meridian-city", method = RequestMethod.GET)
	public String getMississippiCityMeridiancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2846640");
		return "MississippiCityMeridiancity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Jones-County", method = RequestMethod.GET)
	public String getGeorgiaCountyJonesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13169");
		return "GeorgiaCountyJonesCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Pasquotank-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyPasquotankCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37139");
		return "North_CarolinaCountyPasquotankCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Lincoln-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46083");
		return "South_DakotaCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/California/micros/Red-Bluff", method = RequestMethod.GET)
	public String getCaliforniaMicroRedBluff(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39780");
		return "CaliforniaMicroRedBluff";
	}   
@RequestMapping(value = "/states/Colorado/counties/Larimer-County", method = RequestMethod.GET)
	public String getColoradoCountyLarimerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8069");
		return "ColoradoCountyLarimerCounty";
	}   
@RequestMapping(value = "/states/Colorado/counties/La-Plata-County", method = RequestMethod.GET)
	public String getColoradoCountyLaPlataCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8067");
		return "ColoradoCountyLaPlataCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Lee-County", method = RequestMethod.GET)
	public String getGeorgiaCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13177");
		return "GeorgiaCountyLeeCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Montgomery-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37123");
		return "North_CarolinaCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Laurens-County", method = RequestMethod.GET)
	public String getGeorgiaCountyLaurensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13175");
		return "GeorgiaCountyLaurensCounty";
	}   
@RequestMapping(value = "/states/California/micros/Crescent-City", method = RequestMethod.GET)
	public String getCaliforniaMicroCrescentCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18860");
		return "CaliforniaMicroCrescentCity";
	}   
@RequestMapping(value = "/states/California/cities/Yucca-Valley-town", method = RequestMethod.GET)
	public String getCaliforniaCityYuccaValleytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "687056");
		return "CaliforniaCityYuccaValleytown";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Allentown-Bethlehem-Easton", method = RequestMethod.GET)
	public String getPennsylvaniaMetroAllentownBethlehemEaston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10900");
		return "PennsylvaniaMetroAllentownBethlehemEaston";
	}   
@RequestMapping(value = "/states/Georgia/cities/Canton-city", method = RequestMethod.GET)
	public String getGeorgiaCityCantoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1312988");
		return "GeorgiaCityCantoncity";
	}   
@RequestMapping(value = "/states/Missouri/counties/St-Louis-city", method = RequestMethod.GET)
	public String getMissouriCountyStLouiscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29510");
		return "MissouriCountyStLouiscity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Norwood", method = RequestMethod.GET)
	public String getMassachusettsCityNorwood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2550285");
		return "MassachusettsCityNorwood";
	}   
@RequestMapping(value = "/states/North-Dakota/cities/Minot-city", method = RequestMethod.GET)
	public String getNorth_DakotaCityMinotcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3853380");
		return "North_DakotaCityMinotcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Moore-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyMooreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37125");
		return "North_CarolinaCountyMooreCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Nash-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyNashCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37127");
		return "North_CarolinaCountyNashCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Westfield-city", method = RequestMethod.GET)
	public String getIndianaCityWestfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1882700");
		return "IndianaCityWestfieldcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Liberty-County", method = RequestMethod.GET)
	public String getGeorgiaCountyLibertyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13179");
		return "GeorgiaCountyLibertyCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Winona", method = RequestMethod.GET)
	public String getMinnesotaMicroWinona(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49100");
		return "MinnesotaMicroWinona";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/New-Hanover-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyNewHanoverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37129");
		return "North_CarolinaCountyNewHanoverCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Manitowoc", method = RequestMethod.GET)
	public String getWisconsinMicroManitowoc(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31820");
		return "WisconsinMicroManitowoc";
	}   
@RequestMapping(value = "/states/Texas/metros/BeaumontPort-Arthur", method = RequestMethod.GET)
	public String getTexasMetroBeaumontPortArthur(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13140");
		return "TexasMetroBeaumontPortArthur";
	}   
@RequestMapping(value = "/states/Colorado/counties/Mesa-County", method = RequestMethod.GET)
	public String getColoradoCountyMesaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8077");
		return "ColoradoCountyMesaCounty";
	}   
@RequestMapping(value = "/states/Florida/micros/Clewiston", method = RequestMethod.GET)
	public String getFloridaMicroClewiston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17500");
		return "FloridaMicroClewiston";
	}   
@RequestMapping(value = "/states/Georgia/counties/Haralson-County", method = RequestMethod.GET)
	public String getGeorgiaCountyHaralsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13143");
		return "GeorgiaCountyHaralsonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/McDowell-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyMcDowellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37111");
		return "North_CarolinaCountyMcDowellCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Macon-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyMaconCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37113");
		return "North_CarolinaCountyMaconCounty";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-Martin-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStMartinParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22099");
		return "LouisianaCountyStMartinParish";
	}   
@RequestMapping(value = "/states/Nevada/cities/Henderson-city", method = RequestMethod.GET)
	public String getNevadaCityHendersoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3231900");
		return "NevadaCityHendersoncity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Iselin", method = RequestMethod.GET)
	public String getNew_JerseyCityIselin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3434470");
		return "New_JerseyCityIselin";
	}   
@RequestMapping(value = "/states/Colorado/counties/Logan-County", method = RequestMethod.GET)
	public String getColoradoCountyLoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8075");
		return "ColoradoCountyLoganCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Cliffside-Park-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityCliffsideParkborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3413570");
		return "New_JerseyCityCliffsideParkborough";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Johnstown", method = RequestMethod.GET)
	public String getPennsylvaniaMetroJohnstown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27780");
		return "PennsylvaniaMetroJohnstown";
	}   
@RequestMapping(value = "/states/Utah/cities/Syracuse-city", method = RequestMethod.GET)
	public String getUtahCitySyracusecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4974810");
		return "UtahCitySyracusecity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-James-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStJamesParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22093");
		return "LouisianaCountyStJamesParish";
	}   
@RequestMapping(value = "/states/Texas/cities/Beaumont-city", method = RequestMethod.GET)
	public String getTexasCityBeaumontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4807000");
		return "TexasCityBeaumontcity";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-John-the-Baptist-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStJohntheBaptistParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22095");
		return "LouisianaCountyStJohntheBaptistParish";
	}   
@RequestMapping(value = "/states/Louisiana/counties/St-Landry-Parish", method = RequestMethod.GET)
	public String getLouisianaCountyStLandryParish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22097");
		return "LouisianaCountyStLandryParish";
	}   
@RequestMapping(value = "/states/California/cities/Ashland", method = RequestMethod.GET)
	public String getCaliforniaCityAshland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "602980");
		return "CaliforniaCityAshland";
	}   
@RequestMapping(value = "/states/Georgia/counties/Hart-County", method = RequestMethod.GET)
	public String getGeorgiaCountyHartCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13147");
		return "GeorgiaCountyHartCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Madison-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37115");
		return "North_CarolinaCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Harris-County", method = RequestMethod.GET)
	public String getGeorgiaCountyHarrisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13145");
		return "GeorgiaCountyHarrisCounty";
	}   
@RequestMapping(value = "/states/Iowa/cities/Fort-Dodge-city", method = RequestMethod.GET)
	public String getIowaCityFortDodgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1928515");
		return "IowaCityFortDodgecity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Martin-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyMartinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37117");
		return "North_CarolinaCountyMartinCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Mecklenburg-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyMecklenburgCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37119");
		return "North_CarolinaCountyMecklenburgCounty";
	}   
@RequestMapping(value = "/states/Arizona/metros/Tucson", method = RequestMethod.GET)
	public String getArizonaMetroTucson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46060");
		return "ArizonaMetroTucson";
	}   
@RequestMapping(value = "/states/Georgia/counties/Henry-County", method = RequestMethod.GET)
	public String getGeorgiaCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13151");
		return "GeorgiaCountyHenryCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Chattanooga-city", method = RequestMethod.GET)
	public String getTennesseeCityChattanoogacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4714000");
		return "TennesseeCityChattanoogacity";
	}   
@RequestMapping(value = "/states/California/metros/OxnardThousand-OaksVentura", method = RequestMethod.GET)
	public String getCaliforniaMetroOxnardThousandOaksVentura(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37100");
		return "CaliforniaMetroOxnardThousandOaksVentura";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Johnston-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyJohnstonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37101");
		return "North_CarolinaCountyJohnstonCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Houston-County", method = RequestMethod.GET)
	public String getGeorgiaCountyHoustonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13153");
		return "GeorgiaCountyHoustonCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/San-Angelo-city", method = RequestMethod.GET)
	public String getTexasCitySanAngelocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4864472");
		return "TexasCitySanAngelocity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Montezuma-County", method = RequestMethod.GET)
	public String getColoradoCountyMontezumaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8083");
		return "ColoradoCountyMontezumaCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/West-Hartford", method = RequestMethod.GET)
	public String getConnecticutCityWestHartford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "982660");
		return "ConnecticutCityWestHartford";
	}   
@RequestMapping(value = "/states/Colorado/counties/Morgan-County", method = RequestMethod.GET)
	public String getColoradoCountyMorganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8087");
		return "ColoradoCountyMorganCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Berwyn-city", method = RequestMethod.GET)
	public String getIllinoisCityBerwyncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1705573");
		return "IllinoisCityBerwyncity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Montrose-County", method = RequestMethod.GET)
	public String getColoradoCountyMontroseCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8085");
		return "ColoradoCountyMontroseCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Waterbury-city", method = RequestMethod.GET)
	public String getConnecticutCityWaterburycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "980000");
		return "ConnecticutCityWaterburycity";
	}   
@RequestMapping(value = "/states/New-York/micros/Hudson", method = RequestMethod.GET)
	public String getNew_YorkMicroHudson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26460");
		return "New_YorkMicroHudson";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Wellesley", method = RequestMethod.GET)
	public String getMassachusettsCityWellesley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2574210");
		return "MassachusettsCityWellesley";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities/Newport-city", method = RequestMethod.GET)
	public String getRhode_IslandCityNewportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4449960");
		return "Rhode_IslandCityNewportcity";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Lee-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37105");
		return "North_CarolinaCountyLeeCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Jackson-County", method = RequestMethod.GET)
	public String getGeorgiaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13157");
		return "GeorgiaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Lenoir-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyLenoirCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37107");
		return "North_CarolinaCountyLenoirCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/counties/Lincoln-County", method = RequestMethod.GET)
	public String getNorth_CarolinaCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37109");
		return "North_CarolinaCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/Waco", method = RequestMethod.GET)
	public String getTexasMetroWaco(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47380");
		return "TexasMetroWaco";
	}   
@RequestMapping(value = "/states/Michigan/cities/Dearborn-Heights-city", method = RequestMethod.GET)
	public String getMichiganCityDearbornHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2621020");
		return "MichiganCityDearbornHeightscity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Sterling", method = RequestMethod.GET)
	public String getVirginiaCitySterling(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5175376");
		return "VirginiaCitySterling";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/West-Allis-city", method = RequestMethod.GET)
	public String getWisconsinCityWestAlliscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5585300");
		return "WisconsinCityWestAlliscity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Randolph-County", method = RequestMethod.GET)
	public String getIndianaCountyRandolphCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18135");
		return "IndianaCountyRandolphCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Jackson-County", method = RequestMethod.GET)
	public String getOklahomaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40065");
		return "OklahomaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Thornton-city", method = RequestMethod.GET)
	public String getColoradoCityThorntoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "877290");
		return "ColoradoCityThorntoncity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Fort-Washington", method = RequestMethod.GET)
	public String getMarylandCityFortWashington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2429525");
		return "MarylandCityFortWashington";
	}   
@RequestMapping(value = "/states/Ohio/counties/Holmes-County", method = RequestMethod.GET)
	public String getOhioCountyHolmesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39075");
		return "OhioCountyHolmesCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Ripley-County", method = RequestMethod.GET)
	public String getIndianaCountyRipleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18137");
		return "IndianaCountyRipleyCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Huron-County", method = RequestMethod.GET)
	public String getOhioCountyHuronCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39077");
		return "OhioCountyHuronCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Jackson-County", method = RequestMethod.GET)
	public String getOhioCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39079");
		return "OhioCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Marquette-city", method = RequestMethod.GET)
	public String getMichiganCityMarquettecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2651900");
		return "MichiganCityMarquettecity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Putnam-County", method = RequestMethod.GET)
	public String getIndianaCountyPutnamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18133");
		return "IndianaCountyPutnamCounty";
	}   
@RequestMapping(value = "/states/Indiana/metros/Evansville", method = RequestMethod.GET)
	public String getIndianaMetroEvansville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21780");
		return "IndianaMetroEvansville";
	}   
@RequestMapping(value = "/states/Virginia/metros/Staunton-Waynesboro", method = RequestMethod.GET)
	public String getVirginiaMetroStauntonWaynesboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44420");
		return "VirginiaMetroStauntonWaynesboro";
	}   
@RequestMapping(value = "/states/California/cities/Fremont-city", method = RequestMethod.GET)
	public String getCaliforniaCityFremontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "626000");
		return "CaliforniaCityFremontcity";
	}   
@RequestMapping(value = "/states/Rhode-Island/cities/Providence-city", method = RequestMethod.GET)
	public String getRhode_IslandCityProvidencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4459000");
		return "Rhode_IslandCityProvidencecity";
	}   
@RequestMapping(value = "/states/Alabama/metros/Decatur", method = RequestMethod.GET)
	public String getAlabamaMetroDecatur(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19460");
		return "AlabamaMetroDecatur";
	}   
@RequestMapping(value = "/states/Ohio/counties/Highland-County", method = RequestMethod.GET)
	public String getOhioCountyHighlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39071");
		return "OhioCountyHighlandCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Boynton-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityBoyntonBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1207875");
		return "FloridaCityBoyntonBeachcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Hocking-County", method = RequestMethod.GET)
	public String getOhioCountyHockingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39073");
		return "OhioCountyHockingCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Channelview", method = RequestMethod.GET)
	public String getTexasCityChannelview(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4814236");
		return "TexasCityChannelview";
	}   
@RequestMapping(value = "/states/Minnesota/counties/McLeod-County", method = RequestMethod.GET)
	public String getMinnesotaCountyMcLeodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27085");
		return "MinnesotaCountyMcLeodCounty";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Lincoln-County", method = RequestMethod.GET)
	public String getNebraskaCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31111");
		return "NebraskaCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/California/cities/Imperial-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCityImperialBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "636294");
		return "CaliforniaCityImperialBeachcity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Lyon-County", method = RequestMethod.GET)
	public String getMinnesotaCountyLyonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27083");
		return "MinnesotaCountyLyonCounty";
	}   
@RequestMapping(value = "/states/Alabama/metros/Anniston-Oxford-Jacksonville", method = RequestMethod.GET)
	public String getAlabamaMetroAnnistonOxfordJacksonville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11500");
		return "AlabamaMetroAnnistonOxfordJacksonville";
	}   
@RequestMapping(value = "/states/Virginia/metros/Richmond", method = RequestMethod.GET)
	public String getVirginiaMetroRichmond(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40060");
		return "VirginiaMetroRichmond";
	}   
@RequestMapping(value = "/states/Louisiana/cities/New-Iberia-city", method = RequestMethod.GET)
	public String getLouisianaCityNewIberiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2254035");
		return "LouisianaCityNewIberiacity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Madison-County", method = RequestMethod.GET)
	public String getNebraskaCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31119");
		return "NebraskaCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Hardin-County", method = RequestMethod.GET)
	public String getOhioCountyHardinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39065");
		return "OhioCountyHardinCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Spencer-County", method = RequestMethod.GET)
	public String getIndianaCountySpencerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18147");
		return "IndianaCountySpencerCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Canton-city", method = RequestMethod.GET)
	public String getOhioCityCantoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3912000");
		return "OhioCityCantoncity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Starke-County", method = RequestMethod.GET)
	public String getIndianaCountyStarkeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18149");
		return "IndianaCountyStarkeCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Grady-County", method = RequestMethod.GET)
	public String getOklahomaCountyGradyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40051");
		return "OklahomaCountyGradyCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Henry-County", method = RequestMethod.GET)
	public String getOhioCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39069");
		return "OhioCountyHenryCounty";
	}   
@RequestMapping(value = "/states/Iowa/cities/Sioux-City-city", method = RequestMethod.GET)
	public String getIowaCitySiouxCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1973335");
		return "IowaCitySiouxCitycity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Scott-County", method = RequestMethod.GET)
	public String getIndianaCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18143");
		return "IndianaCountyScottCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Shelby-County", method = RequestMethod.GET)
	public String getIndianaCountyShelbyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18145");
		return "IndianaCountyShelbyCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Durant", method = RequestMethod.GET)
	public String getOklahomaMicroDurant(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20460");
		return "OklahomaMicroDurant";
	}   
@RequestMapping(value = "/states/Georgia/micros/Toccoa", method = RequestMethod.GET)
	public String getGeorgiaMicroToccoa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45740");
		return "GeorgiaMicroToccoa";
	}   
@RequestMapping(value = "/states/Washington/cities/Des-Moines-city", method = RequestMethod.GET)
	public String getWashingtonCityDesMoinescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5317635");
		return "WashingtonCityDesMoinescity";
	}   
@RequestMapping(value = "/states/Ohio/metros/Columbus", method = RequestMethod.GET)
	public String getOhioMetroColumbus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18140");
		return "OhioMetroColumbus";
	}   
@RequestMapping(value = "/states/Indiana/counties/St-Joseph-County", method = RequestMethod.GET)
	public String getIndianaCountyStJosephCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18141");
		return "IndianaCountyStJosephCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Hamilton-County", method = RequestMethod.GET)
	public String getOhioCountyHamiltonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39061");
		return "OhioCountyHamiltonCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Greenville", method = RequestMethod.GET)
	public String getOhioMicroGreenville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24820");
		return "OhioMicroGreenville";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Pottsville", method = RequestMethod.GET)
	public String getPennsylvaniaMicroPottsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39060");
		return "PennsylvaniaMicroPottsville";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Kinston-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityKinstoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3735920");
		return "North_CarolinaCityKinstoncity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Hancock-County", method = RequestMethod.GET)
	public String getOhioCountyHancockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39063");
		return "OhioCountyHancockCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Laplace", method = RequestMethod.GET)
	public String getLouisianaCityLaplace(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2242030");
		return "LouisianaCityLaplace";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Mower-County", method = RequestMethod.GET)
	public String getMinnesotaCountyMowerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27099");
		return "MinnesotaCountyMowerCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Easton-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityEastoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4221648");
		return "PennsylvaniaCityEastoncity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Morrison-County", method = RequestMethod.GET)
	public String getMinnesotaCountyMorrisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27097");
		return "MinnesotaCountyMorrisonCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Cottonwood-Heights-city", method = RequestMethod.GET)
	public String getUtahCityCottonwoodHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4916270");
		return "UtahCityCottonwoodHeightscity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Martin-County", method = RequestMethod.GET)
	public String getMinnesotaCountyMartinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27091");
		return "MinnesotaCountyMartinCounty";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Lancaster-County", method = RequestMethod.GET)
	public String getNebraskaCountyLancasterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31109");
		return "NebraskaCountyLancasterCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Mille-Lacs-County", method = RequestMethod.GET)
	public String getMinnesotaCountyMilleLacsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27095");
		return "MinnesotaCountyMilleLacsCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Meeker-County", method = RequestMethod.GET)
	public String getMinnesotaCountyMeekerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27093");
		return "MinnesotaCountyMeekerCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Noble-County", method = RequestMethod.GET)
	public String getIndianaCountyNobleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18113");
		return "IndianaCountyNobleCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Gallia-County", method = RequestMethod.GET)
	public String getOhioCountyGalliaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39053");
		return "OhioCountyGalliaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Delaware-County", method = RequestMethod.GET)
	public String getOklahomaCountyDelawareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40041");
		return "OklahomaCountyDelawareCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Geauga-County", method = RequestMethod.GET)
	public String getOhioCountyGeaugaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39055");
		return "OhioCountyGeaugaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Garfield-County", method = RequestMethod.GET)
	public String getOklahomaCountyGarfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40047");
		return "OklahomaCountyGarfieldCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Sheboygan-city", method = RequestMethod.GET)
	public String getWisconsinCitySheboygancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5572975");
		return "WisconsinCitySheboygancity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Greene-County", method = RequestMethod.GET)
	public String getOhioCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39057");
		return "OhioCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Murray-city", method = RequestMethod.GET)
	public String getUtahCityMurraycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4953230");
		return "UtahCityMurraycity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Guernsey-County", method = RequestMethod.GET)
	public String getOhioCountyGuernseyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39059");
		return "OhioCountyGuernseyCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Alvin-city", method = RequestMethod.GET)
	public String getTexasCityAlvincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4802272");
		return "TexasCityAlvincity";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Garvin-County", method = RequestMethod.GET)
	public String getOklahomaCountyGarvinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40049");
		return "OklahomaCountyGarvinCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Schenectady-city", method = RequestMethod.GET)
	public String getNew_YorkCitySchenectadycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3665508");
		return "New_YorkCitySchenectadycity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Fulton-County", method = RequestMethod.GET)
	public String getOhioCountyFultonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39051");
		return "OhioCountyFultonCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Racine-County", method = RequestMethod.GET)
	public String getWisconsinCountyRacineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55101");
		return "WisconsinCountyRacineCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Rock-County", method = RequestMethod.GET)
	public String getWisconsinCountyRockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55105");
		return "WisconsinCountyRockCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/metros/Mayaguez", method = RequestMethod.GET)
	public String getPuerto_RicoMetroMayaguez(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32420");
		return "Puerto_RicoMetroMayaguez";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Kandiyohi-County", method = RequestMethod.GET)
	public String getMinnesotaCountyKandiyohiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27067");
		return "MinnesotaCountyKandiyohiCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/St-Croix-County", method = RequestMethod.GET)
	public String getWisconsinCountyStCroixCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55109");
		return "WisconsinCountyStCroixCounty";
	}   
@RequestMapping(value = "/states/California/cities/South-Pasadena-city", method = RequestMethod.GET)
	public String getCaliforniaCitySouthPasadenacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673220");
		return "CaliforniaCitySouthPasadenacity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Liberty-city", method = RequestMethod.GET)
	public String getMissouriCityLibertycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2942032");
		return "MissouriCityLibertycity";
	}   
@RequestMapping(value = "/states/California/cities/La-Presa", method = RequestMethod.GET)
	public String getCaliforniaCityLaPresa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640326");
		return "CaliforniaCityLaPresa";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Itasca-County", method = RequestMethod.GET)
	public String getMinnesotaCountyItascaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27061");
		return "MinnesotaCountyItascaCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Owen-County", method = RequestMethod.GET)
	public String getIndianaCountyOwenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18119");
		return "IndianaCountyOwenCounty";
	}   
@RequestMapping(value = "/states/New-York/metros/Ithaca", method = RequestMethod.GET)
	public String getNew_YorkMetroIthaca(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27060");
		return "New_YorkMetroIthaca";
	}   
@RequestMapping(value = "/states/Ohio/counties/Erie-County", method = RequestMethod.GET)
	public String getOhioCountyErieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39043");
		return "OhioCountyErieCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Comanche-County", method = RequestMethod.GET)
	public String getOklahomaCountyComancheCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40031");
		return "OklahomaCountyComancheCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Fairfield-County", method = RequestMethod.GET)
	public String getOhioCountyFairfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39045");
		return "OhioCountyFairfieldCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/Lake-Oswego-city", method = RequestMethod.GET)
	public String getOregonCityLakeOswegocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4140550");
		return "OregonCityLakeOswegocity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Porter-County", method = RequestMethod.GET)
	public String getIndianaCountyPorterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18127");
		return "IndianaCountyPorterCounty";
	}   
@RequestMapping(value = "/states/California/cities/La-Puente-city", method = RequestMethod.GET)
	public String getCaliforniaCityLaPuentecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640340");
		return "CaliforniaCityLaPuentecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Deltona-city", method = RequestMethod.GET)
	public String getFloridaCityDeltonacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1217200");
		return "FloridaCityDeltonacity";
	}   
@RequestMapping(value = "/states/Texas/cities/Flower-Mound-town", method = RequestMethod.GET)
	public String getTexasCityFlowerMoundtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4826232");
		return "TexasCityFlowerMoundtown";
	}   
@RequestMapping(value = "/states/Ohio/counties/Fayette-County", method = RequestMethod.GET)
	public String getOhioCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39047");
		return "OhioCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Columbus-city", method = RequestMethod.GET)
	public String getIndianaCityColumbuscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1814734");
		return "IndianaCityColumbuscity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Franklin-County", method = RequestMethod.GET)
	public String getOhioCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39049");
		return "OhioCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Custer-County", method = RequestMethod.GET)
	public String getOklahomaCountyCusterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40039");
		return "OklahomaCountyCusterCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Creek-County", method = RequestMethod.GET)
	public String getOklahomaCountyCreekCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40037");
		return "OklahomaCountyCreekCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Delaware-County", method = RequestMethod.GET)
	public String getOhioCountyDelawareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39041");
		return "OhioCountyDelawareCounty";
	}   
@RequestMapping(value = "/states/California/cities/Danville-town", method = RequestMethod.GET)
	public String getCaliforniaCityDanvilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "617988");
		return "CaliforniaCityDanvilletown";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Sauk-County", method = RequestMethod.GET)
	public String getWisconsinCountySaukCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55111");
		return "WisconsinCountySaukCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Sheboygan-County", method = RequestMethod.GET)
	public String getWisconsinCountySheboyganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55117");
		return "WisconsinCountySheboyganCounty";
	}   
@RequestMapping(value = "/states/Louisiana/metros/Monroe", method = RequestMethod.GET)
	public String getLouisianaMetroMonroe(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33740");
		return "LouisianaMetroMonroe";
	}   
@RequestMapping(value = "/states/Maine/cities/Biddeford-city", method = RequestMethod.GET)
	public String getMaineCityBiddefordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2304860");
		return "MaineCityBiddefordcity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Shawano-County", method = RequestMethod.GET)
	public String getWisconsinCountyShawanoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55115");
		return "WisconsinCountyShawanoCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Le-Sueur-County", method = RequestMethod.GET)
	public String getMinnesotaCountyLeSueurCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27079");
		return "MinnesotaCountyLeSueurCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Marysville-city", method = RequestMethod.GET)
	public String getWashingtonCityMarysvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5343955");
		return "WashingtonCityMarysvillecity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Taylor-County", method = RequestMethod.GET)
	public String getWisconsinCountyTaylorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55119");
		return "WisconsinCountyTaylorCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Posey-County", method = RequestMethod.GET)
	public String getIndianaCountyPoseyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18129");
		return "IndianaCountyPoseyCounty";
	}   
@RequestMapping(value = "/states/Louisiana/micros/Bastrop", method = RequestMethod.GET)
	public String getLouisianaMicroBastrop(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12820");
		return "LouisianaMicroBastrop";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Cherokee-County", method = RequestMethod.GET)
	public String getOklahomaCountyCherokeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40021");
		return "OklahomaCountyCherokeeCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Coshocton-County", method = RequestMethod.GET)
	public String getOhioCountyCoshoctonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39031");
		return "OhioCountyCoshoctonCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Crawford-County", method = RequestMethod.GET)
	public String getOhioCountyCrawfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39033");
		return "OhioCountyCrawfordCounty";
	}   
@RequestMapping(value = "/states/Wyoming/micros/Evanston", method = RequestMethod.GET)
	public String getWyomingMicroEvanston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21740");
		return "WyomingMicroEvanston";
	}   
@RequestMapping(value = "/states/Florida/metros/SebastianVero-Beach", method = RequestMethod.GET)
	public String getFloridaMetroSebastianVeroBeach(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42680");
		return "FloridaMetroSebastianVeroBeach";
	}   
@RequestMapping(value = "/states/Ohio/counties/Cuyahoga-County", method = RequestMethod.GET)
	public String getOhioCountyCuyahogaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39035");
		return "OhioCountyCuyahogaCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Darke-County", method = RequestMethod.GET)
	public String getOhioCountyDarkeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39037");
		return "OhioCountyDarkeCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Denton-city", method = RequestMethod.GET)
	public String getTexasCityDentoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4819972");
		return "TexasCityDentoncity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Goodhue-County", method = RequestMethod.GET)
	public String getMinnesotaCountyGoodhueCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27049");
		return "MinnesotaCountyGoodhueCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Cleveland-County", method = RequestMethod.GET)
	public String getOklahomaCountyClevelandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40027");
		return "OklahomaCountyClevelandCounty";
	}   
@RequestMapping(value = "/states/Oregon/micros/Brookings", method = RequestMethod.GET)
	public String getOregonMicroBrookings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15060");
		return "OregonMicroBrookings";
	}   
@RequestMapping(value = "/states/Virginia/cities/Charlottesville-city", method = RequestMethod.GET)
	public String getVirginiaCityCharlottesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5114968");
		return "VirginiaCityCharlottesvillecity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Framingham", method = RequestMethod.GET)
	public String getMassachusettsCityFramingham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2524960");
		return "MassachusettsCityFramingham";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Vernon-County", method = RequestMethod.GET)
	public String getWisconsinCountyVernonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55123");
		return "WisconsinCountyVernonCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/Beaverton-city", method = RequestMethod.GET)
	public String getOregonCityBeavertoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4105350");
		return "OregonCityBeavertoncity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Douglas-County", method = RequestMethod.GET)
	public String getMinnesotaCountyDouglasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27041");
		return "MinnesotaCountyDouglasCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Trempealeau-County", method = RequestMethod.GET)
	public String getWisconsinCountyTrempealeauCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55121");
		return "WisconsinCountyTrempealeauCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Freeborn-County", method = RequestMethod.GET)
	public String getMinnesotaCountyFreebornCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27047");
		return "MinnesotaCountyFreebornCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Walworth-County", method = RequestMethod.GET)
	public String getWisconsinCountyWalworthCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55127");
		return "WisconsinCountyWalworthCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Fillmore-County", method = RequestMethod.GET)
	public String getMinnesotaCountyFillmoreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27045");
		return "MinnesotaCountyFillmoreCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Vilas-County", method = RequestMethod.GET)
	public String getWisconsinCountyVilasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55125");
		return "WisconsinCountyVilasCounty";
	}   
@RequestMapping(value = "/states/California/cities/Anaheim-city", method = RequestMethod.GET)
	public String getCaliforniaCityAnaheimcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "602000");
		return "CaliforniaCityAnaheimcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Defiance-County", method = RequestMethod.GET)
	public String getOhioCountyDefianceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39039");
		return "OhioCountyDefianceCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Lakewood-city", method = RequestMethod.GET)
	public String getColoradoCityLakewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "843000");
		return "ColoradoCityLakewoodcity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Franklin-city", method = RequestMethod.GET)
	public String getIndianaCityFranklincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1825450");
		return "IndianaCityFranklincity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Champaign-County", method = RequestMethod.GET)
	public String getOhioCountyChampaignCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39021");
		return "OhioCountyChampaignCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Normal-town", method = RequestMethod.GET)
	public String getIllinoisCityNormaltown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1753234");
		return "IllinoisCityNormaltown";
	}   
@RequestMapping(value = "/states/Indiana/counties/Miami-County", method = RequestMethod.GET)
	public String getIndianaCountyMiamiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18103");
		return "IndianaCountyMiamiCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Portsmouth", method = RequestMethod.GET)
	public String getOhioMicroPortsmouth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39020");
		return "OhioMicroPortsmouth";
	}   
@RequestMapping(value = "/states/Ohio/counties/Clark-County", method = RequestMethod.GET)
	public String getOhioCountyClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39023");
		return "OhioCountyClarkCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Monroe-County", method = RequestMethod.GET)
	public String getIndianaCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18105");
		return "IndianaCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Colorado/micros/Durango", method = RequestMethod.GET)
	public String getColoradoMicroDurango(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20420");
		return "ColoradoMicroDurango";
	}   
@RequestMapping(value = "/states/Georgia/micros/Tifton", method = RequestMethod.GET)
	public String getGeorgiaMicroTifton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45700");
		return "GeorgiaMicroTifton";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Myrtle-Beach-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityMyrtleBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4549075");
		return "South_CarolinaCityMyrtleBeachcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Clermont-County", method = RequestMethod.GET)
	public String getOhioCountyClermontCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39025");
		return "OhioCountyClermontCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Bryan-County", method = RequestMethod.GET)
	public String getOklahomaCountyBryanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40013");
		return "OklahomaCountyBryanCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Clinton-County", method = RequestMethod.GET)
	public String getOhioCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39027");
		return "OhioCountyClintonCounty";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Columbus", method = RequestMethod.GET)
	public String getNebraskaMicroColumbus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18100");
		return "NebraskaMicroColumbus";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Canadian-County", method = RequestMethod.GET)
	public String getOklahomaCountyCanadianCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40017");
		return "OklahomaCountyCanadianCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Caddo-County", method = RequestMethod.GET)
	public String getOklahomaCountyCaddoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40015");
		return "OklahomaCountyCaddoCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Washington-County", method = RequestMethod.GET)
	public String getWisconsinCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55131");
		return "WisconsinCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Mountlake-Terrace-city", method = RequestMethod.GET)
	public String getWashingtonCityMountlakeTerracecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5347490");
		return "WashingtonCityMountlakeTerracecity";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Carter-County", method = RequestMethod.GET)
	public String getOklahomaCountyCarterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40019");
		return "OklahomaCountyCarterCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Waupaca-County", method = RequestMethod.GET)
	public String getWisconsinCountyWaupacaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55135");
		return "WisconsinCountyWaupacaCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Waukesha-County", method = RequestMethod.GET)
	public String getWisconsinCountyWaukeshaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55133");
		return "WisconsinCountyWaukeshaCounty";
	}   
@RequestMapping(value = "/states/California/cities/South-San-Jose-Hills", method = RequestMethod.GET)
	public String getCaliforniaCitySouthSanJoseHills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673290");
		return "CaliforniaCitySouthSanJoseHills";
	}   
@RequestMapping(value = "/states/Texas/cities/Lake-Jackson-city", method = RequestMethod.GET)
	public String getTexasCityLakeJacksoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4840588");
		return "TexasCityLakeJacksoncity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Hennepin-County", method = RequestMethod.GET)
	public String getMinnesotaCountyHennepinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27053");
		return "MinnesotaCountyHennepinCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Winnebago-County", method = RequestMethod.GET)
	public String getWisconsinCountyWinnebagoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55139");
		return "WisconsinCountyWinnebagoCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Isanti-County", method = RequestMethod.GET)
	public String getMinnesotaCountyIsantiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27059");
		return "MinnesotaCountyIsantiCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Waushara-County", method = RequestMethod.GET)
	public String getWisconsinCountyWausharaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55137");
		return "WisconsinCountyWausharaCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Hubbard-County", method = RequestMethod.GET)
	public String getMinnesotaCountyHubbardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27057");
		return "MinnesotaCountyHubbardCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Arlington-city", method = RequestMethod.GET)
	public String getTexasCityArlingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4804000");
		return "TexasCityArlingtoncity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Columbiana-County", method = RequestMethod.GET)
	public String getOhioCountyColumbianaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39029");
		return "OhioCountyColumbianaCounty";
	}   
@RequestMapping(value = "/states/California/cities/Adelanto-city", method = RequestMethod.GET)
	public String getCaliforniaCityAdelantocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "600296");
		return "CaliforniaCityAdelantocity";
	}   
@RequestMapping(value = "/states/California/cities/La-Quinta-city", method = RequestMethod.GET)
	public String getCaliforniaCityLaQuintacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640354");
		return "CaliforniaCityLaQuintacity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Englewood-city", method = RequestMethod.GET)
	public String getNew_JerseyCityEnglewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3421480");
		return "New_JerseyCityEnglewoodcity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Montgomery-County", method = RequestMethod.GET)
	public String getIndianaCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18107");
		return "IndianaCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Morgan-County", method = RequestMethod.GET)
	public String getIndianaCountyMorganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18109");
		return "IndianaCountyMorganCounty";
	}   
@RequestMapping(value = "/states/Missouri/micros/Kennett", method = RequestMethod.GET)
	public String getMissouriMicroKennett(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28380");
		return "MissouriMicroKennett";
	}   
@RequestMapping(value = "/states/Ohio/counties/Auglaize-County", method = RequestMethod.GET)
	public String getOhioCountyAuglaizeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39011");
		return "OhioCountyAuglaizeCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Belmont-County", method = RequestMethod.GET)
	public String getOhioCountyBelmontCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39013");
		return "OhioCountyBelmontCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Adair-County", method = RequestMethod.GET)
	public String getOklahomaCountyAdairCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40001");
		return "OklahomaCountyAdairCounty";
	}   
@RequestMapping(value = "/states/Washington/metros/Seattle-Tacoma-Bellevue", method = RequestMethod.GET)
	public String getWashingtonMetroSeattleTacomaBellevue(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42660");
		return "WashingtonMetroSeattleTacomaBellevue";
	}   
@RequestMapping(value = "/states/Ohio/counties/Brown-County", method = RequestMethod.GET)
	public String getOhioCountyBrownCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39015");
		return "OhioCountyBrownCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Brent", method = RequestMethod.GET)
	public String getFloridaCityBrent(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1208300");
		return "FloridaCityBrent";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Clay-County", method = RequestMethod.GET)
	public String getMinnesotaCountyClayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27027");
		return "MinnesotaCountyClayCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Wood-County", method = RequestMethod.GET)
	public String getWisconsinCountyWoodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55141");
		return "WisconsinCountyWoodCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Beckham-County", method = RequestMethod.GET)
	public String getOklahomaCountyBeckhamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40009");
		return "OklahomaCountyBeckhamCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Cass-County", method = RequestMethod.GET)
	public String getMinnesotaCountyCassCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27021");
		return "MinnesotaCountyCassCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Englewood-city", method = RequestMethod.GET)
	public String getColoradoCityEnglewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "824785");
		return "ColoradoCityEnglewoodcity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Anderson-city", method = RequestMethod.GET)
	public String getIndianaCityAndersoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1801468");
		return "IndianaCityAndersoncity";
	}   
@RequestMapping(value = "/states/Michigan/micros/Iron-Mountain", method = RequestMethod.GET)
	public String getMichiganMicroIronMountain(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27020");
		return "MichiganMicroIronMountain";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Chisago-County", method = RequestMethod.GET)
	public String getMinnesotaCountyChisagoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27025");
		return "MinnesotaCountyChisagoCounty";
	}   
@RequestMapping(value = "/states/California/cities/South-San-Francisco-city", method = RequestMethod.GET)
	public String getCaliforniaCitySouthSanFranciscocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673262");
		return "CaliforniaCitySouthSanFranciscocity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Butler-County", method = RequestMethod.GET)
	public String getOhioCountyButlerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39017");
		return "OhioCountyButlerCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Carroll-County", method = RequestMethod.GET)
	public String getOhioCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39019");
		return "OhioCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Pine-Hills", method = RequestMethod.GET)
	public String getFloridaCityPineHills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1256825");
		return "FloridaCityPineHills";
	}   
@RequestMapping(value = "/states/Ohio/cities/Parma-city", method = RequestMethod.GET)
	public String getOhioCityParmacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3961000");
		return "OhioCityParmacity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Adams-County", method = RequestMethod.GET)
	public String getOhioCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39001");
		return "OhioCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Allen-County", method = RequestMethod.GET)
	public String getOhioCountyAllenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39003");
		return "OhioCountyAllenCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Ashland-County", method = RequestMethod.GET)
	public String getOhioCountyAshlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39005");
		return "OhioCountyAshlandCounty";
	}   
@RequestMapping(value = "/states/California/cities/Perris-city", method = RequestMethod.GET)
	public String getCaliforniaCityPerriscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "656700");
		return "CaliforniaCityPerriscity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Edgewood", method = RequestMethod.GET)
	public String getMarylandCityEdgewood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2425150");
		return "MarylandCityEdgewood";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Dodge-County", method = RequestMethod.GET)
	public String getMinnesotaCountyDodgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27039");
		return "MinnesotaCountyDodgeCounty";
	}   
@RequestMapping(value = "/states/California/cities/Citrus-Heights-city", method = RequestMethod.GET)
	public String getCaliforniaCityCitrusHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "613588");
		return "CaliforniaCityCitrusHeightscity";
	}   
@RequestMapping(value = "/states/California/cities/Dana-Point-city", method = RequestMethod.GET)
	public String getCaliforniaCityDanaPointcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "617946");
		return "CaliforniaCityDanaPointcity";
	}   
@RequestMapping(value = "/states/Ohio/micros/Celina", method = RequestMethod.GET)
	public String getOhioMicroCelina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16380");
		return "OhioMicroCelina";
	}   
@RequestMapping(value = "/states/California/metros/Modesto", method = RequestMethod.GET)
	public String getCaliforniaMetroModesto(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33700");
		return "CaliforniaMetroModesto";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Dakota-County", method = RequestMethod.GET)
	public String getMinnesotaCountyDakotaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27037");
		return "MinnesotaCountyDakotaCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Crow-Wing-County", method = RequestMethod.GET)
	public String getMinnesotaCountyCrowWingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27035");
		return "MinnesotaCountyCrowWingCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Ashtabula-County", method = RequestMethod.GET)
	public String getOhioCountyAshtabulaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39007");
		return "OhioCountyAshtabulaCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Athens-County", method = RequestMethod.GET)
	public String getOhioCountyAthensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39009");
		return "OhioCountyAthensCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Dunedin-city", method = RequestMethod.GET)
	public String getFloridaCityDunedincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1218575");
		return "FloridaCityDunedincity";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Horn-Lake-city", method = RequestMethod.GET)
	public String getMississippiCityHornLakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2833700");
		return "MississippiCityHornLakecity";
	}   
@RequestMapping(value = "/states/Texas/cities/McAllen-city", method = RequestMethod.GET)
	public String getTexasCityMcAllencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4845384");
		return "TexasCityMcAllencity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Parma-Heights-city", method = RequestMethod.GET)
	public String getOhioCityParmaHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3961028");
		return "OhioCityParmaHeightscity";
	}   
@RequestMapping(value = "/states/Florida/micros/Arcadia", method = RequestMethod.GET)
	public String getFloridaMicroArcadia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11580");
		return "FloridaMicroArcadia";
	}   
@RequestMapping(value = "/states/Georgia/micros/Moultrie", method = RequestMethod.GET)
	public String getGeorgiaMicroMoultrie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34220");
		return "GeorgiaMicroMoultrie";
	}   
@RequestMapping(value = "/states/Wyoming/cities/Gillette-city", method = RequestMethod.GET)
	public String getWyomingCityGillettecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5631855");
		return "WyomingCityGillettecity";
	}   
@RequestMapping(value = "/states/California/cities/Maywood-city", method = RequestMethod.GET)
	public String getCaliforniaCityMaywoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "646492");
		return "CaliforniaCityMaywoodcity";
	}   
@RequestMapping(value = "/states/California/metros/Sacramento--Roseville--Arden-Arcade", method = RequestMethod.GET)
	public String getCaliforniaMetroSacramentoRosevilleArdenArcade(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40900");
		return "CaliforniaMetroSacramentoRosevilleArdenArcade";
	}   
@RequestMapping(value = "/states/California/cities/Hemet-city", method = RequestMethod.GET)
	public String getCaliforniaCityHemetcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "633182");
		return "CaliforniaCityHemetcity";
	}   
@RequestMapping(value = "/states/Ohio/metros/Canton-Massillon", method = RequestMethod.GET)
	public String getOhioMetroCantonMassillon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15940");
		return "OhioMetroCantonMassillon";
	}   
@RequestMapping(value = "/states/Georgia/cities/McDonough-city", method = RequestMethod.GET)
	public String getGeorgiaCityMcDonoughcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1348624");
		return "GeorgiaCityMcDonoughcity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Waltham-city", method = RequestMethod.GET)
	public String getMassachusettsCityWalthamcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2572600");
		return "MassachusettsCityWalthamcity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Revere-city", method = RequestMethod.GET)
	public String getMassachusettsCityReverecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2556585");
		return "MassachusettsCityReverecity";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Keene-city", method = RequestMethod.GET)
	public String getNew_HampshireCityKeenecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3339300");
		return "New_HampshireCityKeenecity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Tinley-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityTinleyParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1775484");
		return "IllinoisCityTinleyParkvillage";
	}   
@RequestMapping(value = "/states/Texas/metros/Lubbock", method = RequestMethod.GET)
	public String getTexasMetroLubbock(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31180");
		return "TexasMetroLubbock";
	}   
@RequestMapping(value = "/states/California/cities/West-Puente-Valley", method = RequestMethod.GET)
	public String getCaliforniaCityWestPuenteValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684774");
		return "CaliforniaCityWestPuenteValley";
	}   
@RequestMapping(value = "/states/Georgia/cities/Griffin-city", method = RequestMethod.GET)
	public String getGeorgiaCityGriffincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1335324");
		return "GeorgiaCityGriffincity";
	}   
@RequestMapping(value = "/states/Utah/cities/Lehi-city", method = RequestMethod.GET)
	public String getUtahCityLehicity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4944320");
		return "UtahCityLehicity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Fountain-city", method = RequestMethod.GET)
	public String getColoradoCityFountaincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "827865");
		return "ColoradoCityFountaincity";
	}   
@RequestMapping(value = "/states/Nevada/metros/Reno", method = RequestMethod.GET)
	public String getNevadaMetroReno(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39900");
		return "NevadaMetroReno";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Bradford", method = RequestMethod.GET)
	public String getPennsylvaniaMicroBradford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14620");
		return "PennsylvaniaMicroBradford";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Newington", method = RequestMethod.GET)
	public String getConnecticutCityNewington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "952210");
		return "ConnecticutCityNewington";
	}   
@RequestMapping(value = "/states/Colorado/cities/Wheat-Ridge-city", method = RequestMethod.GET)
	public String getColoradoCityWheatRidgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "884440");
		return "ColoradoCityWheatRidgecity";
	}   
@RequestMapping(value = "/states/West-Virginia/cities/Wheeling-city", method = RequestMethod.GET)
	public String getWest_VirginiaCityWheelingcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5486452");
		return "West_VirginiaCityWheelingcity";
	}   
@RequestMapping(value = "/states/Illinois/micros/Ottawa-Peru", method = RequestMethod.GET)
	public String getIllinoisMicroOttawaPeru(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36860");
		return "IllinoisMicroOttawaPeru";
	}   
@RequestMapping(value = "/states/California/cities/French-Valley", method = RequestMethod.GET)
	public String getCaliforniaCityFrenchValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "626067");
		return "CaliforniaCityFrenchValley";
	}   
@RequestMapping(value = "/states/Florida/metros/Gainesville", method = RequestMethod.GET)
	public String getFloridaMetroGainesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23540");
		return "FloridaMetroGainesville";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/West-New-York-town", method = RequestMethod.GET)
	public String getNew_JerseyCityWestNewYorktown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3479610");
		return "New_JerseyCityWestNewYorktown";
	}   
@RequestMapping(value = "/states/Florida/cities/Apopka-city", method = RequestMethod.GET)
	public String getFloridaCityApopkacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1201700");
		return "FloridaCityApopkacity";
	}   
@RequestMapping(value = "/states/Missouri/metros/Joplin", method = RequestMethod.GET)
	public String getMissouriMetroJoplin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27900");
		return "MissouriMetroJoplin";
	}   
@RequestMapping(value = "/states/Florida/cities/Palm-Coast-city", method = RequestMethod.GET)
	public String getFloridaCityPalmCoastcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254200");
		return "FloridaCityPalmCoastcity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Washington-County", method = RequestMethod.GET)
	public String getNebraskaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31177");
		return "NebraskaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Bloomington-city", method = RequestMethod.GET)
	public String getIndianaCityBloomingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1805860");
		return "IndianaCityBloomingtoncity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Hampton-city", method = RequestMethod.GET)
	public String getVirginiaCityHamptoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5135000");
		return "VirginiaCityHamptoncity";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Paragould-city", method = RequestMethod.GET)
	public String getArkansasCityParagouldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "553390");
		return "ArkansasCityParagouldcity";
	}   
@RequestMapping(value = "/states/Arkansas/metros/Fayetteville-Springdale-Rogers", method = RequestMethod.GET)
	public String getArkansasMetroFayettevilleSpringdaleRogers(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22220");
		return "ArkansasMetroFayettevilleSpringdaleRogers";
	}   
@RequestMapping(value = "/states/California/cities/Downey-city", method = RequestMethod.GET)
	public String getCaliforniaCityDowneycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "619766");
		return "CaliforniaCityDowneycity";
	}   
@RequestMapping(value = "/states/Texas/cities/DeSoto-city", method = RequestMethod.GET)
	public String getTexasCityDeSotocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4820092");
		return "TexasCityDeSotocity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Lancaster-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityLancastercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4241216");
		return "PennsylvaniaCityLancastercity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Bethlehem-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityBethlehemcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4206088");
		return "PennsylvaniaCityBethlehemcity";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Shelby", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroShelby(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43140");
		return "North_CarolinaMicroShelby";
	}   
@RequestMapping(value = "/states/Washington/cities/Lynnwood-city", method = RequestMethod.GET)
	public String getWashingtonCityLynnwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5340840");
		return "WashingtonCityLynnwoodcity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Wells-County", method = RequestMethod.GET)
	public String getIndianaCountyWellsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18179");
		return "IndianaCountyWellsCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Herriman-city", method = RequestMethod.GET)
	public String getUtahCityHerrimancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4934970");
		return "UtahCityHerrimancity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Washington-County", method = RequestMethod.GET)
	public String getIndianaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18175");
		return "IndianaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Willmar", method = RequestMethod.GET)
	public String getMinnesotaMicroWillmar(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48820");
		return "MinnesotaMicroWillmar";
	}   
@RequestMapping(value = "/states/Indiana/counties/Wayne-County", method = RequestMethod.GET)
	public String getIndianaCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18177");
		return "IndianaCountyWayneCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/South-Miami-Heights", method = RequestMethod.GET)
	public String getFloridaCitySouthMiamiHeights(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1267575");
		return "FloridaCitySouthMiamiHeights";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Yukon-city", method = RequestMethod.GET)
	public String getOklahomaCityYukoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4082950");
		return "OklahomaCityYukoncity";
	}   
@RequestMapping(value = "/states/Indiana/counties/Warrick-County", method = RequestMethod.GET)
	public String getIndianaCountyWarrickCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18173");
		return "IndianaCountyWarrickCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/New-Brighton-city", method = RequestMethod.GET)
	public String getMinnesotaCityNewBrightoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2745430");
		return "MinnesotaCityNewBrightoncity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Scotts-Bluff-County", method = RequestMethod.GET)
	public String getNebraskaCountyScottsBluffCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31157");
		return "NebraskaCountyScottsBluffCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Fleming-Island", method = RequestMethod.GET)
	public String getFloridaCityFlemingIsland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1222660");
		return "FloridaCityFlemingIsland";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Sarpy-County", method = RequestMethod.GET)
	public String getNebraskaCountySarpyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31153");
		return "NebraskaCountySarpyCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Greenwood-city", method = RequestMethod.GET)
	public String getIndianaCityGreenwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1829898");
		return "IndianaCityGreenwoodcity";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Saunders-County", method = RequestMethod.GET)
	public String getNebraskaCountySaundersCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31155");
		return "NebraskaCountySaundersCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Appleton", method = RequestMethod.GET)
	public String getWisconsinMetroAppleton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11540");
		return "WisconsinMetroAppleton";
	}   
@RequestMapping(value = "/states/Georgia/cities/Albany-city", method = RequestMethod.GET)
	public String getGeorgiaCityAlbanycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1301052");
		return "GeorgiaCityAlbanycity";
	}   
@RequestMapping(value = "/states/Illinois/micros/Canton", method = RequestMethod.GET)
	public String getIllinoisMicroCanton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15900");
		return "IllinoisMicroCanton";
	}   
@RequestMapping(value = "/states/Illinois/cities/Hoffman-Estates-village", method = RequestMethod.GET)
	public String getIllinoisCityHoffmanEstatesvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1735411");
		return "IllinoisCityHoffmanEstatesvillage";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Durham-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityDurhamcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3719000");
		return "North_CarolinaCityDurhamcity";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Mayes-County", method = RequestMethod.GET)
	public String getOklahomaCountyMayesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40097");
		return "OklahomaCountyMayesCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Owasso-city", method = RequestMethod.GET)
	public String getOklahomaCityOwassocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4056650");
		return "OklahomaCityOwassocity";
	}   
@RequestMapping(value = "/states/Washington/cities/Yakima-city", method = RequestMethod.GET)
	public String getWashingtonCityYakimacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5380010");
		return "WashingtonCityYakimacity";
	}   
@RequestMapping(value = "/states/Utah/cities/Millcreek", method = RequestMethod.GET)
	public String getUtahCityMillcreek(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4950150");
		return "UtahCityMillcreek";
	}   
@RequestMapping(value = "/states/Indiana/counties/Whitley-County", method = RequestMethod.GET)
	public String getIndianaCountyWhitleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18183");
		return "IndianaCountyWhitleyCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/Greenville-Anderson-Mauldin", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroGreenvilleAndersonMauldin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24860");
		return "South_CarolinaMetroGreenvilleAndersonMauldin";
	}   
@RequestMapping(value = "/states/Oregon/cities/Forest-Grove-city", method = RequestMethod.GET)
	public String getOregonCityForestGrovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4126200");
		return "OregonCityForestGrovecity";
	}   
@RequestMapping(value = "/states/Kentucky/metros/Louisville-Jefferson-County", method = RequestMethod.GET)
	public String getKentuckyMetroLouisvilleJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31140");
		return "KentuckyMetroLouisvilleJeffersonCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/McHenry-city", method = RequestMethod.GET)
	public String getIllinoisCityMcHenrycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1745694");
		return "IllinoisCityMcHenrycity";
	}   
@RequestMapping(value = "/states/Utah/cities/South-Salt-Lake-city", method = RequestMethod.GET)
	public String getUtahCitySouthSaltLakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4971070");
		return "UtahCitySouthSaltLakecity";
	}   
@RequestMapping(value = "/states/New-Hampshire/micros/Concord", method = RequestMethod.GET)
	public String getNew_HampshireMicroConcord(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18180");
		return "New_HampshireMicroConcord";
	}   
@RequestMapping(value = "/states/Indiana/counties/White-County", method = RequestMethod.GET)
	public String getIndianaCountyWhiteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18181");
		return "IndianaCountyWhiteCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Carteret-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityCarteretborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3410750");
		return "New_JerseyCityCarteretborough";
	}   
@RequestMapping(value = "/states/Wyoming/cities/Casper-city", method = RequestMethod.GET)
	public String getWyomingCityCaspercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5613150");
		return "WyomingCityCaspercity";
	}   
@RequestMapping(value = "/states/Iowa/micros/Newton", method = RequestMethod.GET)
	public String getIowaMicroNewton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35500");
		return "IowaMicroNewton";
	}   
@RequestMapping(value = "/states/Nebraska/counties/Platte-County", method = RequestMethod.GET)
	public String getNebraskaCountyPlatteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31141");
		return "NebraskaCountyPlatteCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Ada", method = RequestMethod.GET)
	public String getOklahomaMicroAda(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10220");
		return "OklahomaMicroAda";
	}   
@RequestMapping(value = "/states/Florida/cities/Hollywood-city", method = RequestMethod.GET)
	public String getFloridaCityHollywoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1232000");
		return "FloridaCityHollywoodcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Huntley-village", method = RequestMethod.GET)
	public String getIllinoisCityHuntleyvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1736750");
		return "IllinoisCityHuntleyvillage";
	}   
@RequestMapping(value = "/states/Michigan/cities/Warren-city", method = RequestMethod.GET)
	public String getMichiganCityWarrencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2684000");
		return "MichiganCityWarrencity";
	}   
@RequestMapping(value = "/states/Ohio/metros/Toledo", method = RequestMethod.GET)
	public String getOhioMetroToledo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45780");
		return "OhioMetroToledo";
	}   
@RequestMapping(value = "/states/California/cities/Belmont-city", method = RequestMethod.GET)
	public String getCaliforniaCityBelmontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "605108");
		return "CaliforniaCityBelmontcity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Plainfield-city", method = RequestMethod.GET)
	public String getNew_JerseyCityPlainfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3459190");
		return "New_JerseyCityPlainfieldcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Bethel-Park-municipality", method = RequestMethod.GET)
	public String getPennsylvaniaCityBethelParkmunicipality(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4206064");
		return "PennsylvaniaCityBethelParkmunicipality";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/McIntosh-County", method = RequestMethod.GET)
	public String getOklahomaCountyMcIntoshCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40091");
		return "OklahomaCountyMcIntoshCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Tippecanoe-County", method = RequestMethod.GET)
	public String getIndianaCountyTippecanoeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18157");
		return "IndianaCountyTippecanoeCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/McClain-County", method = RequestMethod.GET)
	public String getOklahomaCountyMcClainCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40087");
		return "OklahomaCountyMcClainCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Madison-County", method = RequestMethod.GET)
	public String getOhioCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39097");
		return "OhioCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Iowa/cities/Davenport-city", method = RequestMethod.GET)
	public String getIowaCityDavenportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1919000");
		return "IowaCityDavenportcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Mahoning-County", method = RequestMethod.GET)
	public String getOhioCountyMahoningCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39099");
		return "OhioCountyMahoningCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Sullivan-County", method = RequestMethod.GET)
	public String getIndianaCountySullivanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18153");
		return "IndianaCountySullivanCounty";
	}   
@RequestMapping(value = "/states/California/cities/Mission-Viejo-city", method = RequestMethod.GET)
	public String getCaliforniaCityMissionViejocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "648256");
		return "CaliforniaCityMissionViejocity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Ashley-County", method = RequestMethod.GET)
	public String getArkansasCountyAshleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5003");
		return "ArkansasCountyAshleyCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/McCurtain-County", method = RequestMethod.GET)
	public String getOklahomaCountyMcCurtainCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40089");
		return "OklahomaCountyMcCurtainCounty";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Mayfield", method = RequestMethod.GET)
	public String getKentuckyMicroMayfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32460");
		return "KentuckyMicroMayfield";
	}   
@RequestMapping(value = "/states/Indiana/counties/Steuben-County", method = RequestMethod.GET)
	public String getIndianaCountySteubenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18151");
		return "IndianaCountySteubenCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Logan-County", method = RequestMethod.GET)
	public String getOhioCountyLoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39091");
		return "OhioCountyLoganCounty";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Maria-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaMariacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "669196");
		return "CaliforniaCitySantaMariacity";
	}   
@RequestMapping(value = "/states/Florida/cities/Alafaya", method = RequestMethod.GET)
	public String getFloridaCityAlafaya(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1200410");
		return "FloridaCityAlafaya";
	}   
@RequestMapping(value = "/states/Maryland/cities/Olney", method = RequestMethod.GET)
	public String getMarylandCityOlney(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2458900");
		return "MarylandCityOlney";
	}   
@RequestMapping(value = "/states/South-Carolina/micros/Gaffney", method = RequestMethod.GET)
	public String getSouth_CarolinaMicroGaffney(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23500");
		return "South_CarolinaMicroGaffney";
	}   
@RequestMapping(value = "/states/Ohio/counties/Lorain-County", method = RequestMethod.GET)
	public String getOhioCountyLorainCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39093");
		return "OhioCountyLorainCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Lucas-County", method = RequestMethod.GET)
	public String getOhioCountyLucasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39095");
		return "OhioCountyLucasCounty";
	}   
@RequestMapping(value = "/states/Iowa/micros/Oskaloosa", method = RequestMethod.GET)
	public String getIowaMicroOskaloosa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36820");
		return "IowaMicroOskaloosa";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Logan-County", method = RequestMethod.GET)
	public String getOklahomaCountyLoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40083");
		return "OklahomaCountyLoganCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Lincoln-County", method = RequestMethod.GET)
	public String getOklahomaCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40081");
		return "OklahomaCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Richmond-Berea", method = RequestMethod.GET)
	public String getKentuckyMicroRichmondBerea(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40080");
		return "KentuckyMicroRichmondBerea";
	}   
@RequestMapping(value = "/states/Ohio/counties/Lawrence-County", method = RequestMethod.GET)
	public String getOhioCountyLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39087");
		return "OhioCountyLawrenceCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Wabash-County", method = RequestMethod.GET)
	public String getIndianaCountyWabashCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18169");
		return "IndianaCountyWabashCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Marlborough-city", method = RequestMethod.GET)
	public String getMassachusettsCityMarlboroughcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2538715");
		return "MassachusettsCityMarlboroughcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Licking-County", method = RequestMethod.GET)
	public String getOhioCountyLickingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39089");
		return "OhioCountyLickingCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Savage-city", method = RequestMethod.GET)
	public String getMinnesotaCitySavagecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2758738");
		return "MinnesotaCitySavagecity";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Le-Flore-County", method = RequestMethod.GET)
	public String getOklahomaCountyLeFloreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40079");
		return "OklahomaCountyLeFloreCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Sheboygan", method = RequestMethod.GET)
	public String getWisconsinMetroSheboygan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43100");
		return "WisconsinMetroSheboygan";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Carroll-County", method = RequestMethod.GET)
	public String getArkansasCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5015");
		return "ArkansasCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Vigo-County", method = RequestMethod.GET)
	public String getIndianaCountyVigoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18167");
		return "IndianaCountyVigoCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Monroe", method = RequestMethod.GET)
	public String getMichiganMetroMonroe(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33780");
		return "MichiganMetroMonroe";
	}   
@RequestMapping(value = "/states/Ohio/counties/Jefferson-County", method = RequestMethod.GET)
	public String getOhioCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39081");
		return "OhioCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Indiana/counties/Vanderburgh-County", method = RequestMethod.GET)
	public String getIndianaCountyVanderburghCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18163");
		return "IndianaCountyVanderburghCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Knox-County", method = RequestMethod.GET)
	public String getOhioCountyKnoxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39083");
		return "OhioCountyKnoxCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Denison-city", method = RequestMethod.GET)
	public String getTexasCityDenisoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4819900");
		return "TexasCityDenisoncity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Lake-County", method = RequestMethod.GET)
	public String getOhioCountyLakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39085");
		return "OhioCountyLakeCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/New-Bedford-city", method = RequestMethod.GET)
	public String getMassachusettsCityNewBedfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2545000");
		return "MassachusettsCityNewBedfordcity";
	}   
@RequestMapping(value = "/states/California/cities/Rohnert-Park-city", method = RequestMethod.GET)
	public String getCaliforniaCityRohnertParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "662546");
		return "CaliforniaCityRohnertParkcity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Northampton-city", method = RequestMethod.GET)
	public String getMassachusettsCityNorthamptoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2546330");
		return "MassachusettsCityNorthamptoncity";
	}   
@RequestMapping(value = "/states/Florida/cities/West-Little-River", method = RequestMethod.GET)
	public String getFloridaCityWestLittleRiver(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1276487");
		return "FloridaCityWestLittleRiver";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Baxter-County", method = RequestMethod.GET)
	public String getArkansasCountyBaxterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5005");
		return "ArkansasCountyBaxterCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Phenix-City-city", method = RequestMethod.GET)
	public String getAlabamaCityPhenixCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "159472");
		return "AlabamaCityPhenixCitycity";
	}   
@RequestMapping(value = "/states/California/cities/Azusa-city", method = RequestMethod.GET)
	public String getCaliforniaCityAzusacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "603386");
		return "CaliforniaCityAzusacity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Benton-County", method = RequestMethod.GET)
	public String getArkansasCountyBentonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5007");
		return "ArkansasCountyBentonCounty";
	}   
@RequestMapping(value = "/states/New-York/micros/Batavia", method = RequestMethod.GET)
	public String getNew_YorkMicroBatavia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12860");
		return "New_YorkMicroBatavia";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Boone-County", method = RequestMethod.GET)
	public String getArkansasCountyBooneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5009");
		return "ArkansasCountyBooneCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Kay-County", method = RequestMethod.GET)
	public String getOklahomaCountyKayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40071");
		return "OklahomaCountyKayCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Cleburne-County", method = RequestMethod.GET)
	public String getArkansasCountyCleburneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5023");
		return "ArkansasCountyCleburneCounty";
	}   
@RequestMapping(value = "/states/Idaho/metros/Pocatello", method = RequestMethod.GET)
	public String getIdahoMetroPocatello(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38540");
		return "IdahoMetroPocatello";
	}   
@RequestMapping(value = "/states/Vermont/micros/Rutland", method = RequestMethod.GET)
	public String getVermontMicroRutland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40860");
		return "VermontMicroRutland";
	}   
@RequestMapping(value = "/states/Florida/cities/Winter-Haven-city", method = RequestMethod.GET)
	public String getFloridaCityWinterHavencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1278275");
		return "FloridaCityWinterHavencity";
	}   
@RequestMapping(value = "/states/New-York/cities/Medford", method = RequestMethod.GET)
	public String getNew_YorkCityMedford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3646404");
		return "New_YorkCityMedford";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Attleboro-city", method = RequestMethod.GET)
	public String getMassachusettsCityAttleborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2502690");
		return "MassachusettsCityAttleborocity";
	}   
@RequestMapping(value = "/states/Wyoming/cities/Cheyenne-city", method = RequestMethod.GET)
	public String getWyomingCityCheyennecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5613900");
		return "WyomingCityCheyennecity";
	}   
@RequestMapping(value = "/states/Washington/micros/Moses-Lake", method = RequestMethod.GET)
	public String getWashingtonMicroMosesLake(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34180");
		return "WashingtonMicroMosesLake";
	}   
@RequestMapping(value = "/states/Connecticut/cities/New-London-city", method = RequestMethod.GET)
	public String getConnecticutCityNewLondoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "952280");
		return "ConnecticutCityNewLondoncity";
	}   
@RequestMapping(value = "/states/Louisiana/metros/Hammond", method = RequestMethod.GET)
	public String getLouisianaMetroHammond(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25220");
		return "LouisianaMetroHammond";
	}   
@RequestMapping(value = "/states/California/cities/Brentwood-city", method = RequestMethod.GET)
	public String getCaliforniaCityBrentwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "608142");
		return "CaliforniaCityBrentwoodcity";
	}   
@RequestMapping(value = "/states/Texas/cities/San-Benito-city", method = RequestMethod.GET)
	public String getTexasCitySanBenitocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4865036");
		return "TexasCitySanBenitocity";
	}   
@RequestMapping(value = "/states/Florida/cities/Citrus-Park", method = RequestMethod.GET)
	public String getFloridaCityCitrusPark(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1212425");
		return "FloridaCityCitrusPark";
	}   
@RequestMapping(value = "/states/Georgia/counties/Rockdale-County", method = RequestMethod.GET)
	public String getGeorgiaCountyRockdaleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13247");
		return "GeorgiaCountyRockdaleCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Clark-County", method = RequestMethod.GET)
	public String getArkansasCountyClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5019");
		return "ArkansasCountyClarkCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Richmond-County", method = RequestMethod.GET)
	public String getGeorgiaCountyRichmondCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13245");
		return "GeorgiaCountyRichmondCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Roselle-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityRoselleborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3464620");
		return "New_JerseyCityRoselleborough";
	}   
@RequestMapping(value = "/states/South-Dakota/cities/Rapid-City-city", method = RequestMethod.GET)
	public String getSouth_DakotaCityRapidCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4652980");
		return "South_DakotaCityRapidCitycity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Kettering-city", method = RequestMethod.GET)
	public String getOhioCityKetteringcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3940040");
		return "OhioCityKetteringcity";
	}   
@RequestMapping(value = "/states/Montana/micros/Bozeman", method = RequestMethod.GET)
	public String getMontanaMicroBozeman(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14580");
		return "MontanaMicroBozeman";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Craighead-County", method = RequestMethod.GET)
	public String getArkansasCountyCraigheadCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5031");
		return "ArkansasCountyCraigheadCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Fortuna-Foothills", method = RequestMethod.GET)
	public String getArizonaCityFortunaFoothills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "425030");
		return "ArizonaCityFortunaFoothills";
	}   
@RequestMapping(value = "/states/Maryland/cities/North-Bethesda", method = RequestMethod.GET)
	public String getMarylandCityNorthBethesda(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2456337");
		return "MarylandCityNorthBethesda";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Crawford-County", method = RequestMethod.GET)
	public String getArkansasCountyCrawfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5033");
		return "ArkansasCountyCrawfordCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Crittenden-County", method = RequestMethod.GET)
	public String getArkansasCountyCrittendenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5035");
		return "ArkansasCountyCrittendenCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Red-Wing", method = RequestMethod.GET)
	public String getMinnesotaMicroRedWing(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39860");
		return "MinnesotaMicroRedWing";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Wilmington", method = RequestMethod.GET)
	public String getMassachusettsCityWilmington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2580195");
		return "MassachusettsCityWilmington";
	}   
@RequestMapping(value = "/states/Florida/cities/Riviera-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityRivieraBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1260975");
		return "FloridaCityRivieraBeachcity";
	}   
@RequestMapping(value = "/states/California/cities/Vista-city", method = RequestMethod.GET)
	public String getCaliforniaCityVistacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "682996");
		return "CaliforniaCityVistacity";
	}   
@RequestMapping(value = "/states/California/cities/Vallejo-city", method = RequestMethod.GET)
	public String getCaliforniaCityVallejocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "681666");
		return "CaliforniaCityVallejocity";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Manchester-city", method = RequestMethod.GET)
	public String getNew_HampshireCityManchestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3345140");
		return "New_HampshireCityManchestercity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Joliet-city", method = RequestMethod.GET)
	public String getIllinoisCityJolietcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1738570");
		return "IllinoisCityJolietcity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Columbia-County", method = RequestMethod.GET)
	public String getArkansasCountyColumbiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5027");
		return "ArkansasCountyColumbiaCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Stephens-County", method = RequestMethod.GET)
	public String getGeorgiaCountyStephensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13257");
		return "GeorgiaCountyStephensCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Conway-County", method = RequestMethod.GET)
	public String getArkansasCountyConwayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5029");
		return "ArkansasCountyConwayCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Spalding-County", method = RequestMethod.GET)
	public String getGeorgiaCountySpaldingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13255");
		return "GeorgiaCountySpaldingCounty";
	}   
@RequestMapping(value = "/states/California/cities/Ridgecrest-city", method = RequestMethod.GET)
	public String getCaliforniaCityRidgecrestcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "660704");
		return "CaliforniaCityRidgecrestcity";
	}   
@RequestMapping(value = "/states/Ohio/metros/Mansfield", method = RequestMethod.GET)
	public String getOhioMetroMansfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31900");
		return "OhioMetroMansfield";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Aiken-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityAikencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4500550");
		return "South_CarolinaCityAikencity";
	}   
@RequestMapping(value = "/states/California/cities/Milpitas-city", method = RequestMethod.GET)
	public String getCaliforniaCityMilpitascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "647766");
		return "CaliforniaCityMilpitascity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Faulkner-County", method = RequestMethod.GET)
	public String getArkansasCountyFaulknerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5045");
		return "ArkansasCountyFaulknerCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/metros/Beckley", method = RequestMethod.GET)
	public String getWest_VirginiaMetroBeckley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13220");
		return "West_VirginiaMetroBeckley";
	}   
@RequestMapping(value = "/states/Arizona/cities/Yuma-city", method = RequestMethod.GET)
	public String getArizonaCityYumacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "485540");
		return "ArizonaCityYumacity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Woodburn-city", method = RequestMethod.GET)
	public String getOregonCityWoodburncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4183750");
		return "OregonCityWoodburncity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Charlottesville-city", method = RequestMethod.GET)
	public String getVirginiaCountyCharlottesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51540");
		return "VirginiaCountyCharlottesvillecity";
	}   
@RequestMapping(value = "/states/New-York/cities/White-Plains-city", method = RequestMethod.GET)
	public String getNew_YorkCityWhitePlainscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3681677");
		return "New_YorkCityWhitePlainscity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Portage-city", method = RequestMethod.GET)
	public String getIndianaCityPortagecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1861092");
		return "IndianaCityPortagecity";
	}   
@RequestMapping(value = "/states/Arkansas/metros/Jonesboro", method = RequestMethod.GET)
	public String getArkansasMetroJonesboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27860");
		return "ArkansasMetroJonesboro";
	}   
@RequestMapping(value = "/states/Georgia/counties/Peach-County", method = RequestMethod.GET)
	public String getGeorgiaCountyPeachCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13225");
		return "GeorgiaCountyPeachCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Paulding-County", method = RequestMethod.GET)
	public String getGeorgiaCountyPauldingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13223");
		return "GeorgiaCountyPauldingCounty";
	}   
@RequestMapping(value = "/states/California/cities/Valinda", method = RequestMethod.GET)
	public String getCaliforniaCityValinda(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "681638");
		return "CaliforniaCityValinda";
	}   
@RequestMapping(value = "/states/Oklahoma/metros/Tulsa", method = RequestMethod.GET)
	public String getOklahomaMetroTulsa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46140");
		return "OklahomaMetroTulsa";
	}   
@RequestMapping(value = "/states/Georgia/counties/Pickens-County", method = RequestMethod.GET)
	public String getGeorgiaCountyPickensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13227");
		return "GeorgiaCountyPickensCounty";
	}   
@RequestMapping(value = "/states/California/cities/Delano-city", method = RequestMethod.GET)
	public String getCaliforniaCityDelanocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "618394");
		return "CaliforniaCityDelanocity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Greene-County", method = RequestMethod.GET)
	public String getArkansasCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5055");
		return "ArkansasCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Hempstead-County", method = RequestMethod.GET)
	public String getArkansasCountyHempsteadCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5057");
		return "ArkansasCountyHempsteadCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Joplin-city", method = RequestMethod.GET)
	public String getMissouriCityJoplincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2937592");
		return "MissouriCityJoplincity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Hot-Spring-County", method = RequestMethod.GET)
	public String getArkansasCountyHotSpringCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5059");
		return "ArkansasCountyHotSpringCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Yankton-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyYanktonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46135");
		return "South_DakotaCountyYanktonCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/San-Antonio-city", method = RequestMethod.GET)
	public String getTexasCitySanAntoniocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4865000");
		return "TexasCitySanAntoniocity";
	}   
@RequestMapping(value = "/states/Washington/cities/Maple-Valley-city", method = RequestMethod.GET)
	public String getWashingtonCityMapleValleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5343150");
		return "WashingtonCityMapleValleycity";
	}   
@RequestMapping(value = "/states/Florida/cities/Riverview", method = RequestMethod.GET)
	public String getFloridaCityRiverview(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1260950");
		return "FloridaCityRiverview";
	}   
@RequestMapping(value = "/states/Michigan/cities/Midland-city", method = RequestMethod.GET)
	public String getMichiganCityMidlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2653780");
		return "MichiganCityMidlandcity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Garland-County", method = RequestMethod.GET)
	public String getArkansasCountyGarlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5051");
		return "ArkansasCountyGarlandCounty";
	}   
@RequestMapping(value = "/states/Nevada/cities/Sparks-city", method = RequestMethod.GET)
	public String getNevadaCitySparkscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3268400");
		return "NevadaCitySparkscity";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Fayetteville", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroFayetteville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22180");
		return "North_CarolinaMetroFayetteville";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Conway-city", method = RequestMethod.GET)
	public String getArkansasCityConwaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "515190");
		return "ArkansasCityConwaycity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Huntington", method = RequestMethod.GET)
	public String getIndianaMicroHuntington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26540");
		return "IndianaMicroHuntington";
	}   
@RequestMapping(value = "/states/Michigan/cities/Eastpointe-city", method = RequestMethod.GET)
	public String getMichiganCityEastpointecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2624290");
		return "MichiganCityEastpointecity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Chesapeake-city", method = RequestMethod.GET)
	public String getVirginiaCountyChesapeakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51550");
		return "VirginiaCountyChesapeakecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Palmetto-Bay-village", method = RequestMethod.GET)
	public String getFloridaCityPalmettoBayvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254275");
		return "FloridaCityPalmettoBayvillage";
	}   
@RequestMapping(value = "/states/Georgia/counties/Polk-County", method = RequestMethod.GET)
	public String getGeorgiaCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13233");
		return "GeorgiaCountyPolkCounty";
	}   
@RequestMapping(value = "/states/Washington/metros/Walla-Walla", method = RequestMethod.GET)
	public String getWashingtonMetroWallaWalla(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47460");
		return "WashingtonMetroWallaWalla";
	}   
@RequestMapping(value = "/states/Georgia/counties/Putnam-County", method = RequestMethod.GET)
	public String getGeorgiaCountyPutnamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13237");
		return "GeorgiaCountyPutnamCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Independence-County", method = RequestMethod.GET)
	public String getArkansasCountyIndependenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5063");
		return "ArkansasCountyIndependenceCounty";
	}   
@RequestMapping(value = "/states/Colorado/micros/Caon-City", method = RequestMethod.GET)
	public String getColoradoMicroCaonCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15860");
		return "ColoradoMicroCaonCity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Jefferson-County", method = RequestMethod.GET)
	public String getArkansasCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5069");
		return "ArkansasCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Louisiana/micros/Ruston", method = RequestMethod.GET)
	public String getLouisianaMicroRuston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40820");
		return "LouisianaMicroRuston";
	}   
@RequestMapping(value = "/states/New-York/cities/Long-Beach-city", method = RequestMethod.GET)
	public String getNew_YorkCityLongBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3643335");
		return "New_YorkCityLongBeachcity";
	}   
@RequestMapping(value = "/states/Idaho/micros/Moscow", method = RequestMethod.GET)
	public String getIdahoMicroMoscow(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34140");
		return "IdahoMicroMoscow";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Manchester", method = RequestMethod.GET)
	public String getConnecticutCityManchester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "944690");
		return "ConnecticutCityManchester";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Champlin-city", method = RequestMethod.GET)
	public String getMinnesotaCityChamplincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2710846");
		return "MinnesotaCityChamplincity";
	}   
@RequestMapping(value = "/states/Washington/cities/Renton-city", method = RequestMethod.GET)
	public String getWashingtonCityRentoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5357745");
		return "WashingtonCityRentoncity";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Mililani-Town", method = RequestMethod.GET)
	public String getHawaiiCityMililaniTown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1551050");
		return "HawaiiCityMililaniTown";
	}   
@RequestMapping(value = "/states/Virginia/cities/Springfield", method = RequestMethod.GET)
	public String getVirginiaCitySpringfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5174592");
		return "VirginiaCitySpringfield";
	}   
@RequestMapping(value = "/states/California/cities/Brea-city", method = RequestMethod.GET)
	public String getCaliforniaCityBreacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "608100");
		return "CaliforniaCityBreacity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Plymouth", method = RequestMethod.GET)
	public String getIndianaMicroPlymouth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38500");
		return "IndianaMicroPlymouth";
	}   
@RequestMapping(value = "/states/North-Dakota/micros/Williston", method = RequestMethod.GET)
	public String getNorth_DakotaMicroWilliston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48780");
		return "North_DakotaMicroWilliston";
	}   
@RequestMapping(value = "/states/Georgia/counties/Monroe-County", method = RequestMethod.GET)
	public String getGeorgiaCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13207");
		return "GeorgiaCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Mitchell-County", method = RequestMethod.GET)
	public String getGeorgiaCountyMitchellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13205");
		return "GeorgiaCountyMitchellCounty";
	}   
@RequestMapping(value = "/states/Colorado/counties/Pueblo-County", method = RequestMethod.GET)
	public String getColoradoCountyPuebloCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8101");
		return "ColoradoCountyPuebloCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/New-Braunfels-city", method = RequestMethod.GET)
	public String getTexasCityNewBraunfelscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4850820");
		return "TexasCityNewBraunfelscity";
	}   
@RequestMapping(value = "/states/Texas/metros/Abilene", method = RequestMethod.GET)
	public String getTexasMetroAbilene(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10180");
		return "TexasMetroAbilene";
	}   
@RequestMapping(value = "/states/New-York/cities/Plainview", method = RequestMethod.GET)
	public String getNew_YorkCityPlainview(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3658442");
		return "New_YorkCityPlainview";
	}   
@RequestMapping(value = "/states/Kentucky/metros/Bowling-Green", method = RequestMethod.GET)
	public String getKentuckyMetroBowlingGreen(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14540");
		return "KentuckyMetroBowlingGreen";
	}   
@RequestMapping(value = "/states/Georgia/cities/Macon-city", method = RequestMethod.GET)
	public String getGeorgiaCityMaconcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1349000");
		return "GeorgiaCityMaconcity";
	}   
@RequestMapping(value = "/states/New-York/cities/Massapequa", method = RequestMethod.GET)
	public String getNew_YorkCityMassapequa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3645986");
		return "New_YorkCityMassapequa";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Newport", method = RequestMethod.GET)
	public String getTennesseeMicroNewport(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35460");
		return "TennesseeMicroNewport";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Johnson-County", method = RequestMethod.GET)
	public String getArkansasCountyJohnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5071");
		return "ArkansasCountyJohnsonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Spartanburg-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCitySpartanburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4568290");
		return "South_CarolinaCitySpartanburgcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Freeport-city", method = RequestMethod.GET)
	public String getIllinoisCityFreeportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1727884");
		return "IllinoisCityFreeportcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Oconee-County", method = RequestMethod.GET)
	public String getGeorgiaCountyOconeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13219");
		return "GeorgiaCountyOconeeCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Clarksville-town", method = RequestMethod.GET)
	public String getIndianaCityClarksvilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1812934");
		return "IndianaCityClarksvilletown";
	}   
@RequestMapping(value = "/states/Georgia/counties/Murray-County", method = RequestMethod.GET)
	public String getGeorgiaCountyMurrayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13213");
		return "GeorgiaCountyMurrayCounty";
	}   
@RequestMapping(value = "/states/California/metros/Redding", method = RequestMethod.GET)
	public String getCaliforniaMetroRedding(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39820");
		return "CaliforniaMetroRedding";
	}   
@RequestMapping(value = "/states/Ohio/cities/Austintown", method = RequestMethod.GET)
	public String getOhioCityAustintown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3903184");
		return "OhioCityAustintown";
	}   
@RequestMapping(value = "/states/Georgia/counties/Newton-County", method = RequestMethod.GET)
	public String getGeorgiaCountyNewtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13217");
		return "GeorgiaCountyNewtonCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Apple-Valley-city", method = RequestMethod.GET)
	public String getMinnesotaCityAppleValleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2701900");
		return "MinnesotaCityAppleValleycity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Muscogee-County", method = RequestMethod.GET)
	public String getGeorgiaCountyMuscogeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13215");
		return "GeorgiaCountyMuscogeeCounty";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Crossville", method = RequestMethod.GET)
	public String getTennesseeMicroCrossville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18900");
		return "TennesseeMicroCrossville";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Cruz-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaCruzcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "669112");
		return "CaliforniaCitySantaCruzcity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Lonoke-County", method = RequestMethod.GET)
	public String getArkansasCountyLonokeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5085");
		return "ArkansasCountyLonokeCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/counties/Pennington-County", method = RequestMethod.GET)
	public String getSouth_DakotaCountyPenningtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46103");
		return "South_DakotaCountyPenningtonCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Oshkosh-Neenah", method = RequestMethod.GET)
	public String getWisconsinMetroOshkoshNeenah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36780");
		return "WisconsinMetroOshkoshNeenah";
	}   
@RequestMapping(value = "/states/Colorado/counties/Summit-County", method = RequestMethod.GET)
	public String getColoradoCountySummitCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8117");
		return "ColoradoCountySummitCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/East-Peoria-city", method = RequestMethod.GET)
	public String getIllinoisCityEastPeoriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1722164");
		return "IllinoisCityEastPeoriacity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Logan-County", method = RequestMethod.GET)
	public String getArkansasCountyLoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5083");
		return "ArkansasCountyLoganCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Winter-Garden-city", method = RequestMethod.GET)
	public String getFloridaCityWinterGardencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1278250");
		return "FloridaCityWinterGardencity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Arecibo-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityArecibozonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7203368");
		return "Puerto_RicoCityArecibozonaurbana";
	}   
@RequestMapping(value = "/states/Washington/cities/Federal-Way-city", method = RequestMethod.GET)
	public String getWashingtonCityFederalWaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5323515");
		return "WashingtonCityFederalWaycity";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Hilton-Head-Island-town", method = RequestMethod.GET)
	public String getSouth_CarolinaCityHiltonHeadIslandtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4534045");
		return "South_CarolinaCityHiltonHeadIslandtown";
	}   
@RequestMapping(value = "/states/Alabama/metros/Gadsden", method = RequestMethod.GET)
	public String getAlabamaMetroGadsden(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23460");
		return "AlabamaMetroGadsden";
	}   
@RequestMapping(value = "/states/Michigan/cities/Sterling-Heights-city", method = RequestMethod.GET)
	public String getMichiganCitySterlingHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2676460");
		return "MichiganCitySterlingHeightscity";
	}   
@RequestMapping(value = "/states/Texas/cities/Marshall-city", method = RequestMethod.GET)
	public String getTexasCityMarshallcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4846776");
		return "TexasCityMarshallcity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Tullahoma-Manchester", method = RequestMethod.GET)
	public String getTennesseeMicroTullahomaManchester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46100");
		return "TennesseeMicroTullahomaManchester";
	}   
@RequestMapping(value = "/states/Colorado/counties/Routt-County", method = RequestMethod.GET)
	public String getColoradoCountyRouttCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8107");
		return "ColoradoCountyRouttCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Youngstown-city", method = RequestMethod.GET)
	public String getOhioCityYoungstowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3988000");
		return "OhioCityYoungstowncity";
	}   
@RequestMapping(value = "/states/Florida/cities/The-Villages", method = RequestMethod.GET)
	public String getFloridaCityTheVillages(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271625");
		return "FloridaCityTheVillages";
	}   
@RequestMapping(value = "/states/Missouri/cities/Kansas-City-city", method = RequestMethod.GET)
	public String getMissouriCityKansasCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2938000");
		return "MissouriCityKansasCitycity";
	}   
@RequestMapping(value = "/states/Colorado/counties/Weld-County", method = RequestMethod.GET)
	public String getColoradoCountyWeldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8123");
		return "ColoradoCountyWeldCounty";
	}   
@RequestMapping(value = "/states/California/cities/San-Dimas-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanDimascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "666070");
		return "CaliforniaCitySanDimascity";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Cabot-city", method = RequestMethod.GET)
	public String getArkansasCityCabotcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "510300");
		return "ArkansasCityCabotcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Huntingdon", method = RequestMethod.GET)
	public String getPennsylvaniaMicroHuntingdon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26500");
		return "PennsylvaniaMicroHuntingdon";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Miller-County", method = RequestMethod.GET)
	public String getArkansasCountyMillerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5091");
		return "ArkansasCountyMillerCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Mississippi-County", method = RequestMethod.GET)
	public String getArkansasCountyMississippiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5093");
		return "ArkansasCountyMississippiCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Dix-Hills", method = RequestMethod.GET)
	public String getNew_YorkCityDixHills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3620687");
		return "New_YorkCityDixHills";
	}   
@RequestMapping(value = "/states/Virginia/counties/Danville-city", method = RequestMethod.GET)
	public String getVirginiaCountyDanvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51590");
		return "VirginiaCountyDanvillecity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Blacksburg-town", method = RequestMethod.GET)
	public String getVirginiaCityBlacksburgtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5107784");
		return "VirginiaCityBlacksburgtown";
	}   
@RequestMapping(value = "/states/New-Mexico/metros/Farmington", method = RequestMethod.GET)
	public String getNew_MexicoMetroFarmington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22140");
		return "New_MexicoMetroFarmington";
	}   
@RequestMapping(value = "/states/North-Dakota/micros/Wahpeton", method = RequestMethod.GET)
	public String getNorth_DakotaMicroWahpeton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47420");
		return "North_DakotaMicroWahpeton";
	}   
@RequestMapping(value = "/states/Colorado/counties/Teller-County", method = RequestMethod.GET)
	public String getColoradoCountyTellerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "8119");
		return "ColoradoCountyTellerCounty";
	}   
@RequestMapping(value = "/states/California/cities/Orangevale", method = RequestMethod.GET)
	public String getCaliforniaCityOrangevale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "654092");
		return "CaliforniaCityOrangevale";
	}   
@RequestMapping(value = "/states/Utah/cities/Cedar-City-city", method = RequestMethod.GET)
	public String getUtahCityCedarCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4911320");
		return "UtahCityCedarCitycity";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Shawnee", method = RequestMethod.GET)
	public String getOklahomaMicroShawnee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43060");
		return "OklahomaMicroShawnee";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Brookhaven", method = RequestMethod.GET)
	public String getMississippiMicroBrookhaven(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15020");
		return "MississippiMicroBrookhaven";
	}   
@RequestMapping(value = "/states/Texas/cities/Georgetown-city", method = RequestMethod.GET)
	public String getTexasCityGeorgetowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4829336");
		return "TexasCityGeorgetowncity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Marshalltown-city", method = RequestMethod.GET)
	public String getIowaCityMarshalltowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1949755");
		return "IowaCityMarshalltowncity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Beltrami-County", method = RequestMethod.GET)
	public String getMinnesotaCountyBeltramiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27007");
		return "MinnesotaCountyBeltramiCounty";
	}   
@RequestMapping(value = "/states/Montana/cities/Billings-city", method = RequestMethod.GET)
	public String getMontanaCityBillingscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3006550");
		return "MontanaCityBillingscity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Becker-County", method = RequestMethod.GET)
	public String getMinnesotaCountyBeckerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27005");
		return "MinnesotaCountyBeckerCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Grant-County", method = RequestMethod.GET)
	public String getWisconsinCountyGrantCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55043");
		return "WisconsinCountyGrantCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Benton-County", method = RequestMethod.GET)
	public String getMinnesotaCountyBentonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27009");
		return "MinnesotaCountyBentonCounty";
	}   
@RequestMapping(value = "/states/California/micros/Eureka-Arcata-Fortuna", method = RequestMethod.GET)
	public String getCaliforniaMicroEurekaArcataFortuna(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21700");
		return "CaliforniaMicroEurekaArcataFortuna";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Green-County", method = RequestMethod.GET)
	public String getWisconsinCountyGreenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55045");
		return "WisconsinCountyGreenCounty";
	}   
@RequestMapping(value = "/states/Wyoming/micros/Laramie", method = RequestMethod.GET)
	public String getWyomingMicroLaramie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29660");
		return "WyomingMicroLaramie";
	}   
@RequestMapping(value = "/states/California/cities/Garden-Grove-city", method = RequestMethod.GET)
	public String getCaliforniaCityGardenGrovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "629000");
		return "CaliforniaCityGardenGrovecity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Anoka-County", method = RequestMethod.GET)
	public String getMinnesotaCountyAnokaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27003");
		return "MinnesotaCountyAnokaCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Iowa-County", method = RequestMethod.GET)
	public String getWisconsinCountyIowaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55049");
		return "WisconsinCountyIowaCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Lincoln", method = RequestMethod.GET)
	public String getIllinoisMicroLincoln(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30660");
		return "IllinoisMicroLincoln";
	}   
@RequestMapping(value = "/states/Missouri/cities/OFallon-city", method = RequestMethod.GET)
	public String getMissouriCityOFalloncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2954074");
		return "MissouriCityOFalloncity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Brighton-city", method = RequestMethod.GET)
	public String getColoradoCityBrightoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "808675");
		return "ColoradoCityBrightoncity";
	}   
@RequestMapping(value = "/states/California/cities/La-Habra-city", method = RequestMethod.GET)
	public String getCaliforniaCityLaHabracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639290");
		return "CaliforniaCityLaHabracity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Rosemount-city", method = RequestMethod.GET)
	public String getMinnesotaCityRosemountcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2755726");
		return "MinnesotaCityRosemountcity";
	}   
@RequestMapping(value = "/states/California/cities/Colton-city", method = RequestMethod.GET)
	public String getCaliforniaCityColtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "614890");
		return "CaliforniaCityColtoncity";
	}   
@RequestMapping(value = "/states/New-York/cities/Elmira-city", method = RequestMethod.GET)
	public String getNew_YorkCityElmiracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3624229");
		return "New_YorkCityElmiracity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Carver-County", method = RequestMethod.GET)
	public String getMinnesotaCountyCarverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27019");
		return "MinnesotaCountyCarverCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Carlton-County", method = RequestMethod.GET)
	public String getMinnesotaCountyCarltonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27017");
		return "MinnesotaCountyCarltonCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Parkland", method = RequestMethod.GET)
	public String getWashingtonCityParkland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5353335");
		return "WashingtonCityParkland";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Jackson-County", method = RequestMethod.GET)
	public String getWisconsinCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55053");
		return "WisconsinCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Martinez", method = RequestMethod.GET)
	public String getGeorgiaCityMartinez(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1350036");
		return "GeorgiaCityMartinez";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Woodward", method = RequestMethod.GET)
	public String getOklahomaMicroWoodward(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49260");
		return "OklahomaMicroWoodward";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Juneau-County", method = RequestMethod.GET)
	public String getWisconsinCountyJuneauCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55057");
		return "WisconsinCountyJuneauCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Asheville-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityAshevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3702140");
		return "North_CarolinaCityAshevillecity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Jefferson-County", method = RequestMethod.GET)
	public String getWisconsinCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55055");
		return "WisconsinCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Kendallville", method = RequestMethod.GET)
	public String getIndianaMicroKendallville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28340");
		return "IndianaMicroKendallville";
	}   
@RequestMapping(value = "/states/Texas/cities/Balch-Springs-city", method = RequestMethod.GET)
	public String getTexasCityBalchSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4805372");
		return "TexasCityBalchSpringscity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Brown-County", method = RequestMethod.GET)
	public String getMinnesotaCountyBrownCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27015");
		return "MinnesotaCountyBrownCounty";
	}   
@RequestMapping(value = "/states/California/cities/Daly-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityDalyCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "617918");
		return "CaliforniaCityDalyCitycity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Marion", method = RequestMethod.GET)
	public String getIndianaMicroMarion(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31980");
		return "IndianaMicroMarion";
	}   
@RequestMapping(value = "/states/California/cities/Glendale-city", method = RequestMethod.GET)
	public String getCaliforniaCityGlendalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "630000");
		return "CaliforniaCityGlendalecity";
	}   
@RequestMapping(value = "/states/California/cities/Salinas-city", method = RequestMethod.GET)
	public String getCaliforniaCitySalinascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "664224");
		return "CaliforniaCitySalinascity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Blue-Earth-County", method = RequestMethod.GET)
	public String getMinnesotaCountyBlueEarthCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27013");
		return "MinnesotaCountyBlueEarthCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Kenosha-County", method = RequestMethod.GET)
	public String getWisconsinCountyKenoshaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55059");
		return "WisconsinCountyKenoshaCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Vestavia-Hills-city", method = RequestMethod.GET)
	public String getAlabamaCityVestaviaHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "178552");
		return "AlabamaCityVestaviaHillscity";
	}   
@RequestMapping(value = "/states/Indiana/cities/West-Lafayette-city", method = RequestMethod.GET)
	public String getIndianaCityWestLafayettecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1882862");
		return "IndianaCityWestLafayettecity";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Searcy", method = RequestMethod.GET)
	public String getArkansasMicroSearcy(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42620");
		return "ArkansasMicroSearcy";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Ponce-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityPoncezonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7263820");
		return "Puerto_RicoCityPoncezonaurbana";
	}   
@RequestMapping(value = "/states/Hawaii/counties/Honolulu-County", method = RequestMethod.GET)
	public String getHawaiiCountyHonoluluCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15003");
		return "HawaiiCountyHonoluluCounty";
	}   
@RequestMapping(value = "/states/Hawaii/counties/Hawaii-County", method = RequestMethod.GET)
	public String getHawaiiCountyHawaiiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15001");
		return "HawaiiCountyHawaiiCounty";
	}   
@RequestMapping(value = "/states/Idaho/metros/Coeur-dAlene", method = RequestMethod.GET)
	public String getIdahoMetroCoeurdAlene(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17660");
		return "IdahoMetroCoeurdAlene";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Kewaunee-County", method = RequestMethod.GET)
	public String getWisconsinCountyKewauneeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55061");
		return "WisconsinCountyKewauneeCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Meriden-city", method = RequestMethod.GET)
	public String getConnecticutCityMeridencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "946450");
		return "ConnecticutCityMeridencity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/La-Crosse-County", method = RequestMethod.GET)
	public String getWisconsinCountyLaCrosseCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55063");
		return "WisconsinCountyLaCrosseCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Lincoln-County", method = RequestMethod.GET)
	public String getWisconsinCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55069");
		return "WisconsinCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Langlade-County", method = RequestMethod.GET)
	public String getWisconsinCountyLangladeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55067");
		return "WisconsinCountyLangladeCounty";
	}   
@RequestMapping(value = "/states/Hawaii/counties/Kauai-County", method = RequestMethod.GET)
	public String getHawaiiCountyKauaiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15007");
		return "HawaiiCountyKauaiCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Oak-Forest-city", method = RequestMethod.GET)
	public String getIllinoisCityOakForestcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1754638");
		return "IllinoisCityOakForestcity";
	}   
@RequestMapping(value = "/states/Washington/cities/SeaTac-city", method = RequestMethod.GET)
	public String getWashingtonCitySeaTaccity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5362288");
		return "WashingtonCitySeaTaccity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Johns-Creek-city", method = RequestMethod.GET)
	public String getGeorgiaCityJohnsCreekcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1342425");
		return "GeorgiaCityJohnsCreekcity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Tuscaloosa-city", method = RequestMethod.GET)
	public String getAlabamaCityTuscaloosacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "177256");
		return "AlabamaCityTuscaloosacity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Fridley-city", method = RequestMethod.GET)
	public String getMinnesotaCityFridleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2722814");
		return "MinnesotaCityFridleycity";
	}   
@RequestMapping(value = "/states/Hawaii/counties/Maui-County", method = RequestMethod.GET)
	public String getHawaiiCountyMauiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15009");
		return "HawaiiCountyMauiCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Rahway-city", method = RequestMethod.GET)
	public String getNew_JerseyCityRahwaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3461530");
		return "New_JerseyCityRahwaycity";
	}   
@RequestMapping(value = "/states/New-York/cities/Central-Islip", method = RequestMethod.GET)
	public String getNew_YorkCityCentralIslip(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3613552");
		return "New_YorkCityCentralIslip";
	}   
@RequestMapping(value = "/states/Texas/cities/Temple-city", method = RequestMethod.GET)
	public String getTexasCityTemplecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4872176");
		return "TexasCityTemplecity";
	}   
@RequestMapping(value = "/states/Florida/micros/Palatka", method = RequestMethod.GET)
	public String getFloridaMicroPalatka(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37260");
		return "FloridaMicroPalatka";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Lebanon-city", method = RequestMethod.GET)
	public String getTennesseeCityLebanoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4741520");
		return "TennesseeCityLebanoncity";
	}   
@RequestMapping(value = "/states/Georgia/micros/Cedartown", method = RequestMethod.GET)
	public String getGeorgiaMicroCedartown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16340");
		return "GeorgiaMicroCedartown";
	}   
@RequestMapping(value = "/states/South-Dakota/micros/Spearfish", method = RequestMethod.GET)
	public String getSouth_DakotaMicroSpearfish(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43940");
		return "South_DakotaMicroSpearfish";
	}   
@RequestMapping(value = "/states/Florida/cities/Keystone", method = RequestMethod.GET)
	public String getFloridaCityKeystone(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1236462");
		return "FloridaCityKeystone";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Manitowoc-County", method = RequestMethod.GET)
	public String getWisconsinCountyManitowocCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55071");
		return "WisconsinCountyManitowocCounty";
	}   
@RequestMapping(value = "/states/California/cities/Glendora-city", method = RequestMethod.GET)
	public String getCaliforniaCityGlendoracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "630014");
		return "CaliforniaCityGlendoracity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Parker-town", method = RequestMethod.GET)
	public String getColoradoCityParkertown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "857630");
		return "ColoradoCityParkertown";
	}   
@RequestMapping(value = "/states/Michigan/cities/Oak-Park-city", method = RequestMethod.GET)
	public String getMichiganCityOakParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2659920");
		return "MichiganCityOakParkcity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Marinette-County", method = RequestMethod.GET)
	public String getWisconsinCountyMarinetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55075");
		return "WisconsinCountyMarinetteCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Marathon-County", method = RequestMethod.GET)
	public String getWisconsinCountyMarathonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55073");
		return "WisconsinCountyMarathonCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Milwaukee-County", method = RequestMethod.GET)
	public String getWisconsinCountyMilwaukeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55079");
		return "WisconsinCountyMilwaukeeCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Ocala-city", method = RequestMethod.GET)
	public String getFloridaCityOcalacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1250750");
		return "FloridaCityOcalacity";
	}   
@RequestMapping(value = "/states/Florida/cities/DeLand-city", method = RequestMethod.GET)
	public String getFloridaCityDeLandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1216875");
		return "FloridaCityDeLandcity";
	}   
@RequestMapping(value = "/states/West-Virginia/micros/Point-Pleasant", method = RequestMethod.GET)
	public String getWest_VirginiaMicroPointPleasant(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38580");
		return "West_VirginiaMicroPointPleasant";
	}   
@RequestMapping(value = "/states/Georgia/counties/Troup-County", method = RequestMethod.GET)
	public String getGeorgiaCountyTroupCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13285");
		return "GeorgiaCountyTroupCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Oconto-County", method = RequestMethod.GET)
	public String getWisconsinCountyOcontoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55083");
		return "WisconsinCountyOcontoCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Concord-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityConcordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3714100");
		return "North_CarolinaCityConcordcity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Monroe-County", method = RequestMethod.GET)
	public String getWisconsinCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55081");
		return "WisconsinCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Outagamie-County", method = RequestMethod.GET)
	public String getWisconsinCountyOutagamieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55087");
		return "WisconsinCountyOutagamieCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Bradenton-city", method = RequestMethod.GET)
	public String getFloridaCityBradentoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1207950");
		return "FloridaCityBradentoncity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Galesburg-city", method = RequestMethod.GET)
	public String getIllinoisCityGalesburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1728326");
		return "IllinoisCityGalesburgcity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Oneida-County", method = RequestMethod.GET)
	public String getWisconsinCountyOneidaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55085");
		return "WisconsinCountyOneidaCounty";
	}   
@RequestMapping(value = "/states/Montana/cities/Great-Falls-city", method = RequestMethod.GET)
	public String getMontanaCityGreatFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3032800");
		return "MontanaCityGreatFallscity";
	}   
@RequestMapping(value = "/states/California/metros/Hanford-Corcoran", method = RequestMethod.GET)
	public String getCaliforniaMetroHanfordCorcoran(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25260");
		return "CaliforniaMetroHanfordCorcoran";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Kearny-town", method = RequestMethod.GET)
	public String getNew_JerseyCityKearnytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3436510");
		return "New_JerseyCityKearnytown";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Maryville-city", method = RequestMethod.GET)
	public String getTennesseeCityMaryvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4746380");
		return "TennesseeCityMaryvillecity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Ozaukee-County", method = RequestMethod.GET)
	public String getWisconsinCountyOzaukeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55089");
		return "WisconsinCountyOzaukeeCounty";
	}   
@RequestMapping(value = "/states/Ohio/metros/Lima", method = RequestMethod.GET)
	public String getOhioMetroLima(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30620");
		return "OhioMetroLima";
	}   
@RequestMapping(value = "/states/Michigan/cities/Battle-Creek-city", method = RequestMethod.GET)
	public String getMichiganCityBattleCreekcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2605920");
		return "MichiganCityBattleCreekcity";
	}   
@RequestMapping(value = "/states/Michigan/metros/LansingEast-Lansing", method = RequestMethod.GET)
	public String getMichiganMetroLansingEastLansing(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29620");
		return "MichiganMetroLansingEastLansing";
	}   
@RequestMapping(value = "/states/Illinois/cities/West-Chicago-city", method = RequestMethod.GET)
	public String getIllinoisCityWestChicagocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1780060");
		return "IllinoisCityWestChicagocity";
	}   
@RequestMapping(value = "/states/New-York/cities/Hempstead-village", method = RequestMethod.GET)
	public String getNew_YorkCityHempsteadvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3633139");
		return "New_YorkCityHempsteadvillage";
	}   
@RequestMapping(value = "/states/New-York/cities/Levittown", method = RequestMethod.GET)
	public String getNew_YorkCityLevittown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3642081");
		return "New_YorkCityLevittown";
	}   
@RequestMapping(value = "/states/Illinois/cities/Aurora-city", method = RequestMethod.GET)
	public String getIllinoisCityAuroracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1703012");
		return "IllinoisCityAuroracity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Upson-County", method = RequestMethod.GET)
	public String getGeorgiaCountyUpsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13293");
		return "GeorgiaCountyUpsonCounty";
	}   
@RequestMapping(value = "/states/Georgia/counties/Union-County", method = RequestMethod.GET)
	public String getGeorgiaCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13291");
		return "GeorgiaCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Duluth-city", method = RequestMethod.GET)
	public String getGeorgiaCityDuluthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1324600");
		return "GeorgiaCityDuluthcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Lauderhill-city", method = RequestMethod.GET)
	public String getFloridaCityLauderhillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239550");
		return "FloridaCityLauderhillcity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Council-Bluffs-city", method = RequestMethod.GET)
	public String getIowaCityCouncilBluffscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1916860");
		return "IowaCityCouncilBluffscity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Lake-Ridge", method = RequestMethod.GET)
	public String getVirginiaCityLakeRidge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5143432");
		return "VirginiaCityLakeRidge";
	}   
@RequestMapping(value = "/states/Georgia/counties/Walton-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWaltonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13297");
		return "GeorgiaCountyWaltonCounty";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Hattiesburg-city", method = RequestMethod.GET)
	public String getMississippiCityHattiesburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2831020");
		return "MississippiCityHattiesburgcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Walker-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWalkerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13295");
		return "GeorgiaCountyWalkerCounty";
	}   
@RequestMapping(value = "/states/Alabama/micros/Cullman", method = RequestMethod.GET)
	public String getAlabamaMicroCullman(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18980");
		return "AlabamaMicroCullman";
	}   
@RequestMapping(value = "/states/Texas/cities/Rosenberg-city", method = RequestMethod.GET)
	public String getTexasCityRosenbergcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4863284");
		return "TexasCityRosenbergcity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Pierce-County", method = RequestMethod.GET)
	public String getWisconsinCountyPierceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55093");
		return "WisconsinCountyPierceCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Brownsville-city", method = RequestMethod.GET)
	public String getTexasCityBrownsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4810768");
		return "TexasCityBrownsvillecity";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Portage-County", method = RequestMethod.GET)
	public String getWisconsinCountyPortageCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55097");
		return "WisconsinCountyPortageCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/counties/Polk-County", method = RequestMethod.GET)
	public String getWisconsinCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "55095");
		return "WisconsinCountyPolkCounty";
	}   
@RequestMapping(value = "/states/Alaska/cities/Fairbanks-city", method = RequestMethod.GET)
	public String getAlaskaCityFairbankscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "224230");
		return "AlaskaCityFairbankscity";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Rio-Rancho-city", method = RequestMethod.GET)
	public String getNew_MexicoCityRioRanchocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3563460");
		return "New_MexicoCityRioRanchocity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Gallatin-city", method = RequestMethod.GET)
	public String getTennesseeCityGallatincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4728540");
		return "TennesseeCityGallatincity";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Marinette", method = RequestMethod.GET)
	public String getWisconsinMicroMarinette(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31940");
		return "WisconsinMicroMarinette";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Columbus-city", method = RequestMethod.GET)
	public String getNebraskaCityColumbuscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3110110");
		return "NebraskaCityColumbuscity";
	}   
@RequestMapping(value = "/states/New-Hampshire/micros/Keene", method = RequestMethod.GET)
	public String getNew_HampshireMicroKeene(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28300");
		return "New_HampshireMicroKeene";
	}   
@RequestMapping(value = "/states/California/cities/Visalia-city", method = RequestMethod.GET)
	public String getCaliforniaCityVisaliacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "682954");
		return "CaliforniaCityVisaliacity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Ware-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13299");
		return "GeorgiaCountyWareCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Catalina-Foothills", method = RequestMethod.GET)
	public String getArizonaCityCatalinaFoothills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "411230");
		return "ArizonaCityCatalinaFoothills";
	}   
@RequestMapping(value = "/states/Maryland/cities/Lochearn", method = RequestMethod.GET)
	public String getMarylandCityLochearn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2447450");
		return "MarylandCityLochearn";
	}   
@RequestMapping(value = "/states/Indiana/micros/Bedford", method = RequestMethod.GET)
	public String getIndianaMicroBedford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13260");
		return "IndianaMicroBedford";
	}   
@RequestMapping(value = "/states/Georgia/counties/Sumter-County", method = RequestMethod.GET)
	public String getGeorgiaCountySumterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13261");
		return "GeorgiaCountySumterCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Carmel-city", method = RequestMethod.GET)
	public String getIndianaCityCarmelcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1810342");
		return "IndianaCityCarmelcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/micros/Coamo", method = RequestMethod.GET)
	public String getPuerto_RicoMicroCoamo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17620");
		return "Puerto_RicoMicroCoamo";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Shawnee-city", method = RequestMethod.GET)
	public String getOklahomaCityShawneecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4066800");
		return "OklahomaCityShawneecity";
	}   
@RequestMapping(value = "/states/Texas/cities/Galveston-city", method = RequestMethod.GET)
	public String getTexasCityGalvestoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4828068");
		return "TexasCityGalvestoncity";
	}   
@RequestMapping(value = "/states/California/cities/San-Diego-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanDiegocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "666000");
		return "CaliforniaCitySanDiegocity";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Tupelo", method = RequestMethod.GET)
	public String getMississippiMicroTupelo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46180");
		return "MississippiMicroTupelo";
	}   
@RequestMapping(value = "/states/New-York/cities/West-Islip", method = RequestMethod.GET)
	public String getNew_YorkCityWestIslip(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3680302");
		return "New_YorkCityWestIslip";
	}   
@RequestMapping(value = "/states/Ohio/cities/Zanesville-city", method = RequestMethod.GET)
	public String getOhioCityZanesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3988084");
		return "OhioCityZanesvillecity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Fond-du-Lac-city", method = RequestMethod.GET)
	public String getWisconsinCityFondduLaccity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5526275");
		return "WisconsinCityFondduLaccity";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Duncan-city", method = RequestMethod.GET)
	public String getOklahomaCityDuncancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4021900");
		return "OklahomaCityDuncancity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Tattnall-County", method = RequestMethod.GET)
	public String getGeorgiaCountyTattnallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13267");
		return "GeorgiaCountyTattnallCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Lauderdale-Lakes-city", method = RequestMethod.GET)
	public String getFloridaCityLauderdaleLakescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239525");
		return "FloridaCityLauderdaleLakescity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Raytown-city", method = RequestMethod.GET)
	public String getMissouriCityRaytowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2960788");
		return "MissouriCityRaytowncity";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Columbia-city", method = RequestMethod.GET)
	public String getTennesseeCityColumbiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4716540");
		return "TennesseeCityColumbiacity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Thomas-County", method = RequestMethod.GET)
	public String getGeorgiaCountyThomasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13275");
		return "GeorgiaCountyThomasCounty";
	}   
@RequestMapping(value = "/states/Nevada/micros/Pahrump", method = RequestMethod.GET)
	public String getNevadaMicroPahrump(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37220");
		return "NevadaMicroPahrump";
	}   
@RequestMapping(value = "/states/Iowa/metros/Cedar-Rapids", method = RequestMethod.GET)
	public String getIowaMetroCedarRapids(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16300");
		return "IowaMetroCedarRapids";
	}   
@RequestMapping(value = "/states/Florida/cities/Coral-Gables-city", method = RequestMethod.GET)
	public String getFloridaCityCoralGablescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1214250");
		return "FloridaCityCoralGablescity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Owings-Mills", method = RequestMethod.GET)
	public String getMarylandCityOwingsMills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2459425");
		return "MarylandCityOwingsMills";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Melrose-city", method = RequestMethod.GET)
	public String getMassachusettsCityMelrosecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2540115");
		return "MassachusettsCityMelrosecity";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/Spartanburg", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroSpartanburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43900");
		return "South_CarolinaMetroSpartanburg";
	}   
@RequestMapping(value = "/states/West-Virginia/metros/Huntington-Ashland", method = RequestMethod.GET)
	public String getWest_VirginiaMetroHuntingtonAshland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26580");
		return "West_VirginiaMetroHuntingtonAshland";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Mililani-Mauka", method = RequestMethod.GET)
	public String getHawaiiCityMililaniMauka(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1551000");
		return "HawaiiCityMililaniMauka";
	}   
@RequestMapping(value = "/states/Texas/cities/Bedford-city", method = RequestMethod.GET)
	public String getTexasCityBedfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4807132");
		return "TexasCityBedfordcity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Toombs-County", method = RequestMethod.GET)
	public String getGeorgiaCountyToombsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13279");
		return "GeorgiaCountyToombsCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Prescott-Valley-town", method = RequestMethod.GET)
	public String getArizonaCityPrescottValleytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "457450");
		return "ArizonaCityPrescottValleytown";
	}   
@RequestMapping(value = "/states/Virginia/counties/Alexandria-city", method = RequestMethod.GET)
	public String getVirginiaCountyAlexandriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51510");
		return "VirginiaCountyAlexandriacity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Lisle-village", method = RequestMethod.GET)
	public String getIllinoisCityLislevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1743939");
		return "IllinoisCityLislevillage";
	}   
@RequestMapping(value = "/states/Georgia/counties/Tift-County", method = RequestMethod.GET)
	public String getGeorgiaCountyTiftCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13277");
		return "GeorgiaCountyTiftCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Houma-city", method = RequestMethod.GET)
	public String getLouisianaCityHoumacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2236255");
		return "LouisianaCityHoumacity";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Wilmington", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroWilmington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48900");
		return "North_CarolinaMetroWilmington";
	}   
@RequestMapping(value = "/states/Colorado/micros/Sterling", method = RequestMethod.GET)
	public String getColoradoMicroSterling(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44540");
		return "ColoradoMicroSterling";
	}   
@RequestMapping(value = "/states/Ohio/micros/Defiance", method = RequestMethod.GET)
	public String getOhioMicroDefiance(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19580");
		return "OhioMicroDefiance";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Columbia-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityColumbiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4516000");
		return "South_CarolinaCityColumbiacity";
	}   
@RequestMapping(value = "/states/Florida/cities/Lakeland-city", method = RequestMethod.GET)
	public String getFloridaCityLakelandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1238250");
		return "FloridaCityLakelandcity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Cary-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityCarytown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3710740");
		return "North_CarolinaCityCarytown";
	}   
@RequestMapping(value = "/states/Texas/cities/Carrollton-city", method = RequestMethod.GET)
	public String getTexasCityCarrolltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4813024");
		return "TexasCityCarrolltoncity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Ashland-city", method = RequestMethod.GET)
	public String getOhioCityAshlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3902568");
		return "OhioCityAshlandcity";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Independence-city", method = RequestMethod.GET)
	public String getKentuckyCityIndependencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2139142");
		return "KentuckyCityIndependencecity";
	}   
@RequestMapping(value = "/states/Texas/cities/League-City-city", method = RequestMethod.GET)
	public String getTexasCityLeagueCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4841980");
		return "TexasCityLeagueCitycity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Tuckahoe", method = RequestMethod.GET)
	public String getVirginiaCityTuckahoe(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5179560");
		return "VirginiaCityTuckahoe";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Ardmore", method = RequestMethod.GET)
	public String getOklahomaMicroArdmore(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11620");
		return "OklahomaMicroArdmore";
	}   
@RequestMapping(value = "/states/Wyoming/micros/Riverton", method = RequestMethod.GET)
	public String getWyomingMicroRiverton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40180");
		return "WyomingMicroRiverton";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Rosa-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaRosacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670098");
		return "CaliforniaCitySantaRosacity";
	}   
@RequestMapping(value = "/states/Connecticut/micros/Torrington", method = RequestMethod.GET)
	public String getConnecticutMicroTorrington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45860");
		return "ConnecticutMicroTorrington";
	}   
@RequestMapping(value = "/states/Virginia/cities/Cave-Spring", method = RequestMethod.GET)
	public String getVirginiaCityCaveSpring(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5113720");
		return "VirginiaCityCaveSpring";
	}   
@RequestMapping(value = "/states/Virginia/cities/Danville-city", method = RequestMethod.GET)
	public String getVirginiaCityDanvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5121344");
		return "VirginiaCityDanvillecity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Cookeville", method = RequestMethod.GET)
	public String getTennesseeMicroCookeville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18260");
		return "TennesseeMicroCookeville";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Clara-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaClaracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "669084");
		return "CaliforniaCitySantaClaracity";
	}   
@RequestMapping(value = "/states/South-Carolina/micros/Greenwood", method = RequestMethod.GET)
	public String getSouth_CarolinaMicroGreenwood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24940");
		return "South_CarolinaMicroGreenwood";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Clarita-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaClaritacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "669088");
		return "CaliforniaCitySantaClaritacity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Adrian-city", method = RequestMethod.GET)
	public String getMichiganCityAdriancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2600440");
		return "MichiganCityAdriancity";
	}   
@RequestMapping(value = "/states/Texas/micros/Eagle-Pass", method = RequestMethod.GET)
	public String getTexasMicroEaglePass(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20580");
		return "TexasMicroEaglePass";
	}   
@RequestMapping(value = "/states/Michigan/micros/Adrian", method = RequestMethod.GET)
	public String getMichiganMicroAdrian(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10300");
		return "MichiganMicroAdrian";
	}   
@RequestMapping(value = "/states/Ohio/counties/Wyandot-County", method = RequestMethod.GET)
	public String getOhioCountyWyandotCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39175");
		return "OhioCountyWyandotCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Manitowoc-city", method = RequestMethod.GET)
	public String getWisconsinCityManitowoccity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5548500");
		return "WisconsinCityManitowoccity";
	}   
@RequestMapping(value = "/states/New-York/cities/Franklin-Square", method = RequestMethod.GET)
	public String getNew_YorkCityFranklinSquare(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3627309");
		return "New_YorkCityFranklinSquare";
	}   
@RequestMapping(value = "/states/Ohio/cities/Kent-city", method = RequestMethod.GET)
	public String getOhioCityKentcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3939872");
		return "OhioCityKentcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Williams-County", method = RequestMethod.GET)
	public String getOhioCountyWilliamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39171");
		return "OhioCountyWilliamsCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Everett-city", method = RequestMethod.GET)
	public String getMassachusettsCityEverettcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2521990");
		return "MassachusettsCityEverettcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Wood-County", method = RequestMethod.GET)
	public String getOhioCountyWoodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39173");
		return "OhioCountyWoodCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/McAlester", method = RequestMethod.GET)
	public String getOklahomaMicroMcAlester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32540");
		return "OklahomaMicroMcAlester";
	}   
@RequestMapping(value = "/states/New-York/cities/Elmont", method = RequestMethod.GET)
	public String getNew_YorkCityElmont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3624273");
		return "New_YorkCityElmont";
	}   
@RequestMapping(value = "/states/Ohio/cities/Sidney-city", method = RequestMethod.GET)
	public String getOhioCitySidneycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3972424");
		return "OhioCitySidneycity";
	}   
@RequestMapping(value = "/states/Utah/cities/St-George-city", method = RequestMethod.GET)
	public String getUtahCityStGeorgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4965330");
		return "UtahCityStGeorgecity";
	}   
@RequestMapping(value = "/states/California/cities/Laguna-Hills-city", method = RequestMethod.GET)
	public String getCaliforniaCityLagunaHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639220");
		return "CaliforniaCityLagunaHillscity";
	}   
@RequestMapping(value = "/states/Tennessee/metros/Jackson", method = RequestMethod.GET)
	public String getTennesseeMetroJackson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27180");
		return "TennesseeMetroJackson";
	}   
@RequestMapping(value = "/states/Iowa/micros/Ottumwa", method = RequestMethod.GET)
	public String getIowaMicroOttumwa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36900");
		return "IowaMicroOttumwa";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Brooklyn-Center-city", method = RequestMethod.GET)
	public String getMinnesotaCityBrooklynCentercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2707948");
		return "MinnesotaCityBrooklynCentercity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Phoenix-city", method = RequestMethod.GET)
	public String getArizonaCityPhoenixcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "455000");
		return "ArizonaCityPhoenixcity";
	}   
@RequestMapping(value = "/states/California/cities/South-Lake-Tahoe-city", method = RequestMethod.GET)
	public String getCaliforniaCitySouthLakeTahoecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673108");
		return "CaliforniaCitySouthLakeTahoecity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Warren-County", method = RequestMethod.GET)
	public String getOhioCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39165");
		return "OhioCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Hastings-city", method = RequestMethod.GET)
	public String getMinnesotaCityHastingscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2727530");
		return "MinnesotaCityHastingscity";
	}   
@RequestMapping(value = "/states/Texas/cities/Frisco-city", method = RequestMethod.GET)
	public String getTexasCityFriscocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4827684");
		return "TexasCityFriscocity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Washington-County", method = RequestMethod.GET)
	public String getOhioCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39167");
		return "OhioCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Topeka-city", method = RequestMethod.GET)
	public String getKansasCityTopekacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2071000");
		return "KansasCityTopekacity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Wayne-County", method = RequestMethod.GET)
	public String getOhioCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39169");
		return "OhioCountyWayneCounty";
	}   
@RequestMapping(value = "/states/California/cities/Costa-Mesa-city", method = RequestMethod.GET)
	public String getCaliforniaCityCostaMesacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "616532");
		return "CaliforniaCityCostaMesacity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Chesterfield-city", method = RequestMethod.GET)
	public String getMissouriCityChesterfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2913600");
		return "MissouriCityChesterfieldcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Van-Wert-County", method = RequestMethod.GET)
	public String getOhioCountyVanWertCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39161");
		return "OhioCountyVanWertCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Irving-city", method = RequestMethod.GET)
	public String getTexasCityIrvingcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4837000");
		return "TexasCityIrvingcity";
	}   
@RequestMapping(value = "/states/Alabama/metros/Montgomery", method = RequestMethod.GET)
	public String getAlabamaMetroMontgomery(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33860");
		return "AlabamaMetroMontgomery";
	}   
@RequestMapping(value = "/states/Illinois/cities/Grayslake-village", method = RequestMethod.GET)
	public String getIllinoisCityGrayslakevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1731121");
		return "IllinoisCityGrayslakevillage";
	}   
@RequestMapping(value = "/states/Illinois/cities/Park-Forest-village", method = RequestMethod.GET)
	public String getIllinoisCityParkForestvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1757732");
		return "IllinoisCityParkForestvillage";
	}   
@RequestMapping(value = "/states/Louisiana/metros/Baton-Rouge", method = RequestMethod.GET)
	public String getLouisianaMetroBatonRouge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12940");
		return "LouisianaMetroBatonRouge";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Bloomington-city", method = RequestMethod.GET)
	public String getMinnesotaCityBloomingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2706616");
		return "MinnesotaCityBloomingtoncity";
	}   
@RequestMapping(value = "/states/Georgia/cities/LaGrange-city", method = RequestMethod.GET)
	public String getGeorgiaCityLaGrangecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1344340");
		return "GeorgiaCityLaGrangecity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Summit-County", method = RequestMethod.GET)
	public String getOhioCountySummitCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39153");
		return "OhioCountySummitCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Stephenville", method = RequestMethod.GET)
	public String getTexasMicroStephenville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44500");
		return "TexasMicroStephenville";
	}   
@RequestMapping(value = "/states/Ohio/counties/Trumbull-County", method = RequestMethod.GET)
	public String getOhioCountyTrumbullCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39155");
		return "OhioCountyTrumbullCounty";
	}   
@RequestMapping(value = "/states/California/metros/RiversideSan-BernardinoOntario", method = RequestMethod.GET)
	public String getCaliforniaMetroRiversideSanBernardinoOntario(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40140");
		return "CaliforniaMetroRiversideSanBernardinoOntario";
	}   
@RequestMapping(value = "/states/Ohio/counties/Tuscarawas-County", method = RequestMethod.GET)
	public String getOhioCountyTuscarawasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39157");
		return "OhioCountyTuscarawasCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Decatur", method = RequestMethod.GET)
	public String getIndianaMicroDecatur(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19540");
		return "IndianaMicroDecatur";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Wagoner-County", method = RequestMethod.GET)
	public String getOklahomaCountyWagonerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40145");
		return "OklahomaCountyWagonerCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Union-County", method = RequestMethod.GET)
	public String getOhioCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39159");
		return "OhioCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Broomfield-city", method = RequestMethod.GET)
	public String getColoradoCityBroomfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "809280");
		return "ColoradoCityBroomfieldcity";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Tulsa-County", method = RequestMethod.GET)
	public String getOklahomaCountyTulsaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40143");
		return "OklahomaCountyTulsaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Washington-County", method = RequestMethod.GET)
	public String getOklahomaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40147");
		return "OklahomaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Stark-County", method = RequestMethod.GET)
	public String getOhioCountyStarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39151");
		return "OhioCountyStarkCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/Brownsville-Harlingen", method = RequestMethod.GET)
	public String getTexasMetroBrownsvilleHarlingen(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15180");
		return "TexasMetroBrownsvilleHarlingen";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Washington-County", method = RequestMethod.GET)
	public String getMinnesotaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27163");
		return "MinnesotaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/New-York-city", method = RequestMethod.GET)
	public String getNew_YorkCityNewYorkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3651000");
		return "New_YorkCityNewYorkcity";
	}   
@RequestMapping(value = "/states/California/cities/Laguna-Niguel-city", method = RequestMethod.GET)
	public String getCaliforniaCityLagunaNiguelcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639248");
		return "CaliforniaCityLagunaNiguelcity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Winona-County", method = RequestMethod.GET)
	public String getMinnesotaCountyWinonaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27169");
		return "MinnesotaCountyWinonaCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Newport-News-city", method = RequestMethod.GET)
	public String getVirginiaCityNewportNewscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5156000");
		return "VirginiaCityNewportNewscity";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Rogers-County", method = RequestMethod.GET)
	public String getOklahomaCountyRogersCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40131");
		return "OklahomaCountyRogersCounty";
	}   
@RequestMapping(value = "/states/Kansas/metros/Topeka", method = RequestMethod.GET)
	public String getKansasMetroTopeka(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45820");
		return "KansasMetroTopeka";
	}   
@RequestMapping(value = "/states/Maryland/cities/Severn", method = RequestMethod.GET)
	public String getMarylandCitySevern(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2471150");
		return "MarylandCitySevern";
	}   
@RequestMapping(value = "/states/Ohio/counties/Ross-County", method = RequestMethod.GET)
	public String getOhioCountyRossCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39141");
		return "OhioCountyRossCounty";
	}   
@RequestMapping(value = "/states/Kansas/micros/Salina", method = RequestMethod.GET)
	public String getKansasMicroSalina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41460");
		return "KansasMicroSalina";
	}   
@RequestMapping(value = "/states/Ohio/counties/Sandusky-County", method = RequestMethod.GET)
	public String getOhioCountySanduskyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39143");
		return "OhioCountySanduskyCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Sequoyah-County", method = RequestMethod.GET)
	public String getOklahomaCountySequoyahCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40135");
		return "OklahomaCountySequoyahCounty";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Dyersburg", method = RequestMethod.GET)
	public String getTennesseeMicroDyersburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20540");
		return "TennesseeMicroDyersburg";
	}   
@RequestMapping(value = "/states/Ohio/counties/Scioto-County", method = RequestMethod.GET)
	public String getOhioCountySciotoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39145");
		return "OhioCountySciotoCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Connersville", method = RequestMethod.GET)
	public String getIndianaMicroConnersville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18220");
		return "IndianaMicroConnersville";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Seminole-County", method = RequestMethod.GET)
	public String getOklahomaCountySeminoleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40133");
		return "OklahomaCountySeminoleCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Seneca-County", method = RequestMethod.GET)
	public String getOhioCountySenecaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39147");
		return "OhioCountySenecaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Texas-County", method = RequestMethod.GET)
	public String getOklahomaCountyTexasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40139");
		return "OklahomaCountyTexasCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Stephens-County", method = RequestMethod.GET)
	public String getOklahomaCountyStephensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40137");
		return "OklahomaCountyStephensCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Rolling-Meadows-city", method = RequestMethod.GET)
	public String getIllinoisCityRollingMeadowscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1765338");
		return "IllinoisCityRollingMeadowscity";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Greenwood", method = RequestMethod.GET)
	public String getMississippiMicroGreenwood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24900");
		return "MississippiMicroGreenwood";
	}   
@RequestMapping(value = "/states/Arizona/metros/Prescott", method = RequestMethod.GET)
	public String getArizonaMetroPrescott(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39140");
		return "ArizonaMetroPrescott";
	}   
@RequestMapping(value = "/states/Texas/counties/Comal-County", method = RequestMethod.GET)
	public String getTexasCountyComalCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48091");
		return "TexasCountyComalCounty";
	}   
@RequestMapping(value = "/states/Nevada/counties/Carson-City", method = RequestMethod.GET)
	public String getNevadaCountyCarsonCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32510");
		return "NevadaCountyCarsonCity";
	}   
@RequestMapping(value = "/states/Florida/cities/Town-n-Country", method = RequestMethod.GET)
	public String getFloridaCityTownnCountry(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1272145");
		return "FloridaCityTownnCountry";
	}   
@RequestMapping(value = "/states/Illinois/cities/Lombard-village", method = RequestMethod.GET)
	public String getIllinoisCityLombardvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1744407");
		return "IllinoisCityLombardvillage";
	}   
@RequestMapping(value = "/states/Ohio/counties/Shelby-County", method = RequestMethod.GET)
	public String getOhioCountyShelbyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39149");
		return "OhioCountyShelbyCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Graham", method = RequestMethod.GET)
	public String getWashingtonCityGraham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5327785");
		return "WashingtonCityGraham";
	}   
@RequestMapping(value = "/states/Texas/counties/Coryell-County", method = RequestMethod.GET)
	public String getTexasCountyCoryellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48099");
		return "TexasCountyCoryellCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Wright-County", method = RequestMethod.GET)
	public String getMinnesotaCountyWrightCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27171");
		return "MinnesotaCountyWrightCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Cooke-County", method = RequestMethod.GET)
	public String getTexasCountyCookeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48097");
		return "TexasCountyCookeCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Silver-Spring", method = RequestMethod.GET)
	public String getMarylandCitySilverSpring(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2472450");
		return "MarylandCitySilverSpring";
	}   
@RequestMapping(value = "/states/Ohio/counties/Pike-County", method = RequestMethod.GET)
	public String getOhioCountyPikeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39131");
		return "OhioCountyPikeCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Portage-County", method = RequestMethod.GET)
	public String getOhioCountyPortageCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39133");
		return "OhioCountyPortageCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Oxford-city", method = RequestMethod.GET)
	public String getAlabamaCityOxfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "157576");
		return "AlabamaCityOxfordcity";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Rogers-city", method = RequestMethod.GET)
	public String getArkansasCityRogerscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "560410");
		return "ArkansasCityRogerscity";
	}   
@RequestMapping(value = "/states/New-York/cities/Rochester-city", method = RequestMethod.GET)
	public String getNew_YorkCityRochestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3663000");
		return "New_YorkCityRochestercity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Preble-County", method = RequestMethod.GET)
	public String getOhioCountyPrebleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39135");
		return "OhioCountyPrebleCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Pontotoc-County", method = RequestMethod.GET)
	public String getOklahomaCountyPontotocCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40123");
		return "OklahomaCountyPontotocCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Selinsgrove", method = RequestMethod.GET)
	public String getPennsylvaniaMicroSelinsgrove(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42780");
		return "PennsylvaniaMicroSelinsgrove";
	}   
@RequestMapping(value = "/states/Ohio/counties/Putnam-County", method = RequestMethod.GET)
	public String getOhioCountyPutnamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39137");
		return "OhioCountyPutnamCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Pittsburg-County", method = RequestMethod.GET)
	public String getOklahomaCountyPittsburgCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40121");
		return "OklahomaCountyPittsburgCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Caguas-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityCaguaszonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7210334");
		return "Puerto_RicoCityCaguaszonaurbana";
	}   
@RequestMapping(value = "/states/New-York/cities/North-Tonawanda-city", method = RequestMethod.GET)
	public String getNew_YorkCityNorthTonawandacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3653682");
		return "New_YorkCityNorthTonawandacity";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Pottawatomie-County", method = RequestMethod.GET)
	public String getOklahomaCountyPottawatomieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40125");
		return "OklahomaCountyPottawatomieCounty";
	}   
@RequestMapping(value = "/states/Mississippi/metros/Jackson", method = RequestMethod.GET)
	public String getMississippiMetroJackson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27140");
		return "MississippiMetroJackson";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Sherburne-County", method = RequestMethod.GET)
	public String getMinnesotaCountySherburneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27141");
		return "MinnesotaCountySherburneCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Machesney-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityMachesneyParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1745726");
		return "IllinoisCityMachesneyParkvillage";
	}   
@RequestMapping(value = "/states/Maryland/cities/Pasadena", method = RequestMethod.GET)
	public String getMarylandCityPasadena(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2460475");
		return "MarylandCityPasadena";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Greensboro-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityGreensborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3728000");
		return "North_CarolinaCityGreensborocity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Steele-County", method = RequestMethod.GET)
	public String getMinnesotaCountySteeleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27147");
		return "MinnesotaCountySteeleCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Stearns-County", method = RequestMethod.GET)
	public String getMinnesotaCountyStearnsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27145");
		return "MinnesotaCountyStearnsCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Richland-County", method = RequestMethod.GET)
	public String getOhioCountyRichlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39139");
		return "OhioCountyRichlandCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Colorado-County", method = RequestMethod.GET)
	public String getTexasCountyColoradoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48089");
		return "TexasCountyColoradoCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Collin-County", method = RequestMethod.GET)
	public String getTexasCountyCollinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48085");
		return "TexasCountyCollinCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Schenectady-County", method = RequestMethod.GET)
	public String getNew_YorkCountySchenectadyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36093");
		return "New_YorkCountySchenectadyCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Saratoga-County", method = RequestMethod.GET)
	public String getNew_YorkCountySaratogaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36091");
		return "New_YorkCountySaratogaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Osage-County", method = RequestMethod.GET)
	public String getOklahomaCountyOsageCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40113");
		return "OklahomaCountyOsageCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Ottawa-County", method = RequestMethod.GET)
	public String getOhioCountyOttawaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39123");
		return "OhioCountyOttawaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Okmulgee-County", method = RequestMethod.GET)
	public String getOklahomaCountyOkmulgeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40111");
		return "OklahomaCountyOkmulgeeCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Seneca-County", method = RequestMethod.GET)
	public String getNew_YorkCountySenecaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36099");
		return "New_YorkCountySenecaCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Ottawa-County", method = RequestMethod.GET)
	public String getOklahomaCountyOttawaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40115");
		return "OklahomaCountyOttawaCounty";
	}   
@RequestMapping(value = "/states/Alaska/counties/Anchorage-Municipality", method = RequestMethod.GET)
	public String getAlaskaCountyAnchorageMunicipality(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2020");
		return "AlaskaCountyAnchorageMunicipality";
	}   
@RequestMapping(value = "/states/New-York/counties/Schoharie-County", method = RequestMethod.GET)
	public String getNew_YorkCountySchoharieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36095");
		return "New_YorkCountySchoharieCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Payne-County", method = RequestMethod.GET)
	public String getOklahomaCountyPayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40119");
		return "OklahomaCountyPayneCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Newnan-city", method = RequestMethod.GET)
	public String getGeorgiaCityNewnancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1355020");
		return "GeorgiaCityNewnancity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Todd-County", method = RequestMethod.GET)
	public String getMinnesotaCountyToddCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27153");
		return "MinnesotaCountyToddCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Chambers-County", method = RequestMethod.GET)
	public String getTexasCountyChambersCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48071");
		return "TexasCountyChambersCounty";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Batesville", method = RequestMethod.GET)
	public String getArkansasMicroBatesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12900");
		return "ArkansasMicroBatesville";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Wabasha-County", method = RequestMethod.GET)
	public String getMinnesotaCountyWabashaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27157");
		return "MinnesotaCountyWabashaCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Perry-County", method = RequestMethod.GET)
	public String getOhioCountyPerryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39127");
		return "OhioCountyPerryCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Pickaway-County", method = RequestMethod.GET)
	public String getOhioCountyPickawayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39129");
		return "OhioCountyPickawayCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Cherokee-County", method = RequestMethod.GET)
	public String getTexasCountyCherokeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48073");
		return "TexasCountyCherokeeCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Ponca-City-city", method = RequestMethod.GET)
	public String getOklahomaCityPoncaCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4059850");
		return "OklahomaCityPoncaCitycity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Breckinridge-County", method = RequestMethod.GET)
	public String getKentuckyCountyBreckinridgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21027");
		return "KentuckyCountyBreckinridgeCounty";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Monica-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaMonicacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670000");
		return "CaliforniaCitySantaMonicacity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Sayreville-borough", method = RequestMethod.GET)
	public String getNew_JerseyCitySayrevilleborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3465790");
		return "New_JerseyCitySayrevilleborough";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Boyle-County", method = RequestMethod.GET)
	public String getKentuckyCountyBoyleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21021");
		return "KentuckyCountyBoyleCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Mount-Airy", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroMountAiry(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34340");
		return "North_CarolinaMicroMountAiry";
	}   
@RequestMapping(value = "/states/Georgia/cities/Stockbridge-city", method = RequestMethod.GET)
	public String getGeorgiaCityStockbridgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1373704");
		return "GeorgiaCityStockbridgecity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Bullitt-County", method = RequestMethod.GET)
	public String getKentuckyCountyBullittCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21029");
		return "KentuckyCountyBullittCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Strafford-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyStraffordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33017");
		return "New_HampshireCountyStraffordCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Rockingham-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyRockinghamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33015");
		return "New_HampshireCountyRockinghamCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Merrimack-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyMerrimackCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33013");
		return "New_HampshireCountyMerrimackCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Hillsborough-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyHillsboroughCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33011");
		return "New_HampshireCountyHillsboroughCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Shoreview-city", method = RequestMethod.GET)
	public String getMinnesotaCityShoreviewcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2759998");
		return "MinnesotaCityShoreviewcity";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Elizabeth-City", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroElizabethCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21020");
		return "North_CarolinaMicroElizabethCity";
	}   
@RequestMapping(value = "/states/Illinois/micros/Pontiac", method = RequestMethod.GET)
	public String getIllinoisMicroPontiac(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38700");
		return "IllinoisMicroPontiac";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Wilson", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroWilson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48980");
		return "North_CarolinaMicroWilson";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Sullivan-County", method = RequestMethod.GET)
	public String getNew_HampshireCountySullivanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33019");
		return "New_HampshireCountySullivanCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Campbell-County", method = RequestMethod.GET)
	public String getKentuckyCountyCampbellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21037");
		return "KentuckyCountyCampbellCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Calloway-County", method = RequestMethod.GET)
	public String getKentuckyCountyCallowayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21035");
		return "KentuckyCountyCallowayCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/metros/Aguadilla-Isabela", method = RequestMethod.GET)
	public String getPuerto_RicoMetroAguadillaIsabela(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10380");
		return "Puerto_RicoMetroAguadillaIsabela";
	}   
@RequestMapping(value = "/states/Oregon/cities/Medford-city", method = RequestMethod.GET)
	public String getOregonCityMedfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4147000");
		return "OregonCityMedfordcity";
	}   
@RequestMapping(value = "/states/Michigan/metros/NilesBenton-Harbor", method = RequestMethod.GET)
	public String getMichiganMetroNilesBentonHarbor(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35660");
		return "MichiganMetroNilesBentonHarbor";
	}   
@RequestMapping(value = "/states/Ohio/cities/Barberton-city", method = RequestMethod.GET)
	public String getOhioCityBarbertoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3903828");
		return "OhioCityBarbertoncity";
	}   
@RequestMapping(value = "/states/California/cities/Winter-Gardens", method = RequestMethod.GET)
	public String getCaliforniaCityWinterGardens(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "685992");
		return "CaliforniaCityWinterGardens";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Ana-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaAnacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "669000");
		return "CaliforniaCitySantaAnacity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Milwaukee-city", method = RequestMethod.GET)
	public String getWisconsinCityMilwaukeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5553000");
		return "WisconsinCityMilwaukeecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Winter-Springs-city", method = RequestMethod.GET)
	public String getFloridaCityWinterSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1278325");
		return "FloridaCityWinterSpringscity";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Coos-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyCoosCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33007");
		return "New_HampshireCountyCoosCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Cheshire-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyCheshireCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33005");
		return "New_HampshireCountyCheshireCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Canyon-Lake", method = RequestMethod.GET)
	public String getTexasCityCanyonLake(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4812580");
		return "TexasCityCanyonLake";
	}   
@RequestMapping(value = "/states/Virginia/cities/West-Springfield", method = RequestMethod.GET)
	public String getVirginiaCityWestSpringfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5184976");
		return "VirginiaCityWestSpringfield";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Carroll-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33003");
		return "New_HampshireCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Santa-Fe-city", method = RequestMethod.GET)
	public String getNew_MexicoCitySantaFecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3570500");
		return "New_MexicoCitySantaFecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Orlando-city", method = RequestMethod.GET)
	public String getFloridaCityOrlandocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1253000");
		return "FloridaCityOrlandocity";
	}   
@RequestMapping(value = "/states/New-York/cities/Glen-Cove-city", method = RequestMethod.GET)
	public String getNew_YorkCityGlenCovecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3629113");
		return "New_YorkCityGlenCovecity";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Belknap-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyBelknapCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33001");
		return "New_HampshireCountyBelknapCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Bowie-city", method = RequestMethod.GET)
	public String getMarylandCityBowiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2408775");
		return "MarylandCityBowiecity";
	}   
@RequestMapping(value = "/states/Washington/metros/Bremerton-Silverdale", method = RequestMethod.GET)
	public String getWashingtonMetroBremertonSilverdale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14740");
		return "WashingtonMetroBremertonSilverdale";
	}   
@RequestMapping(value = "/states/New-Hampshire/counties/Grafton-County", method = RequestMethod.GET)
	public String getNew_HampshireCountyGraftonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33009");
		return "New_HampshireCountyGraftonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Egypt-LakeLeto", method = RequestMethod.GET)
	public String getFloridaCityEgyptLakeLeto(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1220108");
		return "FloridaCityEgyptLakeLeto";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Anderson-County", method = RequestMethod.GET)
	public String getKentuckyCountyAndersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21005");
		return "KentuckyCountyAndersonCounty";
	}   
@RequestMapping(value = "/states/Kentucky/metros/Owensboro", method = RequestMethod.GET)
	public String getKentuckyMetroOwensboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36980");
		return "KentuckyMetroOwensboro";
	}   
@RequestMapping(value = "/states/Idaho/micros/Twin-Falls", method = RequestMethod.GET)
	public String getIdahoMicroTwinFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46300");
		return "IdahoMicroTwinFalls";
	}   
@RequestMapping(value = "/states/Virginia/cities/Roanoke-city", method = RequestMethod.GET)
	public String getVirginiaCityRoanokecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5168000");
		return "VirginiaCityRoanokecity";
	}   
@RequestMapping(value = "/states/Texas/cities/Cloverleaf", method = RequestMethod.GET)
	public String getTexasCityCloverleaf(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4815628");
		return "TexasCityCloverleaf";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Barren-County", method = RequestMethod.GET)
	public String getKentuckyCountyBarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21009");
		return "KentuckyCountyBarrenCounty";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Vicksburg-city", method = RequestMethod.GET)
	public String getMississippiCityVicksburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2876720");
		return "MississippiCityVicksburgcity";
	}   
@RequestMapping(value = "/states/Illinois/micros/Galesburg", method = RequestMethod.GET)
	public String getIllinoisMicroGalesburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23660");
		return "IllinoisMicroGalesburg";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Stamford-city", method = RequestMethod.GET)
	public String getConnecticutCityStamfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "973000");
		return "ConnecticutCityStamfordcity";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Florence-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityFlorencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4525810");
		return "South_CarolinaCityFlorencecity";
	}   
@RequestMapping(value = "/states/Texas/cities/Rockwall-city", method = RequestMethod.GET)
	public String getTexasCityRockwallcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4862828");
		return "TexasCityRockwallcity";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Georgetown-city", method = RequestMethod.GET)
	public String getKentuckyCityGeorgetowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2130700");
		return "KentuckyCityGeorgetowncity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Boone-County", method = RequestMethod.GET)
	public String getKentuckyCountyBooneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21015");
		return "KentuckyCountyBooneCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Bell-County", method = RequestMethod.GET)
	public String getKentuckyCountyBellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21013");
		return "KentuckyCountyBellCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Warren", method = RequestMethod.GET)
	public String getPennsylvaniaMicroWarren(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47620");
		return "PennsylvaniaMicroWarren";
	}   
@RequestMapping(value = "/states/Michigan/cities/Madison-Heights-city", method = RequestMethod.GET)
	public String getMichiganCityMadisonHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2650560");
		return "MichiganCityMadisonHeightscity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Boyd-County", method = RequestMethod.GET)
	public String getKentuckyCountyBoydCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21019");
		return "KentuckyCountyBoydCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/East-St-Louis-city", method = RequestMethod.GET)
	public String getIllinoisCityEastStLouiscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1722255");
		return "IllinoisCityEastStLouiscity";
	}   
@RequestMapping(value = "/states/Florida/cities/Pinellas-Park-city", method = RequestMethod.GET)
	public String getFloridaCityPinellasParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1256975");
		return "FloridaCityPinellasParkcity";
	}   
@RequestMapping(value = "/states/Washington/cities/Bainbridge-Island-city", method = RequestMethod.GET)
	public String getWashingtonCityBainbridgeIslandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5303736");
		return "WashingtonCityBainbridgeIslandcity";
	}   
@RequestMapping(value = "/states/Wyoming/micros/Sheridan", method = RequestMethod.GET)
	public String getWyomingMicroSheridan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43260");
		return "WyomingMicroSheridan";
	}   
@RequestMapping(value = "/states/Connecticut/cities/New-Britain-city", method = RequestMethod.GET)
	public String getConnecticutCityNewBritaincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "950370");
		return "ConnecticutCityNewBritaincity";
	}   
@RequestMapping(value = "/states/New-York/cities/Hauppauge", method = RequestMethod.GET)
	public String getNew_YorkCityHauppauge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3632732");
		return "New_YorkCityHauppauge";
	}   
@RequestMapping(value = "/states/Georgia/cities/Augusta", method = RequestMethod.GET)
	public String getGeorgiaCityAugusta(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1304204");
		return "GeorgiaCityAugusta";
	}   
@RequestMapping(value = "/states/Texas/cities/Abilene-city", method = RequestMethod.GET)
	public String getTexasCityAbilenecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4801000");
		return "TexasCityAbilenecity";
	}   
@RequestMapping(value = "/states/Ohio/micros/Wilmington", method = RequestMethod.GET)
	public String getOhioMicroWilmington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48940");
		return "OhioMicroWilmington";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Ouachita-County", method = RequestMethod.GET)
	public String getArkansasCountyOuachitaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5103");
		return "ArkansasCountyOuachitaCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Sumter-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCitySumtercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4570405");
		return "South_CarolinaCitySumtercity";
	}   
@RequestMapping(value = "/states/Indiana/cities/Elkhart-city", method = RequestMethod.GET)
	public String getIndianaCityElkhartcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1820728");
		return "IndianaCityElkhartcity";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Alexandria-city", method = RequestMethod.GET)
	public String getLouisianaCityAlexandriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2200975");
		return "LouisianaCityAlexandriacity";
	}   
@RequestMapping(value = "/states/Florida/cities/Palm-RiverClair-Mel", method = RequestMethod.GET)
	public String getFloridaCityPalmRiverClairMel(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254387");
		return "FloridaCityPalmRiverClairMel";
	}   
@RequestMapping(value = "/states/Idaho/micros/Mountain-Home", method = RequestMethod.GET)
	public String getIdahoMicroMountainHome(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34300");
		return "IdahoMicroMountainHome";
	}   
@RequestMapping(value = "/states/Indiana/cities/Muncie-city", method = RequestMethod.GET)
	public String getIndianaCityMunciecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1851876");
		return "IndianaCityMunciecity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Prairie-Village-city", method = RequestMethod.GET)
	public String getKansasCityPrairieVillagecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2057575");
		return "KansasCityPrairieVillagecity";
	}   
@RequestMapping(value = "/states/Illinois/micros/Sterling", method = RequestMethod.GET)
	public String getIllinoisMicroSterling(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44580");
		return "IllinoisMicroSterling";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Arkadelphia", method = RequestMethod.GET)
	public String getArkansasMicroArkadelphia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11660");
		return "ArkansasMicroArkadelphia";
	}   
@RequestMapping(value = "/states/Kansas/cities/Manhattan-city", method = RequestMethod.GET)
	public String getKansasCityManhattancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2044250");
		return "KansasCityManhattancity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Poinsett-County", method = RequestMethod.GET)
	public String getArkansasCountyPoinsettCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5111");
		return "ArkansasCountyPoinsettCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Hamtramck-city", method = RequestMethod.GET)
	public String getMichiganCityHamtramckcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2636280");
		return "MichiganCityHamtramckcity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Polk-County", method = RequestMethod.GET)
	public String getArkansasCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5113");
		return "ArkansasCountyPolkCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Weston-city", method = RequestMethod.GET)
	public String getFloridaCityWestoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1276582");
		return "FloridaCityWestoncity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Burlington-city", method = RequestMethod.GET)
	public String getIowaCityBurlingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1909550");
		return "IowaCityBurlingtoncity";
	}   
@RequestMapping(value = "/states/Texas/micros/Lufkin", method = RequestMethod.GET)
	public String getTexasMicroLufkin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31260");
		return "TexasMicroLufkin";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Greenville-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityGreenvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3728080");
		return "North_CarolinaCityGreenvillecity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Winchester-city", method = RequestMethod.GET)
	public String getVirginiaCityWinchestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5186720");
		return "VirginiaCityWinchestercity";
	}   
@RequestMapping(value = "/states/Arizona/cities/San-Luis-city", method = RequestMethod.GET)
	public String getArizonaCitySanLuiscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "463470");
		return "ArizonaCitySanLuiscity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Sahuarita-town", method = RequestMethod.GET)
	public String getArizonaCitySahuaritatown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "462140");
		return "ArizonaCitySahuaritatown";
	}   
@RequestMapping(value = "/states/New-York/metros/New-YorkNewarkJersey-City", method = RequestMethod.GET)
	public String getNew_YorkMetroNewYorkNewarkJerseyCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35620");
		return "New_YorkMetroNewYorkNewarkJerseyCity";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Grenada", method = RequestMethod.GET)
	public String getMississippiMicroGrenada(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24980");
		return "MississippiMicroGrenada";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Phillips-County", method = RequestMethod.GET)
	public String getArkansasCountyPhillipsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5107");
		return "ArkansasCountyPhillipsCounty";
	}   
@RequestMapping(value = "/states/Missouri/micros/Branson", method = RequestMethod.GET)
	public String getMissouriMicroBranson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14700");
		return "MissouriMicroBranson";
	}   
@RequestMapping(value = "/states/Alaska/counties/Fairbanks-North-Star-Borough", method = RequestMethod.GET)
	public String getAlaskaCountyFairbanksNorthStarBorough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2090");
		return "AlaskaCountyFairbanksNorthStarBorough";
	}   
@RequestMapping(value = "/states/Virginia/cities/Waynesboro-city", method = RequestMethod.GET)
	public String getVirginiaCityWaynesborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5183680");
		return "VirginiaCityWaynesborocity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/St-Francis-County", method = RequestMethod.GET)
	public String getArkansasCountyStFrancisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5123");
		return "ArkansasCountyStFrancisCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Saline-County", method = RequestMethod.GET)
	public String getArkansasCountySalineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5125");
		return "ArkansasCountySalineCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/Portland-city", method = RequestMethod.GET)
	public String getOregonCityPortlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4159000");
		return "OregonCityPortlandcity";
	}   
@RequestMapping(value = "/states/Texas/metros/McAllen-Edinburg-Mission", method = RequestMethod.GET)
	public String getTexasMetroMcAllenEdinburgMission(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32580");
		return "TexasMetroMcAllenEdinburgMission";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Barbara-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaBarbaracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "669070");
		return "CaliforniaCitySantaBarbaracity";
	}   
@RequestMapping(value = "/states/Texas/micros/Gainesville", method = RequestMethod.GET)
	public String getTexasMicroGainesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23620");
		return "TexasMicroGainesville";
	}   
@RequestMapping(value = "/states/Nevada/cities/Summerlin-South", method = RequestMethod.GET)
	public String getNevadaCitySummerlinSouth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3270900");
		return "NevadaCitySummerlinSouth";
	}   
@RequestMapping(value = "/states/California/cities/Walnut-city", method = RequestMethod.GET)
	public String getCaliforniaCityWalnutcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "683332");
		return "CaliforniaCityWalnutcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Guaynabo-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityGuaynabozonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7232522");
		return "Puerto_RicoCityGuaynabozonaurbana";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Louisville-Jefferson-County-metro-government", method = RequestMethod.GET)
	public String getKentuckyCityLouisvilleJeffersonCountymetrogovernment(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2148006");
		return "KentuckyCityLouisvilleJeffersonCountymetrogovernment";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Pope-County", method = RequestMethod.GET)
	public String getArkansasCountyPopeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5115");
		return "ArkansasCountyPopeCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Owatonna", method = RequestMethod.GET)
	public String getMinnesotaMicroOwatonna(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36940");
		return "MinnesotaMicroOwatonna";
	}   
@RequestMapping(value = "/states/California/cities/Beverly-Hills-city", method = RequestMethod.GET)
	public String getCaliforniaCityBeverlyHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "606308");
		return "CaliforniaCityBeverlyHillscity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Pulaski-County", method = RequestMethod.GET)
	public String getArkansasCountyPulaskiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5119");
		return "ArkansasCountyPulaskiCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/South-Elgin-village", method = RequestMethod.GET)
	public String getIllinoisCitySouthElginvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1770720");
		return "IllinoisCitySouthElginvillage";
	}   
@RequestMapping(value = "/states/California/cities/Pacifica-city", method = RequestMethod.GET)
	public String getCaliforniaCityPacificacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "654806");
		return "CaliforniaCityPacificacity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Montgomery-Village", method = RequestMethod.GET)
	public String getMarylandCityMontgomeryVillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2453325");
		return "MarylandCityMontgomeryVillage";
	}   
@RequestMapping(value = "/states/Utah/cities/Ogden-city", method = RequestMethod.GET)
	public String getUtahCityOgdencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4955980");
		return "UtahCityOgdencity";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Sebastian-County", method = RequestMethod.GET)
	public String getArkansasCountySebastianCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5131");
		return "ArkansasCountySebastianCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Slidell-city", method = RequestMethod.GET)
	public String getLouisianaCitySlidellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2270805");
		return "LouisianaCitySlidellcity";
	}   
@RequestMapping(value = "/states/Washington/micros/Shelton", method = RequestMethod.GET)
	public String getWashingtonMicroShelton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43220");
		return "WashingtonMicroShelton";
	}   
@RequestMapping(value = "/states/Florida/cities/Palm-Harbor", method = RequestMethod.GET)
	public String getFloridaCityPalmHarbor(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254350");
		return "FloridaCityPalmHarbor";
	}   
@RequestMapping(value = "/states/Ohio/micros/Findlay", method = RequestMethod.GET)
	public String getOhioMicroFindlay(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22300");
		return "OhioMicroFindlay";
	}   
@RequestMapping(value = "/states/Ohio/cities/Columbus-city", method = RequestMethod.GET)
	public String getOhioCityColumbuscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3918000");
		return "OhioCityColumbuscity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Marumsco", method = RequestMethod.GET)
	public String getVirginiaCityMarumsco(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5149792");
		return "VirginiaCityMarumsco";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Janesville-city", method = RequestMethod.GET)
	public String getWisconsinCityJanesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5537825");
		return "WisconsinCityJanesvillecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Winter-Park-city", method = RequestMethod.GET)
	public String getFloridaCityWinterParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1278300");
		return "FloridaCityWinterParkcity";
	}   
@RequestMapping(value = "/states/California/cities/Walnut-Creek-city", method = RequestMethod.GET)
	public String getCaliforniaCityWalnutCreekcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "683346");
		return "CaliforniaCityWalnutCreekcity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Catano-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityCatanozonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7215193");
		return "Puerto_RicoCityCatanozonaurbana";
	}   
@RequestMapping(value = "/states/Michigan/metros/Battle-Creek", method = RequestMethod.GET)
	public String getMichiganMetroBattleCreek(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12980");
		return "MichiganMetroBattleCreek";
	}   
@RequestMapping(value = "/states/California/cities/Santa-Paula-city", method = RequestMethod.GET)
	public String getCaliforniaCitySantaPaulacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670042");
		return "CaliforniaCitySantaPaulacity";
	}   
@RequestMapping(value = "/states/Texas/cities/Friendswood-city", method = RequestMethod.GET)
	public String getTexasCityFriendswoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4827648");
		return "TexasCityFriendswoodcity";
	}   
@RequestMapping(value = "/states/California/cities/Burbank-city", method = RequestMethod.GET)
	public String getCaliforniaCityBurbankcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "608954");
		return "CaliforniaCityBurbankcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Port-St-Lucie-city", method = RequestMethod.GET)
	public String getFloridaCityPortStLuciecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1258715");
		return "FloridaCityPortStLuciecity";
	}   
@RequestMapping(value = "/states/California/cities/Selma-city", method = RequestMethod.GET)
	public String getCaliforniaCitySelmacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670882");
		return "CaliforniaCitySelmacity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Glendale-Heights-village", method = RequestMethod.GET)
	public String getIllinoisCityGlendaleHeightsvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1729730");
		return "IllinoisCityGlendaleHeightsvillage";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Washington-County", method = RequestMethod.GET)
	public String getArkansasCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5143");
		return "ArkansasCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/metros/Ponce", method = RequestMethod.GET)
	public String getPuerto_RicoMetroPonce(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38660");
		return "Puerto_RicoMetroPonce";
	}   
@RequestMapping(value = "/states/Florida/counties/Duval-County", method = RequestMethod.GET)
	public String getFloridaCountyDuvalCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12031");
		return "FloridaCountyDuvalCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/White-County", method = RequestMethod.GET)
	public String getArkansasCountyWhiteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5145");
		return "ArkansasCountyWhiteCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Worcester-city", method = RequestMethod.GET)
	public String getMassachusettsCityWorcestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2582000");
		return "MassachusettsCityWorcestercity";
	}   
@RequestMapping(value = "/states/Florida/counties/Escambia-County", method = RequestMethod.GET)
	public String getFloridaCountyEscambiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12033");
		return "FloridaCountyEscambiaCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Saginaw", method = RequestMethod.GET)
	public String getMichiganMetroSaginaw(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40980");
		return "MichiganMetroSaginaw";
	}   
@RequestMapping(value = "/states/Maryland/counties/Carroll-County", method = RequestMethod.GET)
	public String getMarylandCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24013");
		return "MarylandCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Albany-County", method = RequestMethod.GET)
	public String getNew_YorkCountyAlbanyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36001");
		return "New_YorkCountyAlbanyCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Cecil-County", method = RequestMethod.GET)
	public String getMarylandCountyCecilCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24015");
		return "MarylandCountyCecilCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Brighton", method = RequestMethod.GET)
	public String getNew_YorkCityBrighton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3608257");
		return "New_YorkCityBrighton";
	}   
@RequestMapping(value = "/states/Texas/metros/Laredo", method = RequestMethod.GET)
	public String getTexasMetroLaredo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29700");
		return "TexasMetroLaredo";
	}   
@RequestMapping(value = "/states/Virginia/cities/McLean", method = RequestMethod.GET)
	public String getVirginiaCityMcLean(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5148376");
		return "VirginiaCityMcLean";
	}   
@RequestMapping(value = "/states/Maryland/counties/Charles-County", method = RequestMethod.GET)
	public String getMarylandCountyCharlesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24017");
		return "MarylandCountyCharlesCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Clarksville-city", method = RequestMethod.GET)
	public String getTennesseeCityClarksvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4715160");
		return "TennesseeCityClarksvillecity";
	}   
@RequestMapping(value = "/states/Maryland/counties/Dorchester-County", method = RequestMethod.GET)
	public String getMarylandCountyDorchesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24019");
		return "MarylandCountyDorchesterCounty";
	}   
@RequestMapping(value = "/states/California/cities/Campbell-city", method = RequestMethod.GET)
	public String getCaliforniaCityCampbellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "610345");
		return "CaliforniaCityCampbellcity";
	}   
@RequestMapping(value = "/states/New-York/counties/Cattaraugus-County", method = RequestMethod.GET)
	public String getNew_YorkCountyCattaraugusCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36009");
		return "New_YorkCountyCattaraugusCounty";
	}   
@RequestMapping(value = "/states/California/cities/Palm-Springs-city", method = RequestMethod.GET)
	public String getCaliforniaCityPalmSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "655254");
		return "CaliforniaCityPalmSpringscity";
	}   
@RequestMapping(value = "/states/New-York/counties/Broome-County", method = RequestMethod.GET)
	public String getNew_YorkCountyBroomeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36007");
		return "New_YorkCountyBroomeCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/West-Haven-city", method = RequestMethod.GET)
	public String getConnecticutCityWestHavencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "982800");
		return "ConnecticutCityWestHavencity";
	}   
@RequestMapping(value = "/states/New-York/counties/Bronx-County", method = RequestMethod.GET)
	public String getNew_YorkCountyBronxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36005");
		return "New_YorkCountyBronxCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Caroline-County", method = RequestMethod.GET)
	public String getMarylandCountyCarolineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24011");
		return "MarylandCountyCarolineCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Allegany-County", method = RequestMethod.GET)
	public String getNew_YorkCountyAlleganyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36003");
		return "New_YorkCountyAlleganyCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Flagler-County", method = RequestMethod.GET)
	public String getFloridaCountyFlaglerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12035");
		return "FloridaCountyFlaglerCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Union-County", method = RequestMethod.GET)
	public String getArkansasCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5139");
		return "ArkansasCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Gadsden-County", method = RequestMethod.GET)
	public String getFloridaCountyGadsdenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12039");
		return "FloridaCountyGadsdenCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Bayonne-city", method = RequestMethod.GET)
	public String getNew_JerseyCityBayonnecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3403580");
		return "New_JerseyCityBayonnecity";
	}   
@RequestMapping(value = "/states/Nebraska/metros/Lincoln", method = RequestMethod.GET)
	public String getNebraskaMetroLincoln(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30700");
		return "NebraskaMetroLincoln";
	}   
@RequestMapping(value = "/states/Indiana/micros/Richmond", method = RequestMethod.GET)
	public String getIndianaMicroRichmond(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39980");
		return "IndianaMicroRichmond";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Ramsey-city", method = RequestMethod.GET)
	public String getMinnesotaCityRamseycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2753026");
		return "MinnesotaCityRamseycity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Boardman", method = RequestMethod.GET)
	public String getOhioCityBoardman(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3907454");
		return "OhioCityBoardman";
	}   
@RequestMapping(value = "/states/Maryland/counties/Harford-County", method = RequestMethod.GET)
	public String getMarylandCountyHarfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24025");
		return "MarylandCountyHarfordCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Howard-County", method = RequestMethod.GET)
	public String getMarylandCountyHowardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24027");
		return "MarylandCountyHowardCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Kent-County", method = RequestMethod.GET)
	public String getMarylandCountyKentCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24029");
		return "MarylandCountyKentCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Hampton-city", method = RequestMethod.GET)
	public String getVirginiaCountyHamptoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51650");
		return "VirginiaCountyHamptoncity";
	}   
@RequestMapping(value = "/states/New-York/metros/Glens-Falls", method = RequestMethod.GET)
	public String getNew_YorkMetroGlensFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24020");
		return "New_YorkMetroGlensFalls";
	}   
@RequestMapping(value = "/states/Washington/cities/Spokane-city", method = RequestMethod.GET)
	public String getWashingtonCitySpokanecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5367000");
		return "WashingtonCitySpokanecity";
	}   
@RequestMapping(value = "/states/Maryland/counties/Frederick-County", method = RequestMethod.GET)
	public String getMarylandCountyFrederickCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24021");
		return "MarylandCountyFrederickCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Gaithersburg-city", method = RequestMethod.GET)
	public String getMarylandCityGaithersburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2431175");
		return "MarylandCityGaithersburgcity";
	}   
@RequestMapping(value = "/states/Maryland/counties/Garrett-County", method = RequestMethod.GET)
	public String getMarylandCountyGarrettCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24023");
		return "MarylandCountyGarrettCounty";
	}   
@RequestMapping(value = "/states/Arkansas/counties/Yell-County", method = RequestMethod.GET)
	public String getArkansasCountyYellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5149");
		return "ArkansasCountyYellCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Wooster", method = RequestMethod.GET)
	public String getOhioMicroWooster(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49300");
		return "OhioMicroWooster";
	}   
@RequestMapping(value = "/states/Florida/counties/Hardee-County", method = RequestMethod.GET)
	public String getFloridaCountyHardeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12049");
		return "FloridaCountyHardeeCounty";
	}   
@RequestMapping(value = "/states/California/cities/El-Paso-de-Robles-Paso-Robles-city", method = RequestMethod.GET)
	public String getCaliforniaCityElPasodeRoblesPasoRoblescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "622300");
		return "CaliforniaCityElPasodeRoblesPasoRoblescity";
	}   
@RequestMapping(value = "/states/Washington/cities/Kent-city", method = RequestMethod.GET)
	public String getWashingtonCityKentcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5335415");
		return "WashingtonCityKentcity";
	}   
@RequestMapping(value = "/states/Florida/counties/Broward-County", method = RequestMethod.GET)
	public String getFloridaCountyBrowardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12011");
		return "FloridaCountyBrowardCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Bellefontaine", method = RequestMethod.GET)
	public String getOhioMicroBellefontaine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13340");
		return "OhioMicroBellefontaine";
	}   
@RequestMapping(value = "/states/Washington/cities/Bothell-city", method = RequestMethod.GET)
	public String getWashingtonCityBothellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5307380");
		return "WashingtonCityBothellcity";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Fremont-city", method = RequestMethod.GET)
	public String getNebraskaCityFremontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3117670");
		return "NebraskaCityFremontcity";
	}   
@RequestMapping(value = "/states/Washington/cities/Lacey-city", method = RequestMethod.GET)
	public String getWashingtonCityLaceycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5336745");
		return "WashingtonCityLaceycity";
	}   
@RequestMapping(value = "/states/California/cities/Los-Altos-city", method = RequestMethod.GET)
	public String getCaliforniaCityLosAltoscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "643280");
		return "CaliforniaCityLosAltoscity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Findlay-city", method = RequestMethod.GET)
	public String getOhioCityFindlaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3927048");
		return "OhioCityFindlaycity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Harrisonburg-city", method = RequestMethod.GET)
	public String getVirginiaCountyHarrisonburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51660");
		return "VirginiaCountyHarrisonburgcity";
	}   
@RequestMapping(value = "/states/California/cities/Hayward-city", method = RequestMethod.GET)
	public String getCaliforniaCityHaywardcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "633000");
		return "CaliforniaCityHaywardcity";
	}   
@RequestMapping(value = "/states/Hawaii/metros/Kahului-Wailuku-Lahaina", method = RequestMethod.GET)
	public String getHawaiiMetroKahuluiWailukuLahaina(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27980");
		return "HawaiiMetroKahuluiWailukuLahaina";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Mount-Pleasant-town", method = RequestMethod.GET)
	public String getSouth_CarolinaCityMountPleasanttown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4548535");
		return "South_CarolinaCityMountPleasanttown";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Tulsa-city", method = RequestMethod.GET)
	public String getOklahomaCityTulsacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4075000");
		return "OklahomaCityTulsacity";
	}   
@RequestMapping(value = "/states/Florida/counties/Charlotte-County", method = RequestMethod.GET)
	public String getFloridaCountyCharlotteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12015");
		return "FloridaCountyCharlotteCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Citrus-County", method = RequestMethod.GET)
	public String getFloridaCountyCitrusCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12017");
		return "FloridaCountyCitrusCounty";
	}   
@RequestMapping(value = "/states/Kansas/micros/Coffeyville", method = RequestMethod.GET)
	public String getKansasMicroCoffeyville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17700");
		return "KansasMicroCoffeyville";
	}   
@RequestMapping(value = "/states/Florida/counties/Clay-County", method = RequestMethod.GET)
	public String getFloridaCountyClayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12019");
		return "FloridaCountyClayCounty";
	}   
@RequestMapping(value = "/states/Georgia/metros/AthensClarke-County", method = RequestMethod.GET)
	public String getGeorgiaMetroAthensClarkeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12020");
		return "GeorgiaMetroAthensClarkeCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Collier-County", method = RequestMethod.GET)
	public String getFloridaCountyCollierCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12021");
		return "FloridaCountyCollierCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Palestine", method = RequestMethod.GET)
	public String getTexasMicroPalestine(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37300");
		return "TexasMicroPalestine";
	}   
@RequestMapping(value = "/states/Maryland/counties/Anne-Arundel-County", method = RequestMethod.GET)
	public String getMarylandCountyAnneArundelCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24003");
		return "MarylandCountyAnneArundelCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Baltimore-County", method = RequestMethod.GET)
	public String getMarylandCountyBaltimoreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24005");
		return "MarylandCountyBaltimoreCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/New-Brunswick-city", method = RequestMethod.GET)
	public String getNew_JerseyCityNewBrunswickcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3451210");
		return "New_JerseyCityNewBrunswickcity";
	}   
@RequestMapping(value = "/states/Maryland/counties/Calvert-County", method = RequestMethod.GET)
	public String getMarylandCountyCalvertCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24009");
		return "MarylandCountyCalvertCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Farmington-Hills-city", method = RequestMethod.GET)
	public String getMichiganCityFarmingtonHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2627440");
		return "MichiganCityFarmingtonHillscity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Hopewell-city", method = RequestMethod.GET)
	public String getVirginiaCountyHopewellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51670");
		return "VirginiaCountyHopewellcity";
	}   
@RequestMapping(value = "/states/Texas/micros/Huntsville", method = RequestMethod.GET)
	public String getTexasMicroHuntsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26660");
		return "TexasMicroHuntsville";
	}   
@RequestMapping(value = "/states/California/cities/Vineyard", method = RequestMethod.GET)
	public String getCaliforniaCityVineyard(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "682852");
		return "CaliforniaCityVineyard";
	}   
@RequestMapping(value = "/states/Maryland/counties/Allegany-County", method = RequestMethod.GET)
	public String getMarylandCountyAlleganyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24001");
		return "MarylandCountyAlleganyCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Waukesha-city", method = RequestMethod.GET)
	public String getWisconsinCityWaukeshacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5584250");
		return "WisconsinCityWaukeshacity";
	}   
@RequestMapping(value = "/states/Florida/counties/Columbia-County", method = RequestMethod.GET)
	public String getFloridaCountyColumbiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12023");
		return "FloridaCountyColumbiaCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Plantation-city", method = RequestMethod.GET)
	public String getFloridaCityPlantationcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1257425");
		return "FloridaCityPlantationcity";
	}   
@RequestMapping(value = "/states/Georgia/metros/Warner-Robins", method = RequestMethod.GET)
	public String getGeorgiaMetroWarnerRobins(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47580");
		return "GeorgiaMetroWarnerRobins";
	}   
@RequestMapping(value = "/states/Maryland/cities/Essex", method = RequestMethod.GET)
	public String getMarylandCityEssex(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2426600");
		return "MarylandCityEssex";
	}   
@RequestMapping(value = "/states/Florida/counties/DeSoto-County", method = RequestMethod.GET)
	public String getFloridaCountyDeSotoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12027");
		return "FloridaCountyDeSotoCounty";
	}   
@RequestMapping(value = "/states/Nevada/cities/Reno-city", method = RequestMethod.GET)
	public String getNevadaCityRenocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3260600");
		return "NevadaCityRenocity";
	}   
@RequestMapping(value = "/states/Florida/metros/Cape-CoralFort-Myers", method = RequestMethod.GET)
	public String getFloridaMetroCapeCoralFortMyers(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15980");
		return "FloridaMetroCapeCoralFortMyers";
	}   
@RequestMapping(value = "/states/Florida/cities/Key-West-city", method = RequestMethod.GET)
	public String getFloridaCityKeyWestcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1236550");
		return "FloridaCityKeyWestcity";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Ponca-City", method = RequestMethod.GET)
	public String getOklahomaMicroPoncaCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38620");
		return "OklahomaMicroPoncaCity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Hannibal", method = RequestMethod.GET)
	public String getMissouriMicroHannibal(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25300");
		return "MissouriMicroHannibal";
	}   
@RequestMapping(value = "/states/Arizona/micros/Safford", method = RequestMethod.GET)
	public String getArizonaMicroSafford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40940");
		return "ArizonaMicroSafford";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/South-Plainfield-borough", method = RequestMethod.GET)
	public String getNew_JerseyCitySouthPlainfieldborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3469390");
		return "New_JerseyCitySouthPlainfieldborough";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/North-Charleston-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityNorthCharlestoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4550875");
		return "South_CarolinaCityNorthCharlestoncity";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Mountain-Home", method = RequestMethod.GET)
	public String getArkansasMicroMountainHome(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34260");
		return "ArkansasMicroMountainHome";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Bridgeport-city", method = RequestMethod.GET)
	public String getConnecticutCityBridgeportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "908000");
		return "ConnecticutCityBridgeportcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Fountainebleau", method = RequestMethod.GET)
	public String getFloridaCityFountainebleau(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1224562");
		return "FloridaCityFountainebleau";
	}   
@RequestMapping(value = "/states/Michigan/cities/Garden-City-city", method = RequestMethod.GET)
	public String getMichiganCityGardenCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2631420");
		return "MichiganCityGardenCitycity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Lynchburg-city", method = RequestMethod.GET)
	public String getVirginiaCountyLynchburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51680");
		return "VirginiaCountyLynchburgcity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Manassas-city", method = RequestMethod.GET)
	public String getVirginiaCountyManassascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51683");
		return "VirginiaCountyManassascity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Naperville-city", method = RequestMethod.GET)
	public String getIllinoisCityNapervillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1751622");
		return "IllinoisCityNapervillecity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Holyoke-city", method = RequestMethod.GET)
	public String getMassachusettsCityHolyokecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2530840");
		return "MassachusettsCityHolyokecity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Worth-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWorthCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13321");
		return "GeorgiaCountyWorthCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Dedham", method = RequestMethod.GET)
	public String getMassachusettsCityDedham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2516530");
		return "MassachusettsCityDedham";
	}   
@RequestMapping(value = "/states/Idaho/micros/Rexburg", method = RequestMethod.GET)
	public String getIdahoMicroRexburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39940");
		return "IdahoMicroRexburg";
	}   
@RequestMapping(value = "/states/California/cities/Stanton-city", method = RequestMethod.GET)
	public String getCaliforniaCityStantoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673962");
		return "CaliforniaCityStantoncity";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Brainerd", method = RequestMethod.GET)
	public String getMinnesotaMicroBrainerd(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14660");
		return "MinnesotaMicroBrainerd";
	}   
@RequestMapping(value = "/states/Florida/cities/Rockledge-city", method = RequestMethod.GET)
	public String getFloridaCityRockledgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1261500");
		return "FloridaCityRockledgecity";
	}   
@RequestMapping(value = "/states/Minnesota/micros/New-Ulm", method = RequestMethod.GET)
	public String getMinnesotaMicroNewUlm(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35580");
		return "MinnesotaMicroNewUlm";
	}   
@RequestMapping(value = "/states/California/cities/Richmond-city", method = RequestMethod.GET)
	public String getCaliforniaCityRichmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "660620");
		return "CaliforniaCityRichmondcity";
	}   
@RequestMapping(value = "/states/Florida/counties/Brevard-County", method = RequestMethod.GET)
	public String getFloridaCountyBrevardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12009");
		return "FloridaCountyBrevardCounty";
	}   
@RequestMapping(value = "/states/Nevada/cities/Spring-Valley", method = RequestMethod.GET)
	public String getNevadaCitySpringValley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3268585");
		return "NevadaCitySpringValley";
	}   
@RequestMapping(value = "/states/Nevada/micros/Fernley", method = RequestMethod.GET)
	public String getNevadaMicroFernley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22280");
		return "NevadaMicroFernley";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Clinton-city", method = RequestMethod.GET)
	public String getMississippiCityClintoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2814420");
		return "MississippiCityClintoncity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Appleton-city", method = RequestMethod.GET)
	public String getWisconsinCityAppletoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5502375");
		return "WisconsinCityAppletoncity";
	}   
@RequestMapping(value = "/states/Florida/counties/Alachua-County", method = RequestMethod.GET)
	public String getFloridaCountyAlachuaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12001");
		return "FloridaCountyAlachuaCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Mobile-city", method = RequestMethod.GET)
	public String getAlabamaCityMobilecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "150000");
		return "AlabamaCityMobilecity";
	}   
@RequestMapping(value = "/states/Florida/counties/Baker-County", method = RequestMethod.GET)
	public String getFloridaCountyBakerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12003");
		return "FloridaCountyBakerCounty";
	}   
@RequestMapping(value = "/states/Maine/cities/Auburn-city", method = RequestMethod.GET)
	public String getMaineCityAuburncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2302060");
		return "MaineCityAuburncity";
	}   
@RequestMapping(value = "/states/Florida/counties/Bay-County", method = RequestMethod.GET)
	public String getFloridaCountyBayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12005");
		return "FloridaCountyBayCounty";
	}   
@RequestMapping(value = "/states/California/cities/Palo-Alto-city", method = RequestMethod.GET)
	public String getCaliforniaCityPaloAltocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "655282");
		return "CaliforniaCityPaloAltocity";
	}   
@RequestMapping(value = "/states/Florida/counties/Bradford-County", method = RequestMethod.GET)
	public String getFloridaCountyBradfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12007");
		return "FloridaCountyBradfordCounty";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Florence-city", method = RequestMethod.GET)
	public String getKentuckyCityFlorencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2127982");
		return "KentuckyCityFlorencecity";
	}   
@RequestMapping(value = "/states/California/cities/Madera-city", method = RequestMethod.GET)
	public String getCaliforniaCityMaderacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "645022");
		return "CaliforniaCityMaderacity";
	}   
@RequestMapping(value = "/states/Idaho/cities/Coeur-d-Alene-city", method = RequestMethod.GET)
	public String getIdahoCityCoeurdAlenecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1616750");
		return "IdahoCityCoeurdAlenecity";
	}   
@RequestMapping(value = "/states/Alaska/micros/Juneau", method = RequestMethod.GET)
	public String getAlaskaMicroJuneau(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27940");
		return "AlaskaMicroJuneau";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Baton-Rouge-city", method = RequestMethod.GET)
	public String getLouisianaCityBatonRougecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2205000");
		return "LouisianaCityBatonRougecity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Neenah-city", method = RequestMethod.GET)
	public String getWisconsinCityNeenahcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5555750");
		return "WisconsinCityNeenahcity";
	}   
@RequestMapping(value = "/states/New-York/cities/Rotterdam", method = RequestMethod.GET)
	public String getNew_YorkCityRotterdam(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3663924");
		return "New_YorkCityRotterdam";
	}   
@RequestMapping(value = "/states/California/cities/Vacaville-city", method = RequestMethod.GET)
	public String getCaliforniaCityVacavillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "681554");
		return "CaliforniaCityVacavillecity";
	}   
@RequestMapping(value = "/states/Georgia/metros/Gainesville", method = RequestMethod.GET)
	public String getGeorgiaMetroGainesville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23580");
		return "GeorgiaMetroGainesville";
	}   
@RequestMapping(value = "/states/Florida/cities/Four-Corners", method = RequestMethod.GET)
	public String getFloridaCityFourCorners(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1224581");
		return "FloridaCityFourCorners";
	}   
@RequestMapping(value = "/states/Alabama/metros/Tuscaloosa", method = RequestMethod.GET)
	public String getAlabamaMetroTuscaloosa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46220");
		return "AlabamaMetroTuscaloosa";
	}   
@RequestMapping(value = "/states/New-York/cities/New-Rochelle-city", method = RequestMethod.GET)
	public String getNew_YorkCityNewRochellecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3650617");
		return "New_YorkCityNewRochellecity";
	}   
@RequestMapping(value = "/states/Texas/micros/Beeville", method = RequestMethod.GET)
	public String getTexasMicroBeeville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13300");
		return "TexasMicroBeeville";
	}   
@RequestMapping(value = "/states/Georgia/counties/Wayne-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13305");
		return "GeorgiaCountyWayneCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Hutchinson-city", method = RequestMethod.GET)
	public String getKansasCityHutchinsoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2033625");
		return "KansasCityHutchinsoncity";
	}   
@RequestMapping(value = "/states/Georgia/counties/Washington-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13303");
		return "GeorgiaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Pueblo-West", method = RequestMethod.GET)
	public String getColoradoCityPuebloWest(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "862220");
		return "ColoradoCityPuebloWest";
	}   
@RequestMapping(value = "/states/New-York/cities/Ithaca-city", method = RequestMethod.GET)
	public String getNew_YorkCityIthacacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3638077");
		return "New_YorkCityIthacacity";
	}   
@RequestMapping(value = "/states/California/cities/Aliso-Viejo-city", method = RequestMethod.GET)
	public String getCaliforniaCityAlisoViejocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "600947");
		return "CaliforniaCityAlisoViejocity";
	}   
@RequestMapping(value = "/states/California/cities/El-Dorado-Hills", method = RequestMethod.GET)
	public String getCaliforniaCityElDoradoHills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "621880");
		return "CaliforniaCityElDoradoHills";
	}   
@RequestMapping(value = "/states/Alabama/metros/Huntsville", method = RequestMethod.GET)
	public String getAlabamaMetroHuntsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26620");
		return "AlabamaMetroHuntsville";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Gardner-city", method = RequestMethod.GET)
	public String getMassachusettsCityGardnercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2525485");
		return "MassachusettsCityGardnercity";
	}   
@RequestMapping(value = "/states/New-York/cities/East-Meadow", method = RequestMethod.GET)
	public String getNew_YorkCityEastMeadow(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3622502");
		return "New_YorkCityEastMeadow";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Fergus-Falls", method = RequestMethod.GET)
	public String getMinnesotaMicroFergusFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22260");
		return "MinnesotaMicroFergusFalls";
	}   
@RequestMapping(value = "/states/California/cities/Windsor-town", method = RequestMethod.GET)
	public String getCaliforniaCityWindsortown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "685922");
		return "CaliforniaCityWindsortown";
	}   
@RequestMapping(value = "/states/California/cities/Tracy-city", method = RequestMethod.GET)
	public String getCaliforniaCityTracycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "680238");
		return "CaliforniaCityTracycity";
	}   
@RequestMapping(value = "/states/Ohio/micros/Wapakoneta", method = RequestMethod.GET)
	public String getOhioMicroWapakoneta(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47540");
		return "OhioMicroWapakoneta";
	}   
@RequestMapping(value = "/states/Georgia/counties/Whitfield-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWhitfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13313");
		return "GeorgiaCountyWhitfieldCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Prior-Lake-city", method = RequestMethod.GET)
	public String getMinnesotaCityPriorLakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2752594");
		return "MinnesotaCityPriorLakecity";
	}   
@RequestMapping(value = "/states/Georgia/counties/White-County", method = RequestMethod.GET)
	public String getGeorgiaCountyWhiteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13311");
		return "GeorgiaCountyWhiteCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Warren-city", method = RequestMethod.GET)
	public String getOhioCityWarrencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3980892");
		return "OhioCityWarrencity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Shelbyville", method = RequestMethod.GET)
	public String getTennesseeMicroShelbyville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43180");
		return "TennesseeMicroShelbyville";
	}   
@RequestMapping(value = "/states/Illinois/metros/Decatur", method = RequestMethod.GET)
	public String getIllinoisMetroDecatur(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19500");
		return "IllinoisMetroDecatur";
	}   
@RequestMapping(value = "/states/Alaska/metros/Fairbanks", method = RequestMethod.GET)
	public String getAlaskaMetroFairbanks(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21820");
		return "AlaskaMetroFairbanks";
	}   
@RequestMapping(value = "/states/New-York/counties/Queens-County", method = RequestMethod.GET)
	public String getNew_YorkCountyQueensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36081");
		return "New_YorkCountyQueensCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Lincoln-Park-city", method = RequestMethod.GET)
	public String getMichiganCityLincolnParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2647800");
		return "MichiganCityLincolnParkcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Montgomery-County", method = RequestMethod.GET)
	public String getOhioCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39113");
		return "OhioCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Muskogee-County", method = RequestMethod.GET)
	public String getOklahomaCountyMuskogeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40101");
		return "OklahomaCountyMuskogeeCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Rio-Grande-City", method = RequestMethod.GET)
	public String getTexasMicroRioGrandeCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40100");
		return "TexasMicroRioGrandeCity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Mesa-city", method = RequestMethod.GET)
	public String getArizonaCityMesacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "446000");
		return "ArizonaCityMesacity";
	}   
@RequestMapping(value = "/states/New-York/counties/St-Lawrence-County", method = RequestMethod.GET)
	public String getNew_YorkCountyStLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36089");
		return "New_YorkCountyStLawrenceCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Pelham-city", method = RequestMethod.GET)
	public String getAlabamaCityPelhamcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "158848");
		return "AlabamaCityPelhamcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Cincinnati-city", method = RequestMethod.GET)
	public String getOhioCityCincinnaticity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3915000");
		return "OhioCityCincinnaticity";
	}   
@RequestMapping(value = "/states/New-York/counties/Rockland-County", method = RequestMethod.GET)
	public String getNew_YorkCountyRocklandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36087");
		return "New_YorkCountyRocklandCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Richmond-County", method = RequestMethod.GET)
	public String getNew_YorkCountyRichmondCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36085");
		return "New_YorkCountyRichmondCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/counties/Oklahoma-County", method = RequestMethod.GET)
	public String getOklahomaCountyOklahomaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40109");
		return "OklahomaCountyOklahomaCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Rensselaer-County", method = RequestMethod.GET)
	public String getNew_YorkCountyRensselaerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36083");
		return "New_YorkCountyRensselaerCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Shreveport-city", method = RequestMethod.GET)
	public String getLouisianaCityShreveportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2270000");
		return "LouisianaCityShreveportcity";
	}   
@RequestMapping(value = "/states/New-York/metros/WatertownFort-Drum", method = RequestMethod.GET)
	public String getNew_YorkMetroWatertownFortDrum(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48060");
		return "New_YorkMetroWatertownFortDrum";
	}   
@RequestMapping(value = "/states/Texas/counties/Cameron-County", method = RequestMethod.GET)
	public String getTexasCountyCameronCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48061");
		return "TexasCountyCameronCounty";
	}   
@RequestMapping(value = "/states/California/cities/South-Gate-city", method = RequestMethod.GET)
	public String getCaliforniaCitySouthGatecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "673080");
		return "CaliforniaCitySouthGatecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Golden-Gate", method = RequestMethod.GET)
	public String getFloridaCityGoldenGate(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1226300");
		return "FloridaCityGoldenGate";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Las-Vegas", method = RequestMethod.GET)
	public String getNew_MexicoMicroLasVegas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29780");
		return "New_MexicoMicroLasVegas";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Ramsey-County", method = RequestMethod.GET)
	public String getMinnesotaCountyRamseyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27123");
		return "MinnesotaCountyRamseyCounty";
	}   
@RequestMapping(value = "/states/Arkansas/metros/Little-RockNorth-Little-RockConway", method = RequestMethod.GET)
	public String getArkansasMetroLittleRockNorthLittleRockConway(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30780");
		return "ArkansasMetroLittleRockNorthLittleRockConway";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Bixby-city", method = RequestMethod.GET)
	public String getOklahomaCityBixbycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4006400");
		return "OklahomaCityBixbycity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Morrow-County", method = RequestMethod.GET)
	public String getOhioCountyMorrowCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39117");
		return "OhioCountyMorrowCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Muskingum-County", method = RequestMethod.GET)
	public String getOhioCountyMuskingumCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39119");
		return "OhioCountyMuskingumCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Cass-County", method = RequestMethod.GET)
	public String getTexasCountyCassCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48067");
		return "TexasCountyCassCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Memphis-city", method = RequestMethod.GET)
	public String getTennesseeCityMemphiscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4748000");
		return "TennesseeCityMemphiscity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Garfield-city", method = RequestMethod.GET)
	public String getNew_JerseyCityGarfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3425770");
		return "New_JerseyCityGarfieldcity";
	}   
@RequestMapping(value = "/states/New-York/counties/Orange-County", method = RequestMethod.GET)
	public String getNew_YorkCountyOrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36071");
		return "New_YorkCountyOrangeCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/DurhamChapel-Hill", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroDurhamChapelHill(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20500");
		return "North_CarolinaMetroDurhamChapelHill";
	}   
@RequestMapping(value = "/states/Georgia/cities/Dunwoody-city", method = RequestMethod.GET)
	public String getGeorgiaCityDunwoodycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1324768");
		return "GeorgiaCityDunwoodycity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Marion-County", method = RequestMethod.GET)
	public String getOhioCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39101");
		return "OhioCountyMarionCounty";
	}   
@RequestMapping(value = "/states/Oregon/metros/Salem", method = RequestMethod.GET)
	public String getOregonMetroSalem(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41420");
		return "OregonMetroSalem";
	}   
@RequestMapping(value = "/states/Ohio/counties/Medina-County", method = RequestMethod.GET)
	public String getOhioCountyMedinaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39103");
		return "OhioCountyMedinaCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Scott-County", method = RequestMethod.GET)
	public String getMinnesotaCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27139");
		return "MinnesotaCountyScottCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Putnam-County", method = RequestMethod.GET)
	public String getNew_YorkCountyPutnamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36079");
		return "New_YorkCountyPutnamCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Upper-Arlington-city", method = RequestMethod.GET)
	public String getOhioCityUpperArlingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3979002");
		return "OhioCityUpperArlingtoncity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/St-Louis-County", method = RequestMethod.GET)
	public String getMinnesotaCountyStLouisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27137");
		return "MinnesotaCountyStLouisCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Otsego-County", method = RequestMethod.GET)
	public String getNew_YorkCountyOtsegoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36077");
		return "New_YorkCountyOtsegoCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Carney", method = RequestMethod.GET)
	public String getMarylandCityCarney(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2413325");
		return "MarylandCityCarney";
	}   
@RequestMapping(value = "/states/New-York/counties/Oswego-County", method = RequestMethod.GET)
	public String getNew_YorkCountyOswegoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36075");
		return "New_YorkCountyOswegoCounty";
	}   
@RequestMapping(value = "/states/North-Dakota/cities/Bismarck-city", method = RequestMethod.GET)
	public String getNorth_DakotaCityBismarckcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3807200");
		return "North_DakotaCityBismarckcity";
	}   
@RequestMapping(value = "/states/New-York/counties/Orleans-County", method = RequestMethod.GET)
	public String getNew_YorkCountyOrleansCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36073");
		return "New_YorkCountyOrleansCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Rice-County", method = RequestMethod.GET)
	public String getMinnesotaCountyRiceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27131");
		return "MinnesotaCountyRiceCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Worthington", method = RequestMethod.GET)
	public String getMinnesotaMicroWorthington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49380");
		return "MinnesotaMicroWorthington";
	}   
@RequestMapping(value = "/states/New-York/cities/Niagara-Falls-city", method = RequestMethod.GET)
	public String getNew_YorkCityNiagaraFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3651055");
		return "New_YorkCityNiagaraFallscity";
	}   
@RequestMapping(value = "/states/Texas/counties/Calhoun-County", method = RequestMethod.GET)
	public String getTexasCountyCalhounCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48057");
		return "TexasCountyCalhounCounty";
	}   
@RequestMapping(value = "/states/California/cities/Laguna-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCityLagunaBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639178");
		return "CaliforniaCityLagunaBeachcity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Meigs-County", method = RequestMethod.GET)
	public String getOhioCountyMeigsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39105");
		return "OhioCountyMeigsCounty";
	}   
@RequestMapping(value = "/states/Colorado/cities/Centennial-city", method = RequestMethod.GET)
	public String getColoradoCityCentennialcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "812815");
		return "ColoradoCityCentennialcity";
	}   
@RequestMapping(value = "/states/Texas/counties/Caldwell-County", method = RequestMethod.GET)
	public String getTexasCountyCaldwellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48055");
		return "TexasCountyCaldwellCounty";
	}   
@RequestMapping(value = "/states/Ohio/counties/Mercer-County", method = RequestMethod.GET)
	public String getOhioCountyMercerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39107");
		return "OhioCountyMercerCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Burnet-County", method = RequestMethod.GET)
	public String getTexasCountyBurnetCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48053");
		return "TexasCountyBurnetCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Watauga-city", method = RequestMethod.GET)
	public String getTexasCityWataugacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4876672");
		return "TexasCityWataugacity";
	}   
@RequestMapping(value = "/states/Ohio/counties/Miami-County", method = RequestMethod.GET)
	public String getOhioCountyMiamiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39109");
		return "OhioCountyMiamiCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Okeechobee-County", method = RequestMethod.GET)
	public String getFloridaCountyOkeechobeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12093");
		return "FloridaCountyOkeechobeeCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Buffalo-city", method = RequestMethod.GET)
	public String getNew_YorkCityBuffalocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3611000");
		return "New_YorkCityBuffalocity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Sedalia", method = RequestMethod.GET)
	public String getMissouriMicroSedalia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42740");
		return "MissouriMicroSedalia";
	}   
@RequestMapping(value = "/states/Florida/counties/Orange-County", method = RequestMethod.GET)
	public String getFloridaCountyOrangeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12095");
		return "FloridaCountyOrangeCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Osceola-County", method = RequestMethod.GET)
	public String getFloridaCountyOsceolaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12097");
		return "FloridaCountyOsceolaCounty";
	}   
@RequestMapping(value = "/states/Idaho/cities/Rexburg-city", method = RequestMethod.GET)
	public String getIdahoCityRexburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1667420");
		return "IdahoCityRexburgcity";
	}   
@RequestMapping(value = "/states/West-Virginia/cities/Charleston-city", method = RequestMethod.GET)
	public String getWest_VirginiaCityCharlestoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5414600");
		return "West_VirginiaCityCharlestoncity";
	}   
@RequestMapping(value = "/states/Texas/metros/College-StationBryan", method = RequestMethod.GET)
	public String getTexasMetroCollegeStationBryan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17780");
		return "TexasMetroCollegeStationBryan";
	}   
@RequestMapping(value = "/states/Florida/counties/Palm-Beach-County", method = RequestMethod.GET)
	public String getFloridaCountyPalmBeachCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12099");
		return "FloridaCountyPalmBeachCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Severna-Park", method = RequestMethod.GET)
	public String getMarylandCitySevernaPark(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2471200");
		return "MarylandCitySevernaPark";
	}   
@RequestMapping(value = "/states/Texas/counties/Brown-County", method = RequestMethod.GET)
	public String getTexasCountyBrownCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48049");
		return "TexasCountyBrownCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Grand-Prairie-city", method = RequestMethod.GET)
	public String getTexasCityGrandPrairiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4830464");
		return "TexasCityGrandPrairiecity";
	}   
@RequestMapping(value = "/states/New-York/counties/Onondaga-County", method = RequestMethod.GET)
	public String getNew_YorkCountyOnondagaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36067");
		return "New_YorkCountyOnondagaCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Nobles-County", method = RequestMethod.GET)
	public String getMinnesotaCountyNoblesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27105");
		return "MinnesotaCountyNoblesCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Oneida-County", method = RequestMethod.GET)
	public String getNew_YorkCountyOneidaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36065");
		return "New_YorkCountyOneidaCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Niagara-County", method = RequestMethod.GET)
	public String getNew_YorkCountyNiagaraCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36063");
		return "New_YorkCountyNiagaraCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Okaloosa-County", method = RequestMethod.GET)
	public String getFloridaCountyOkaloosaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12091");
		return "FloridaCountyOkaloosaCounty";
	}   
@RequestMapping(value = "/states/California/cities/Hawthorne-city", method = RequestMethod.GET)
	public String getCaliforniaCityHawthornecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "632548");
		return "CaliforniaCityHawthornecity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Olmsted-County", method = RequestMethod.GET)
	public String getMinnesotaCountyOlmstedCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27109");
		return "MinnesotaCountyOlmstedCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/New-York-County", method = RequestMethod.GET)
	public String getNew_YorkCountyNewYorkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36061");
		return "New_YorkCountyNewYorkCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Suffolk-city", method = RequestMethod.GET)
	public String getVirginiaCitySuffolkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5176432");
		return "VirginiaCitySuffolkcity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Lynn-city", method = RequestMethod.GET)
	public String getMassachusettsCityLynncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2537490");
		return "MassachusettsCityLynncity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Nicollet-County", method = RequestMethod.GET)
	public String getMinnesotaCountyNicolletCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27103");
		return "MinnesotaCountyNicolletCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Jackson", method = RequestMethod.GET)
	public String getMichiganMetroJackson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27100");
		return "MichiganMetroJackson";
	}   
@RequestMapping(value = "/states/New-York/counties/Ontario-County", method = RequestMethod.GET)
	public String getNew_YorkCountyOntarioCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36069");
		return "New_YorkCountyOntarioCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Fort-Lee-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityFortLeeborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3424420");
		return "New_JerseyCityFortLeeborough";
	}   
@RequestMapping(value = "/states/Texas/counties/Brazos-County", method = RequestMethod.GET)
	public String getTexasCountyBrazosCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48041");
		return "TexasCountyBrazosCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Centralia", method = RequestMethod.GET)
	public String getIllinoisMicroCentralia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16460");
		return "IllinoisMicroCentralia";
	}   
@RequestMapping(value = "/states/Texas/counties/Brazoria-County", method = RequestMethod.GET)
	public String getTexasCountyBrazoriaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48039");
		return "TexasCountyBrazoriaCounty";
	}   
@RequestMapping(value = "/states/Nevada/cities/Winchester", method = RequestMethod.GET)
	public String getNevadaCityWinchester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3284600");
		return "NevadaCityWinchester";
	}   
@RequestMapping(value = "/states/Texas/counties/Bowie-County", method = RequestMethod.GET)
	public String getTexasCountyBowieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48037");
		return "TexasCountyBowieCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Montgomery-County", method = RequestMethod.GET)
	public String getNew_YorkCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36057");
		return "New_YorkCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Pine-County", method = RequestMethod.GET)
	public String getMinnesotaCountyPineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27115");
		return "MinnesotaCountyPineCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Monroe-County", method = RequestMethod.GET)
	public String getNew_YorkCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36055");
		return "New_YorkCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Madison-County", method = RequestMethod.GET)
	public String getNew_YorkCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36053");
		return "New_YorkCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Quincy-city", method = RequestMethod.GET)
	public String getIllinoisCityQuincycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1762367");
		return "IllinoisCityQuincycity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Polk-County", method = RequestMethod.GET)
	public String getMinnesotaCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27119");
		return "MinnesotaCountyPolkCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Livingston-County", method = RequestMethod.GET)
	public String getNew_YorkCountyLivingstonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36051");
		return "New_YorkCountyLivingstonCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/South-St-Paul-city", method = RequestMethod.GET)
	public String getMinnesotaCitySouthStPaulcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2761492");
		return "MinnesotaCitySouthStPaulcity";
	}   
@RequestMapping(value = "/states/Utah/cities/Salt-Lake-City-city", method = RequestMethod.GET)
	public String getUtahCitySaltLakeCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4967000");
		return "UtahCitySaltLakeCitycity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Elyria-city", method = RequestMethod.GET)
	public String getOhioCityElyriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3925256");
		return "OhioCityElyriacity";
	}   
@RequestMapping(value = "/states/Florida/cities/West-Palm-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityWestPalmBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1276600");
		return "FloridaCityWestPalmBeachcity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Webster-Groves-city", method = RequestMethod.GET)
	public String getMissouriCityWebsterGrovescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2978154");
		return "MissouriCityWebsterGrovescity";
	}   
@RequestMapping(value = "/states/Minnesota/counties/Otter-Tail-County", method = RequestMethod.GET)
	public String getMinnesotaCountyOtterTailCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27111");
		return "MinnesotaCountyOtterTailCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Nassau-County", method = RequestMethod.GET)
	public String getNew_YorkCountyNassauCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36059");
		return "New_YorkCountyNassauCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Elk-River-city", method = RequestMethod.GET)
	public String getMinnesotaCityElkRivercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2718674");
		return "MinnesotaCityElkRivercity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Maryland-Heights-city", method = RequestMethod.GET)
	public String getMissouriCityMarylandHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2946586");
		return "MissouriCityMarylandHeightscity";
	}   
@RequestMapping(value = "/states/Florida/counties/Lee-County", method = RequestMethod.GET)
	public String getFloridaCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12071");
		return "FloridaCountyLeeCounty";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Pearl-city", method = RequestMethod.GET)
	public String getMississippiCityPearlcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2855760");
		return "MississippiCityPearlcity";
	}   
@RequestMapping(value = "/states/Florida/counties/Leon-County", method = RequestMethod.GET)
	public String getFloridaCountyLeonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12073");
		return "FloridaCountyLeonCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Independence-city", method = RequestMethod.GET)
	public String getMissouriCityIndependencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2935000");
		return "MissouriCityIndependencecity";
	}   
@RequestMapping(value = "/states/Florida/counties/Levy-County", method = RequestMethod.GET)
	public String getFloridaCountyLevyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12075");
		return "FloridaCountyLevyCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Bexar-County", method = RequestMethod.GET)
	public String getTexasCountyBexarCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48029");
		return "TexasCountyBexarCounty";
	}   
@RequestMapping(value = "/states/South-Dakota/micros/Brookings", method = RequestMethod.GET)
	public String getSouth_DakotaMicroBrookings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15100");
		return "South_DakotaMicroBrookings";
	}   
@RequestMapping(value = "/states/Idaho/cities/Lewiston-city", method = RequestMethod.GET)
	public String getIdahoCityLewistoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1646540");
		return "IdahoCityLewistoncity";
	}   
@RequestMapping(value = "/states/Texas/counties/Bell-County", method = RequestMethod.GET)
	public String getTexasCountyBellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48027");
		return "TexasCountyBellCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Jefferson-County", method = RequestMethod.GET)
	public String getNew_YorkCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36045");
		return "New_YorkCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Herkimer-County", method = RequestMethod.GET)
	public String getNew_YorkCountyHerkimerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36043");
		return "New_YorkCountyHerkimerCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Richmond-city", method = RequestMethod.GET)
	public String getIndianaCityRichmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1864260");
		return "IndianaCityRichmondcity";
	}   
@RequestMapping(value = "/states/New-York/counties/Lewis-County", method = RequestMethod.GET)
	public String getNew_YorkCountyLewisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36049");
		return "New_YorkCountyLewisCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Kings-County", method = RequestMethod.GET)
	public String getNew_YorkCountyKingsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36047");
		return "New_YorkCountyKingsCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/metros/Las-Cruces", method = RequestMethod.GET)
	public String getNew_MexicoMetroLasCruces(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29740");
		return "New_MexicoMetroLasCruces";
	}   
@RequestMapping(value = "/states/Texas/cities/Allen-city", method = RequestMethod.GET)
	public String getTexasCityAllencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4801924");
		return "TexasCityAllencity";
	}   
@RequestMapping(value = "/states/Texas/counties/Bee-County", method = RequestMethod.GET)
	public String getTexasCountyBeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48025");
		return "TexasCountyBeeCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Lakeville-city", method = RequestMethod.GET)
	public String getMinnesotaCityLakevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2735180");
		return "MinnesotaCityLakevillecity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Fairfax-city", method = RequestMethod.GET)
	public String getVirginiaCountyFairfaxcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51600");
		return "VirginiaCountyFairfaxcity";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/WatertownFort-Atkinson", method = RequestMethod.GET)
	public String getWisconsinMicroWatertownFortAtkinson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48020");
		return "WisconsinMicroWatertownFortAtkinson";
	}   
@RequestMapping(value = "/states/Texas/counties/Bastrop-County", method = RequestMethod.GET)
	public String getTexasCountyBastropCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48021");
		return "TexasCountyBastropCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Manatee-County", method = RequestMethod.GET)
	public String getFloridaCountyManateeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12081");
		return "FloridaCountyManateeCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Bandera-County", method = RequestMethod.GET)
	public String getTexasCountyBanderaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48019");
		return "TexasCountyBanderaCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Marion-County", method = RequestMethod.GET)
	public String getFloridaCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12083");
		return "FloridaCountyMarionCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Millville-city", method = RequestMethod.GET)
	public String getNew_JerseyCityMillvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3446680");
		return "New_JerseyCityMillvillecity";
	}   
@RequestMapping(value = "/states/Florida/counties/MiamiDade-County", method = RequestMethod.GET)
	public String getFloridaCountyMiamiDadeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12086");
		return "FloridaCountyMiamiDadeCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Martin-County", method = RequestMethod.GET)
	public String getFloridaCountyMartinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12085");
		return "FloridaCountyMartinCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Austin-County", method = RequestMethod.GET)
	public String getTexasCountyAustinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48015");
		return "TexasCountyAustinCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Spanish-Lake", method = RequestMethod.GET)
	public String getMissouriCitySpanishLake(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2969266");
		return "MissouriCitySpanishLake";
	}   
@RequestMapping(value = "/states/Florida/counties/Monroe-County", method = RequestMethod.GET)
	public String getFloridaCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12087");
		return "FloridaCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Fulton-County", method = RequestMethod.GET)
	public String getNew_YorkCountyFultonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36035");
		return "New_YorkCountyFultonCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/St-Charles-city", method = RequestMethod.GET)
	public String getIllinoisCityStCharlescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1766703");
		return "IllinoisCityStCharlescity";
	}   
@RequestMapping(value = "/states/New-York/counties/Franklin-County", method = RequestMethod.GET)
	public String getNew_YorkCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36033");
		return "New_YorkCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Essex-County", method = RequestMethod.GET)
	public String getNew_YorkCountyEssexCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36031");
		return "New_YorkCountyEssexCounty";
	}   
@RequestMapping(value = "/states/California/cities/Brawley-city", method = RequestMethod.GET)
	public String getCaliforniaCityBrawleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "608058");
		return "CaliforniaCityBrawleycity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Waverly", method = RequestMethod.GET)
	public String getMichiganCityWaverly(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2684800");
		return "MichiganCityWaverly";
	}   
@RequestMapping(value = "/states/New-York/counties/Greene-County", method = RequestMethod.GET)
	public String getNew_YorkCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36039");
		return "New_YorkCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Genesee-County", method = RequestMethod.GET)
	public String getNew_YorkCountyGeneseeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36037");
		return "New_YorkCountyGeneseeCounty";
	}   
@RequestMapping(value = "/states/Washington/metros/Kennewick-Richland", method = RequestMethod.GET)
	public String getWashingtonMetroKennewickRichland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28420");
		return "WashingtonMetroKennewickRichland";
	}   
@RequestMapping(value = "/states/Texas/cities/Port-Arthur-city", method = RequestMethod.GET)
	public String getTexasCityPortArthurcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4858820");
		return "TexasCityPortArthurcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Kalamazoo-city", method = RequestMethod.GET)
	public String getMichiganCityKalamazoocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2642160");
		return "MichiganCityKalamazoocity";
	}   
@RequestMapping(value = "/states/Texas/counties/Atascosa-County", method = RequestMethod.GET)
	public String getTexasCountyAtascosaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48013");
		return "TexasCountyAtascosaCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Nassau-County", method = RequestMethod.GET)
	public String getFloridaCountyNassauCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12089");
		return "FloridaCountyNassauCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Brooklyn-Park-city", method = RequestMethod.GET)
	public String getMinnesotaCityBrooklynParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2707966");
		return "MinnesotaCityBrooklynParkcity";
	}   
@RequestMapping(value = "/states/Massachusetts/metros/Worcester", method = RequestMethod.GET)
	public String getMassachusettsMetroWorcester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49340");
		return "MassachusettsMetroWorcester";
	}   
@RequestMapping(value = "/states/California/cities/Monterey-Park-city", method = RequestMethod.GET)
	public String getCaliforniaCityMontereyParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "648914");
		return "CaliforniaCityMontereyParkcity";
	}   
@RequestMapping(value = "/states/Michigan/micros/Coldwater", method = RequestMethod.GET)
	public String getMichiganMicroColdwater(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17740");
		return "MichiganMicroColdwater";
	}   
@RequestMapping(value = "/states/Ohio/cities/Hilliard-city", method = RequestMethod.GET)
	public String getOhioCityHilliardcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3935476");
		return "OhioCityHilliardcity";
	}   
@RequestMapping(value = "/states/Florida/counties/Hendry-County", method = RequestMethod.GET)
	public String getFloridaCountyHendryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12051");
		return "FloridaCountyHendryCounty";
	}   
@RequestMapping(value = "/states/Washington/metros/Bellingham", method = RequestMethod.GET)
	public String getWashingtonMetroBellingham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13380");
		return "WashingtonMetroBellingham";
	}   
@RequestMapping(value = "/states/Florida/counties/Hernando-County", method = RequestMethod.GET)
	public String getFloridaCountyHernandoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12053");
		return "FloridaCountyHernandoCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Aransas-County", method = RequestMethod.GET)
	public String getTexasCountyAransasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48007");
		return "TexasCountyAransasCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lynwood-city", method = RequestMethod.GET)
	public String getCaliforniaCityLynwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "644574");
		return "CaliforniaCityLynwoodcity";
	}   
@RequestMapping(value = "/states/Florida/counties/Highlands-County", method = RequestMethod.GET)
	public String getFloridaCountyHighlandsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12055");
		return "FloridaCountyHighlandsCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Angelina-County", method = RequestMethod.GET)
	public String getTexasCountyAngelinaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48005");
		return "TexasCountyAngelinaCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Queen-Annes-County", method = RequestMethod.GET)
	public String getMarylandCountyQueenAnnesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24035");
		return "MarylandCountyQueenAnnesCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Cortland-County", method = RequestMethod.GET)
	public String getNew_YorkCountyCortlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36023");
		return "New_YorkCountyCortlandCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/St-Marys-County", method = RequestMethod.GET)
	public String getMarylandCountyStMarysCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24037");
		return "MarylandCountyStMarysCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Columbia-County", method = RequestMethod.GET)
	public String getNew_YorkCountyColumbiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36021");
		return "New_YorkCountyColumbiaCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Glen-Ellyn-village", method = RequestMethod.GET)
	public String getIllinoisCityGlenEllynvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1729756");
		return "IllinoisCityGlenEllynvillage";
	}   
@RequestMapping(value = "/states/Maryland/counties/Somerset-County", method = RequestMethod.GET)
	public String getMarylandCountySomersetCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24039");
		return "MarylandCountySomersetCounty";
	}   
@RequestMapping(value = "/states/Washington/micros/Oak-Harbor", method = RequestMethod.GET)
	public String getWashingtonMicroOakHarbor(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36020");
		return "WashingtonMicroOakHarbor";
	}   
@RequestMapping(value = "/states/Florida/metros/Sebring", method = RequestMethod.GET)
	public String getFloridaMetroSebring(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42700");
		return "FloridaMetroSebring";
	}   
@RequestMapping(value = "/states/Texas/cities/Brushy-Creek", method = RequestMethod.GET)
	public String getTexasCityBrushyCreek(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4810897");
		return "TexasCityBrushyCreek";
	}   
@RequestMapping(value = "/states/New-York/counties/Erie-County", method = RequestMethod.GET)
	public String getNew_YorkCountyErieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36029");
		return "New_YorkCountyErieCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Montgomery-County", method = RequestMethod.GET)
	public String getMarylandCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24031");
		return "MarylandCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Dutchess-County", method = RequestMethod.GET)
	public String getNew_YorkCountyDutchessCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36027");
		return "New_YorkCountyDutchessCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Prince-Georges-County", method = RequestMethod.GET)
	public String getMarylandCountyPrinceGeorgesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24033");
		return "MarylandCountyPrinceGeorgesCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Delaware-County", method = RequestMethod.GET)
	public String getNew_YorkCountyDelawareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36025");
		return "New_YorkCountyDelawareCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Hillsborough-County", method = RequestMethod.GET)
	public String getFloridaCountyHillsboroughCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12057");
		return "FloridaCountyHillsboroughCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Plum-borough", method = RequestMethod.GET)
	public String getPennsylvaniaCityPlumborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4261536");
		return "PennsylvaniaCityPlumborough";
	}   
@RequestMapping(value = "/states/Texas/counties/Anderson-County", method = RequestMethod.GET)
	public String getTexasCountyAndersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48001");
		return "TexasCountyAndersonCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Collierville-town", method = RequestMethod.GET)
	public String getTennesseeCityColliervilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4716420");
		return "TennesseeCityColliervilletown";
	}   
@RequestMapping(value = "/states/Georgia/metros/AtlantaSandy-SpringsRoswell", method = RequestMethod.GET)
	public String getGeorgiaMetroAtlantaSandySpringsRoswell(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12060");
		return "GeorgiaMetroAtlantaSandySpringsRoswell";
	}   
@RequestMapping(value = "/states/Florida/counties/Indian-River-County", method = RequestMethod.GET)
	public String getFloridaCountyIndianRiverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12061");
		return "FloridaCountyIndianRiverCounty";
	}   
@RequestMapping(value = "/states/Florida/metros/Palm-BayMelbourneTitusville", method = RequestMethod.GET)
	public String getFloridaMetroPalmBayMelbourneTitusville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37340");
		return "FloridaMetroPalmBayMelbourneTitusville";
	}   
@RequestMapping(value = "/states/Florida/counties/Jackson-County", method = RequestMethod.GET)
	public String getFloridaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12063");
		return "FloridaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Marana-town", method = RequestMethod.GET)
	public String getArizonaCityMaranatown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "444270");
		return "ArizonaCityMaranatown";
	}   
@RequestMapping(value = "/states/Florida/cities/Richmond-West", method = RequestMethod.GET)
	public String getFloridaCityRichmondWest(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1260230");
		return "FloridaCityRichmondWest";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Bossier-City-city", method = RequestMethod.GET)
	public String getLouisianaCityBossierCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2208920");
		return "LouisianaCityBossierCitycity";
	}   
@RequestMapping(value = "/states/New-York/counties/Chautauqua-County", method = RequestMethod.GET)
	public String getNew_YorkCountyChautauquaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36013");
		return "New_YorkCountyChautauquaCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Worcester-County", method = RequestMethod.GET)
	public String getMarylandCountyWorcesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24047");
		return "MarylandCountyWorcesterCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Woodridge-village", method = RequestMethod.GET)
	public String getIllinoisCityWoodridgevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1783245");
		return "IllinoisCityWoodridgevillage";
	}   
@RequestMapping(value = "/states/New-York/counties/Cayuga-County", method = RequestMethod.GET)
	public String getNew_YorkCountyCayugaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36011");
		return "New_YorkCountyCayugaCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Anthem", method = RequestMethod.GET)
	public String getArizonaCityAnthem(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "402430");
		return "ArizonaCityAnthem";
	}   
@RequestMapping(value = "/states/New-York/counties/Clinton-County", method = RequestMethod.GET)
	public String getNew_YorkCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36019");
		return "New_YorkCountyClintonCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Talbot-County", method = RequestMethod.GET)
	public String getMarylandCountyTalbotCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24041");
		return "MarylandCountyTalbotCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Chenango-County", method = RequestMethod.GET)
	public String getNew_YorkCountyChenangoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36017");
		return "New_YorkCountyChenangoCounty";
	}   
@RequestMapping(value = "/states/Maryland/counties/Washington-County", method = RequestMethod.GET)
	public String getMarylandCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24043");
		return "MarylandCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Chemung-County", method = RequestMethod.GET)
	public String getNew_YorkCountyChemungCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36015");
		return "New_YorkCountyChemungCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Fredericksburg-city", method = RequestMethod.GET)
	public String getVirginiaCountyFredericksburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51630");
		return "VirginiaCountyFredericksburgcity";
	}   
@RequestMapping(value = "/states/Maryland/counties/Wicomico-County", method = RequestMethod.GET)
	public String getMarylandCountyWicomicoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24045");
		return "MarylandCountyWicomicoCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Lake-County", method = RequestMethod.GET)
	public String getFloridaCountyLakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12069");
		return "FloridaCountyLakeCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Medina-city", method = RequestMethod.GET)
	public String getOhioCityMedinacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3948790");
		return "OhioCityMedinacity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Allegheny-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyAlleghenyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42003");
		return "PennsylvaniaCountyAlleghenyCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Effingham-County", method = RequestMethod.GET)
	public String getIllinoisCountyEffinghamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17049");
		return "IllinoisCountyEffinghamCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Armstrong-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyArmstrongCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42005");
		return "PennsylvaniaCountyArmstrongCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Levittown-comunidad", method = RequestMethod.GET)
	public String getPuerto_RicoCityLevittowncomunidad(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7245336");
		return "Puerto_RicoCityLevittowncomunidad";
	}   
@RequestMapping(value = "/states/Illinois/counties/DuPage-County", method = RequestMethod.GET)
	public String getIllinoisCountyDuPageCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17043");
		return "IllinoisCountyDuPageCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Stillwater", method = RequestMethod.GET)
	public String getOklahomaMicroStillwater(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44660");
		return "OklahomaMicroStillwater";
	}   
@RequestMapping(value = "/states/Texas/cities/Texarkana-city", method = RequestMethod.GET)
	public String getTexasCityTexarkanacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4872368");
		return "TexasCityTexarkanacity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Adams-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42001");
		return "PennsylvaniaCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Camden-County", method = RequestMethod.GET)
	public String getMissouriCountyCamdenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29029");
		return "MissouriCountyCamdenCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Beaver-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyBeaverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42007");
		return "PennsylvaniaCountyBeaverCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Bedford-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyBedfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42009");
		return "PennsylvaniaCountyBedfordCounty";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Trujillo-Alto-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityTrujilloAltozonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7283606");
		return "Puerto_RicoCityTrujilloAltozonaurbana";
	}   
@RequestMapping(value = "/states/Missouri/counties/Butler-County", method = RequestMethod.GET)
	public String getMissouriCountyButlerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29023");
		return "MissouriCountyButlerCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Buchanan-County", method = RequestMethod.GET)
	public String getMissouriCountyBuchananCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29021");
		return "MissouriCountyBuchananCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/metros/Lawton", method = RequestMethod.GET)
	public String getOklahomaMetroLawton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30020");
		return "OklahomaMetroLawton";
	}   
@RequestMapping(value = "/states/California/cities/Huntington-Park-city", method = RequestMethod.GET)
	public String getCaliforniaCityHuntingtonParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "636056");
		return "CaliforniaCityHuntingtonParkcity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Harrisonburg-city", method = RequestMethod.GET)
	public String getVirginiaCityHarrisonburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5135624");
		return "VirginiaCityHarrisonburgcity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Callaway-County", method = RequestMethod.GET)
	public String getMissouriCountyCallawayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29027");
		return "MissouriCountyCallawayCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/North-Plainfield-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityNorthPlainfieldborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3453280");
		return "New_JerseyCityNorthPlainfieldborough";
	}   
@RequestMapping(value = "/states/Ohio/micros/Ashland", method = RequestMethod.GET)
	public String getOhioMicroAshland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11740");
		return "OhioMicroAshland";
	}   
@RequestMapping(value = "/states/Indiana/metros/Kokomo", method = RequestMethod.GET)
	public String getIndianaMetroKokomo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29020");
		return "IndianaMetroKokomo";
	}   
@RequestMapping(value = "/states/Montana/counties/Flathead-County", method = RequestMethod.GET)
	public String getMontanaCountyFlatheadCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30029");
		return "MontanaCountyFlatheadCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Fulton-County", method = RequestMethod.GET)
	public String getIllinoisCountyFultonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17057");
		return "IllinoisCountyFultonCounty";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Bellevue-city", method = RequestMethod.GET)
	public String getNebraskaCityBellevuecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3103950");
		return "NebraskaCityBellevuecity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Fitchburg-city", method = RequestMethod.GET)
	public String getWisconsinCityFitchburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5525950");
		return "WisconsinCityFitchburgcity";
	}   
@RequestMapping(value = "/states/Alabama/micros/Troy", method = RequestMethod.GET)
	public String getAlabamaMicroTroy(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45980");
		return "AlabamaMicroTroy";
	}   
@RequestMapping(value = "/states/Illinois/counties/Franklin-County", method = RequestMethod.GET)
	public String getIllinoisCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17055");
		return "IllinoisCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Arizona/micros/Show-Low", method = RequestMethod.GET)
	public String getArizonaMicroShowLow(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43320");
		return "ArizonaMicroShowLow";
	}   
@RequestMapping(value = "/states/Georgia/micros/Cordele", method = RequestMethod.GET)
	public String getGeorgiaMicroCordele(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18380");
		return "GeorgiaMicroCordele";
	}   
@RequestMapping(value = "/states/Illinois/counties/Fayette-County", method = RequestMethod.GET)
	public String getIllinoisCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17051");
		return "IllinoisCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Westport", method = RequestMethod.GET)
	public String getConnecticutCityWestport(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "983570");
		return "ConnecticutCityWestport";
	}   
@RequestMapping(value = "/states/California/cities/Fountain-Valley-city", method = RequestMethod.GET)
	public String getCaliforniaCityFountainValleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "625380");
		return "CaliforniaCityFountainValleycity";
	}   
@RequestMapping(value = "/states/Montana/counties/Cascade-County", method = RequestMethod.GET)
	public String getMontanaCountyCascadeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30013");
		return "MontanaCountyCascadeCounty";
	}   
@RequestMapping(value = "/states/Arizona/micros/Nogales", method = RequestMethod.GET)
	public String getArizonaMicroNogales(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35700");
		return "ArizonaMicroNogales";
	}   
@RequestMapping(value = "/states/Virginia/metros/Lynchburg", method = RequestMethod.GET)
	public String getVirginiaMetroLynchburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31340");
		return "VirginiaMetroLynchburg";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Boone-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyBooneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54005");
		return "West_VirginiaCountyBooneCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Cass-County", method = RequestMethod.GET)
	public String getMissouriCountyCassCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29037");
		return "MissouriCountyCassCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Berkeley-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyBerkeleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54003");
		return "West_VirginiaCountyBerkeleyCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Brooke-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyBrookeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54009");
		return "West_VirginiaCountyBrookeCounty";
	}   
@RequestMapping(value = "/states/Ohio/metros/Akron", method = RequestMethod.GET)
	public String getOhioMetroAkron(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10420");
		return "OhioMetroAkron";
	}   
@RequestMapping(value = "/states/Michigan/cities/Romulus-city", method = RequestMethod.GET)
	public String getMichiganCityRomuluscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2669420");
		return "MichiganCityRomuluscity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Cape-Girardeau-County", method = RequestMethod.GET)
	public String getMissouriCountyCapeGirardeauCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29031");
		return "MissouriCountyCapeGirardeauCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Park-Ridge-city", method = RequestMethod.GET)
	public String getIllinoisCityParkRidgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1757875");
		return "IllinoisCityParkRidgecity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Clinton-County", method = RequestMethod.GET)
	public String getIllinoisCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17027");
		return "IllinoisCountyClintonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Chula-Vista-city", method = RequestMethod.GET)
	public String getCaliforniaCityChulaVistacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "613392");
		return "CaliforniaCityChulaVistacity";
	}   
@RequestMapping(value = "/states/California/cities/Cypress-city", method = RequestMethod.GET)
	public String getCaliforniaCityCypresscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "617750");
		return "CaliforniaCityCypresscity";
	}   
@RequestMapping(value = "/states/California/metros/Chico", method = RequestMethod.GET)
	public String getCaliforniaMetroChico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17020");
		return "CaliforniaMetroChico";
	}   
@RequestMapping(value = "/states/Illinois/counties/Christian-County", method = RequestMethod.GET)
	public String getIllinoisCountyChristianCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17021");
		return "IllinoisCountyChristianCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Land-O-Lakes", method = RequestMethod.GET)
	public String getFloridaCityLandOLakes(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239200");
		return "FloridaCityLandOLakes";
	}   
@RequestMapping(value = "/states/Virginia/cities/Manassas-city", method = RequestMethod.GET)
	public String getVirginiaCityManassascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5148952");
		return "VirginiaCityManassascity";
	}   
@RequestMapping(value = "/states/California/cities/Rocklin-city", method = RequestMethod.GET)
	public String getCaliforniaCityRocklincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "662364");
		return "CaliforniaCityRocklincity";
	}   
@RequestMapping(value = "/states/North-Dakota/cities/Fargo-city", method = RequestMethod.GET)
	public String getNorth_DakotaCityFargocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3825700");
		return "North_DakotaCityFargocity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Barry-County", method = RequestMethod.GET)
	public String getMissouriCountyBarryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29009");
		return "MissouriCountyBarryCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Audrain-County", method = RequestMethod.GET)
	public String getMissouriCountyAudrainCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29007");
		return "MissouriCountyAudrainCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Gallup", method = RequestMethod.GET)
	public String getNew_MexicoMicroGallup(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23700");
		return "New_MexicoMicroGallup";
	}   
@RequestMapping(value = "/states/California/cities/Westmont", method = RequestMethod.GET)
	public String getCaliforniaCityWestmont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684592");
		return "CaliforniaCityWestmont";
	}   
@RequestMapping(value = "/states/Missouri/counties/Adair-County", method = RequestMethod.GET)
	public String getMissouriCountyAdairCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29001");
		return "MissouriCountyAdairCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Hagerstown-city", method = RequestMethod.GET)
	public String getMarylandCityHagerstowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2436075");
		return "MarylandCityHagerstowncity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Cabell-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyCabellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54011");
		return "West_VirginiaCountyCabellCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/University", method = RequestMethod.GET)
	public String getFloridaCityUniversity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1273163");
		return "FloridaCityUniversity";
	}   
@RequestMapping(value = "/states/Alaska/cities/Anchorage-municipality", method = RequestMethod.GET)
	public String getAlaskaCityAnchoragemunicipality(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "203000");
		return "AlaskaCityAnchoragemunicipality";
	}   
@RequestMapping(value = "/states/Tennessee/micros/McMinnville", method = RequestMethod.GET)
	public String getTennesseeMicroMcMinnville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32660");
		return "TennesseeMicroMcMinnville";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Fayette-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54019");
		return "West_VirginiaCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Coles-County", method = RequestMethod.GET)
	public String getIllinoisCountyColesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17029");
		return "IllinoisCountyColesCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Russellville-city", method = RequestMethod.GET)
	public String getArkansasCityRussellvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "561670");
		return "ArkansasCityRussellvillecity";
	}   
@RequestMapping(value = "/states/Texas/metros/Sherman-Denison", method = RequestMethod.GET)
	public String getTexasMetroShermanDenison(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43300");
		return "TexasMetroShermanDenison";
	}   
@RequestMapping(value = "/states/Illinois/counties/DeKalb-County", method = RequestMethod.GET)
	public String getIllinoisCountyDeKalbCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17037");
		return "IllinoisCountyDeKalbCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Cook-County", method = RequestMethod.GET)
	public String getIllinoisCountyCookCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17031");
		return "IllinoisCountyCookCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Warner-Robins-city", method = RequestMethod.GET)
	public String getGeorgiaCityWarnerRobinscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1380508");
		return "GeorgiaCityWarnerRobinscity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Elmhurst-city", method = RequestMethod.GET)
	public String getIllinoisCityElmhurstcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1723620");
		return "IllinoisCityElmhurstcity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Downers-Grove-village", method = RequestMethod.GET)
	public String getIllinoisCityDownersGrovevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1720591");
		return "IllinoisCityDownersGrovevillage";
	}   
@RequestMapping(value = "/states/Missouri/counties/Boone-County", method = RequestMethod.GET)
	public String getMissouriCountyBooneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29019");
		return "MissouriCountyBooneCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Mankato-city", method = RequestMethod.GET)
	public String getMinnesotaCityMankatocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2739878");
		return "MinnesotaCityMankatocity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Hampshire-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyHampshireCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54027");
		return "West_VirginiaCountyHampshireCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Greenbrier-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyGreenbrierCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54025");
		return "West_VirginiaCountyGreenbrierCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Morehead-City", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroMoreheadCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33980");
		return "North_CarolinaMicroMoreheadCity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Hancock-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyHancockCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54029");
		return "West_VirginiaCountyHancockCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Noblesville-city", method = RequestMethod.GET)
	public String getIndianaCityNoblesvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1854180");
		return "IndianaCityNoblesvillecity";
	}   
@RequestMapping(value = "/states/Wisconsin/micros/Stevens-Point", method = RequestMethod.GET)
	public String getWisconsinMicroStevensPoint(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44620");
		return "WisconsinMicroStevensPoint";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Roanoke-Rapids", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroRoanokeRapids(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40260");
		return "North_CarolinaMicroRoanokeRapids";
	}   
@RequestMapping(value = "/states/Florida/metros/DeltonaDaytona-BeachOrmond-Beach", method = RequestMethod.GET)
	public String getFloridaMetroDeltonaDaytonaBeachOrmondBeach(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19660");
		return "FloridaMetroDeltonaDaytonaBeachOrmondBeach";
	}   
@RequestMapping(value = "/states/Nevada/micros/Fallon", method = RequestMethod.GET)
	public String getNevadaMicroFallon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21980");
		return "NevadaMicroFallon";
	}   
@RequestMapping(value = "/states/California/cities/National-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityNationalCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "650398");
		return "CaliforniaCityNationalCitycity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Northbrook-village", method = RequestMethod.GET)
	public String getIllinoisCityNorthbrookvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1753481");
		return "IllinoisCityNorthbrookvillage";
	}   
@RequestMapping(value = "/states/Illinois/counties/Adams-County", method = RequestMethod.GET)
	public String getIllinoisCountyAdamsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17001");
		return "IllinoisCountyAdamsCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/St-Charles-city", method = RequestMethod.GET)
	public String getMissouriCityStCharlescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2964082");
		return "MissouriCityStCharlescity";
	}   
@RequestMapping(value = "/states/Washington/cities/Kennewick-city", method = RequestMethod.GET)
	public String getWashingtonCityKennewickcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5335275");
		return "WashingtonCityKennewickcity";
	}   
@RequestMapping(value = "/states/Alaska/counties/Juneau-City-and-Borough", method = RequestMethod.GET)
	public String getAlaskaCountyJuneauCityandBorough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2110");
		return "AlaskaCountyJuneauCityandBorough";
	}   
@RequestMapping(value = "/states/Texas/cities/Bryan-city", method = RequestMethod.GET)
	public String getTexasCityBryancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4810912");
		return "TexasCityBryancity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Jackson-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54035");
		return "West_VirginiaCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Holladay-city", method = RequestMethod.GET)
	public String getUtahCityHolladaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4936070");
		return "UtahCityHolladaycity";
	}   
@RequestMapping(value = "/states/California/cities/Cathedral-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityCathedralCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "612048");
		return "CaliforniaCityCathedralCitycity";
	}   
@RequestMapping(value = "/states/Florida/cities/Oviedo-city", method = RequestMethod.GET)
	public String getFloridaCityOviedocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1253575");
		return "FloridaCityOviedocity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Harrison-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyHarrisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54033");
		return "West_VirginiaCountyHarrisonCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Fitchburg-city", method = RequestMethod.GET)
	public String getMassachusettsCityFitchburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2523875");
		return "MassachusettsCityFitchburgcity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Kanawha-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyKanawhaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54039");
		return "West_VirginiaCountyKanawhaCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Munster-town", method = RequestMethod.GET)
	public String getIndianaCityMunstertown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1851912");
		return "IndianaCityMunstertown";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Jefferson-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54037");
		return "West_VirginiaCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lafayette-city", method = RequestMethod.GET)
	public String getCaliforniaCityLafayettecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639122");
		return "CaliforniaCityLafayettecity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Boone-County", method = RequestMethod.GET)
	public String getIllinoisCountyBooneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17007");
		return "IllinoisCountyBooneCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Watertown-city", method = RequestMethod.GET)
	public String getNew_YorkCityWatertowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3678608");
		return "New_YorkCityWatertowncity";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Asheville", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroAsheville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11700");
		return "North_CarolinaMetroAsheville";
	}   
@RequestMapping(value = "/states/New-Jersey/metros/Trenton", method = RequestMethod.GET)
	public String getNew_JerseyMetroTrenton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45940");
		return "New_JerseyMetroTrenton";
	}   
@RequestMapping(value = "/states/Maryland/micros/Easton", method = RequestMethod.GET)
	public String getMarylandMicroEaston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20660");
		return "MarylandMicroEaston";
	}   
@RequestMapping(value = "/states/Illinois/counties/Bureau-County", method = RequestMethod.GET)
	public String getIllinoisCountyBureauCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17011");
		return "IllinoisCountyBureauCounty";
	}   
@RequestMapping(value = "/states/Alaska/counties/Kenai-Peninsula-Borough", method = RequestMethod.GET)
	public String getAlaskaCountyKenaiPeninsulaBorough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2122");
		return "AlaskaCountyKenaiPeninsulaBorough";
	}   
@RequestMapping(value = "/states/New-York/cities/West-Seneca", method = RequestMethod.GET)
	public String getNew_YorkCityWestSeneca(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3680907");
		return "New_YorkCityWestSeneca";
	}   
@RequestMapping(value = "/states/Texas/cities/Victoria-city", method = RequestMethod.GET)
	public String getTexasCityVictoriacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4875428");
		return "TexasCityVictoriacity";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Del-City-city", method = RequestMethod.GET)
	public String getOklahomaCityDelCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4019900");
		return "OklahomaCityDelCitycity";
	}   
@RequestMapping(value = "/states/Oregon/micros/Prineville", method = RequestMethod.GET)
	public String getOregonMicroPrineville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39260");
		return "OregonMicroPrineville";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Lumberton", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroLumberton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31300");
		return "North_CarolinaMicroLumberton";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Carlsbad-city", method = RequestMethod.GET)
	public String getNew_MexicoCityCarlsbadcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3512150");
		return "New_MexicoCityCarlsbadcity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Logan-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyLoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54045");
		return "West_VirginiaCountyLoganCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Wright", method = RequestMethod.GET)
	public String getFloridaCityWright(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1278800");
		return "FloridaCityWright";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Lincoln-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54043");
		return "West_VirginiaCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/North-Dakota/cities/Grand-Forks-city", method = RequestMethod.GET)
	public String getNorth_DakotaCityGrandForkscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3832060");
		return "North_DakotaCityGrandForkscity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Marion-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54049");
		return "West_VirginiaCountyMarionCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/McDowell-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMcDowellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54047");
		return "West_VirginiaCountyMcDowellCounty";
	}   
@RequestMapping(value = "/states/California/cities/Bay-Point", method = RequestMethod.GET)
	public String getCaliforniaCityBayPoint(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "604415");
		return "CaliforniaCityBayPoint";
	}   
@RequestMapping(value = "/states/Texas/cities/Texas-City-city", method = RequestMethod.GET)
	public String getTexasCityTexasCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4872392");
		return "TexasCityTexasCitycity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Champaign-County", method = RequestMethod.GET)
	public String getIllinoisCountyChampaignCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17019");
		return "IllinoisCountyChampaignCounty";
	}   
@RequestMapping(value = "/states/California/cities/Foster-City-city", method = RequestMethod.GET)
	public String getCaliforniaCityFosterCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "625338");
		return "CaliforniaCityFosterCitycity";
	}   
@RequestMapping(value = "/states/New-York/cities/Kiryas-Joel-village", method = RequestMethod.GET)
	public String getNew_YorkCityKiryasJoelvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3639853");
		return "New_YorkCityKiryasJoelvillage";
	}   
@RequestMapping(value = "/states/California/cities/Lancaster-city", method = RequestMethod.GET)
	public String getCaliforniaCityLancastercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640130");
		return "CaliforniaCityLancastercity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Douglasville-city", method = RequestMethod.GET)
	public String getGeorgiaCityDouglasvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1323900");
		return "GeorgiaCityDouglasvillecity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/East-Orange-city", method = RequestMethod.GET)
	public String getNew_JerseyCityEastOrangecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3419390");
		return "New_JerseyCityEastOrangecity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Chantilly", method = RequestMethod.GET)
	public String getVirginiaCityChantilly(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5114744");
		return "VirginiaCityChantilly";
	}   
@RequestMapping(value = "/states/Washington/cities/Olympia-city", method = RequestMethod.GET)
	public String getWashingtonCityOlympiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5351300");
		return "WashingtonCityOlympiacity";
	}   
@RequestMapping(value = "/states/California/cities/Oildale", method = RequestMethod.GET)
	public String getCaliforniaCityOildale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "653448");
		return "CaliforniaCityOildale";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Mason-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMasonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54053");
		return "West_VirginiaCountyMasonCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Marshall-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMarshallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54051");
		return "West_VirginiaCountyMarshallCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Romeoville-village", method = RequestMethod.GET)
	public String getIllinoisCityRomeovillevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1765442");
		return "IllinoisCityRomeovillevillage";
	}   
@RequestMapping(value = "/states/Utah/cities/South-Jordan-city", method = RequestMethod.GET)
	public String getUtahCitySouthJordancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4970850");
		return "UtahCitySouthJordancity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Mineral-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMineralCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54057");
		return "West_VirginiaCountyMineralCounty";
	}   
@RequestMapping(value = "/states/California/cities/Woodland-city", method = RequestMethod.GET)
	public String getCaliforniaCityWoodlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "686328");
		return "CaliforniaCityWoodlandcity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Randallstown", method = RequestMethod.GET)
	public String getMarylandCityRandallstown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2464950");
		return "MarylandCityRandallstown";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Mercer-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMercerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54055");
		return "West_VirginiaCountyMercerCounty";
	}   
@RequestMapping(value = "/states/Mississippi/micros/McComb", method = RequestMethod.GET)
	public String getMississippiMicroMcComb(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32620");
		return "MississippiMicroMcComb";
	}   
@RequestMapping(value = "/states/California/cities/Riverbank-city", method = RequestMethod.GET)
	public String getCaliforniaCityRiverbankcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "661068");
		return "CaliforniaCityRiverbankcity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Mingo-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMingoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54059");
		return "West_VirginiaCountyMingoCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Casas-Adobes", method = RequestMethod.GET)
	public String getArizonaCityCasasAdobes(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "410670");
		return "ArizonaCityCasasAdobes";
	}   
@RequestMapping(value = "/states/Florida/metros/Jacksonville", method = RequestMethod.GET)
	public String getFloridaMetroJacksonville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27260");
		return "FloridaMetroJacksonville";
	}   
@RequestMapping(value = "/states/California/cities/Lincoln-city", method = RequestMethod.GET)
	public String getCaliforniaCityLincolncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "641474");
		return "CaliforniaCityLincolncity";
	}   
@RequestMapping(value = "/states/New-York/cities/Lake-Ronkonkoma", method = RequestMethod.GET)
	public String getNew_YorkCityLakeRonkonkoma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3640838");
		return "New_YorkCityLakeRonkonkoma";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Monongalia-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyMonongaliaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54061");
		return "West_VirginiaCountyMonongaliaCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/Grants-Pass-city", method = RequestMethod.GET)
	public String getOregonCityGrantsPasscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4130550");
		return "OregonCityGrantsPasscity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Nicholas-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyNicholasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54067");
		return "West_VirginiaCountyNicholasCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Fairfield-city", method = RequestMethod.GET)
	public String getOhioCityFairfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3925970");
		return "OhioCityFairfieldcity";
	}   
@RequestMapping(value = "/states/Colorado/micros/Montrose", method = RequestMethod.GET)
	public String getColoradoMicroMontrose(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33940");
		return "ColoradoMicroMontrose";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Ohio-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyOhioCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54069");
		return "West_VirginiaCountyOhioCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Hardin-County", method = RequestMethod.GET)
	public String getTexasCountyHardinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48199");
		return "TexasCountyHardinCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Belton-city", method = RequestMethod.GET)
	public String getMissouriCityBeltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2904384");
		return "MissouriCityBeltoncity";
	}   
@RequestMapping(value = "/states/Texas/cities/Lewisville-city", method = RequestMethod.GET)
	public String getTexasCityLewisvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4842508");
		return "TexasCityLewisvillecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Poinciana", method = RequestMethod.GET)
	public String getFloridaCityPoinciana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1257900");
		return "FloridaCityPoinciana";
	}   
@RequestMapping(value = "/states/Washington/cities/South-Hill", method = RequestMethod.GET)
	public String getWashingtonCitySouthHill(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5365922");
		return "WashingtonCitySouthHill";
	}   
@RequestMapping(value = "/states/Kentucky/counties/McCracken-County", method = RequestMethod.GET)
	public String getKentuckyCountyMcCrackenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21145");
		return "KentuckyCountyMcCrackenCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Mifflin-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyMifflinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42087");
		return "PennsylvaniaCountyMifflinCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Monroe-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42089");
		return "PennsylvaniaCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Ruston-city", method = RequestMethod.GET)
	public String getLouisianaCityRustoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2266655");
		return "LouisianaCityRustoncity";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Mount-Sterling", method = RequestMethod.GET)
	public String getKentuckyMicroMountSterling(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34460");
		return "KentuckyMicroMountSterling";
	}   
@RequestMapping(value = "/states/Virginia/metros/Harrisonburg", method = RequestMethod.GET)
	public String getVirginiaMetroHarrisonburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25500");
		return "VirginiaMetroHarrisonburg";
	}   
@RequestMapping(value = "/states/Florida/cities/Buenaventura-Lakes", method = RequestMethod.GET)
	public String getFloridaCityBuenaventuraLakes(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1209415");
		return "FloridaCityBuenaventuraLakes";
	}   
@RequestMapping(value = "/states/Texas/cities/Spring", method = RequestMethod.GET)
	public String getTexasCitySpring(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4869596");
		return "TexasCitySpring";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Arlington", method = RequestMethod.GET)
	public String getMassachusettsCityArlington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2501640");
		return "MassachusettsCityArlington";
	}   
@RequestMapping(value = "/states/New-York/cities/Auburn-city", method = RequestMethod.GET)
	public String getNew_YorkCityAuburncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3603078");
		return "New_YorkCityAuburncity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Tigard-city", method = RequestMethod.GET)
	public String getOregonCityTigardcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4173650");
		return "OregonCityTigardcity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Logan-County", method = RequestMethod.GET)
	public String getKentuckyCountyLoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21141");
		return "KentuckyCountyLoganCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/McKean-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyMcKeanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42083");
		return "PennsylvaniaCountyMcKeanCounty";
	}   
@RequestMapping(value = "/states/Indiana/metros/Elkhart-Goshen", method = RequestMethod.GET)
	public String getIndianaMetroElkhartGoshen(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21140");
		return "IndianaMetroElkhartGoshen";
	}   
@RequestMapping(value = "/states/Washington/micros/Port-Angeles", method = RequestMethod.GET)
	public String getWashingtonMicroPortAngeles(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38820");
		return "WashingtonMicroPortAngeles";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Mercer-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyMercerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42085");
		return "PennsylvaniaCountyMercerCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Harrison-village", method = RequestMethod.GET)
	public String getNew_YorkCityHarrisonvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3632402");
		return "New_YorkCityHarrisonvillage";
	}   
@RequestMapping(value = "/states/California/cities/Porterville-city", method = RequestMethod.GET)
	public String getCaliforniaCityPortervillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "658240");
		return "CaliforniaCityPortervillecity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Lycoming-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyLycomingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42081");
		return "PennsylvaniaCountyLycomingCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Luzerne-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyLuzerneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42079");
		return "PennsylvaniaCountyLuzerneCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Marshall-County", method = RequestMethod.GET)
	public String getKentuckyCountyMarshallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21157");
		return "KentuckyCountyMarshallCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Lebanon-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyLebanonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42075");
		return "PennsylvaniaCountyLebanonCounty";
	}   
@RequestMapping(value = "/states/Connecticut/metros/Bridgeport-Stamford-Norwalk", method = RequestMethod.GET)
	public String getConnecticutMetroBridgeportStamfordNorwalk(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14860");
		return "ConnecticutMetroBridgeportStamfordNorwalk";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Lehigh-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyLehighCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42077");
		return "PennsylvaniaCountyLehighCounty";
	}   
@RequestMapping(value = "/states/Montana/counties/Silver-Bow-County", method = RequestMethod.GET)
	public String getMontanaCountySilverBowCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30093");
		return "MontanaCountySilverBowCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Green-city", method = RequestMethod.GET)
	public String getOhioCityGreencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3931860");
		return "OhioCityGreencity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Lynchburg-city", method = RequestMethod.GET)
	public String getVirginiaCityLynchburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5147672");
		return "VirginiaCityLynchburgcity";
	}   
@RequestMapping(value = "/states/New-York/cities/Shirley", method = RequestMethod.GET)
	public String getNew_YorkCityShirley(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3667070");
		return "New_YorkCityShirley";
	}   
@RequestMapping(value = "/states/Ohio/cities/Springfield-city", method = RequestMethod.GET)
	public String getOhioCitySpringfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3974118");
		return "OhioCitySpringfieldcity";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Stillwater-city", method = RequestMethod.GET)
	public String getOklahomaCityStillwatercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4070300");
		return "OklahomaCityStillwatercity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Oak-Creek-city", method = RequestMethod.GET)
	public String getWisconsinCityOakCreekcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5558800");
		return "WisconsinCityOakCreekcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Lancaster-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyLancasterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42071");
		return "PennsylvaniaCountyLancasterCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Madison-County", method = RequestMethod.GET)
	public String getKentuckyCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21151");
		return "KentuckyCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Lawrence-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42073");
		return "PennsylvaniaCountyLawrenceCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Hialeah-Gardens-city", method = RequestMethod.GET)
	public String getFloridaCityHialeahGardenscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1230025");
		return "FloridaCityHialeahGardenscity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Lackawanna-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyLackawannaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42069");
		return "PennsylvaniaCountyLackawannaCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Laurel-County", method = RequestMethod.GET)
	public String getKentuckyCountyLaurelCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21125");
		return "KentuckyCountyLaurelCounty";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Ashland-city", method = RequestMethod.GET)
	public String getKentuckyCityAshlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2102368");
		return "KentuckyCityAshlandcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Jefferson-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42065");
		return "PennsylvaniaCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/California/cities/Soledad-city", method = RequestMethod.GET)
	public String getCaliforniaCitySoledadcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "672520");
		return "CaliforniaCitySoledadcity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Knox-County", method = RequestMethod.GET)
	public String getKentuckyCountyKnoxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21121");
		return "KentuckyCountyKnoxCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Juniata-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyJuniataCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42067");
		return "PennsylvaniaCountyJuniataCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Elk-City", method = RequestMethod.GET)
	public String getOklahomaMicroElkCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21120");
		return "OklahomaMicroElkCity";
	}   
@RequestMapping(value = "/states/Montana/counties/Ravalli-County", method = RequestMethod.GET)
	public String getMontanaCountyRavalliCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30081");
		return "MontanaCountyRavalliCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Oak-Ridge-city", method = RequestMethod.GET)
	public String getTennesseeCityOakRidgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4755120");
		return "TennesseeCityOakRidgecity";
	}   
@RequestMapping(value = "/states/Alaska/counties/MatanuskaSusitna-Borough", method = RequestMethod.GET)
	public String getAlaskaCountyMatanuskaSusitnaBorough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2170");
		return "AlaskaCountyMatanuskaSusitnaBorough";
	}   
@RequestMapping(value = "/states/Washington/cities/Moses-Lake-city", method = RequestMethod.GET)
	public String getWashingtonCityMosesLakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5347245");
		return "WashingtonCityMosesLakecity";
	}   
@RequestMapping(value = "/states/Kansas/micros/Garden-City", method = RequestMethod.GET)
	public String getKansasMicroGardenCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23780");
		return "KansasMicroGardenCity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Huntingdon-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyHuntingdonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42061");
		return "PennsylvaniaCountyHuntingdonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/micros/Bennettsville", method = RequestMethod.GET)
	public String getSouth_CarolinaMicroBennettsville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13500");
		return "South_CarolinaMicroBennettsville";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Indiana-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyIndianaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42063");
		return "PennsylvaniaCountyIndianaCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Lees-Summit-city", method = RequestMethod.GET)
	public String getMissouriCityLeesSummitcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2941348");
		return "MissouriCityLeesSummitcity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Henry-County", method = RequestMethod.GET)
	public String getMissouriCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29083");
		return "MissouriCountyHenryCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Lincoln-County", method = RequestMethod.GET)
	public String getKentuckyCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21137");
		return "KentuckyCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Greene-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42059");
		return "PennsylvaniaCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Lawrence-city", method = RequestMethod.GET)
	public String getMassachusettsCityLawrencecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2534550");
		return "MassachusettsCityLawrencecity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Letcher-County", method = RequestMethod.GET)
	public String getKentuckyCountyLetcherCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21133");
		return "KentuckyCountyLetcherCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Franklin-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42055");
		return "PennsylvaniaCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Dale-City", method = RequestMethod.GET)
	public String getVirginiaCityDaleCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5121088");
		return "VirginiaCityDaleCity";
	}   
@RequestMapping(value = "/states/Idaho/metros/Idaho-Falls", method = RequestMethod.GET)
	public String getIdahoMetroIdahoFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26820");
		return "IdahoMetroIdahoFalls";
	}   
@RequestMapping(value = "/states/Florida/cities/Miramar-city", method = RequestMethod.GET)
	public String getFloridaCityMiramarcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1245975");
		return "FloridaCityMiramarcity";
	}   
@RequestMapping(value = "/states/Utah/cities/Spanish-Fork-city", method = RequestMethod.GET)
	public String getUtahCitySpanishForkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4971290");
		return "UtahCitySpanishForkcity";
	}   
@RequestMapping(value = "/states/California/cities/Rancho-Santa-Margarita-city", method = RequestMethod.GET)
	public String getCaliforniaCityRanchoSantaMargaritacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659587");
		return "CaliforniaCityRanchoSantaMargaritacity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Jefferson-County", method = RequestMethod.GET)
	public String getMissouriCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29099");
		return "MissouriCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Huntersville-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityHuntersvilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3733120");
		return "North_CarolinaCityHuntersvilletown";
	}   
@RequestMapping(value = "/states/Florida/metros/MiamiFort-LauderdaleWest-Palm-Beach", method = RequestMethod.GET)
	public String getFloridaMetroMiamiFortLauderdaleWestPalmBeach(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33100");
		return "FloridaMetroMiamiFortLauderdaleWestPalmBeach";
	}   
@RequestMapping(value = "/states/Ohio/micros/Sidney", method = RequestMethod.GET)
	public String getOhioMicroSidney(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43380");
		return "OhioMicroSidney";
	}   
@RequestMapping(value = "/states/New-York/cities/North-Bellmore", method = RequestMethod.GET)
	public String getNew_YorkCityNorthBellmore(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3651517");
		return "New_YorkCityNorthBellmore";
	}   
@RequestMapping(value = "/states/California/cities/Huntington-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCityHuntingtonBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "636000");
		return "CaliforniaCityHuntingtonBeachcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Hialeah-city", method = RequestMethod.GET)
	public String getFloridaCityHialeahcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1230000");
		return "FloridaCityHialeahcity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Howell-County", method = RequestMethod.GET)
	public String getMissouriCountyHowellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29091");
		return "MissouriCountyHowellCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Fayette-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42051");
		return "PennsylvaniaCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Inver-Grove-Heights-city", method = RequestMethod.GET)
	public String getMinnesotaCityInverGroveHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2731076");
		return "MinnesotaCityInverGroveHeightscity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Jasper-County", method = RequestMethod.GET)
	public String getMissouriCountyJasperCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29097");
		return "MissouriCountyJasperCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Norfolk-city", method = RequestMethod.GET)
	public String getVirginiaCityNorfolkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5157000");
		return "VirginiaCityNorfolkcity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Jackson-County", method = RequestMethod.GET)
	public String getMissouriCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29095");
		return "MissouriCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Marietta-city", method = RequestMethod.GET)
	public String getGeorgiaCityMariettacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1349756");
		return "GeorgiaCityMariettacity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Elk-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyElkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42047");
		return "PennsylvaniaCountyElkCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Erie-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyErieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42049");
		return "PennsylvaniaCountyErieCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Henderson-County", method = RequestMethod.GET)
	public String getKentuckyCountyHendersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21101");
		return "KentuckyCountyHendersonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Dauphin-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyDauphinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42043");
		return "PennsylvaniaCountyDauphinCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Kirkwood-city", method = RequestMethod.GET)
	public String getMissouriCityKirkwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2939044");
		return "MissouriCityKirkwoodcity";
	}   
@RequestMapping(value = "/states/Ohio/micros/Ashtabula", method = RequestMethod.GET)
	public String getOhioMicroAshtabula(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11780");
		return "OhioMicroAshtabula";
	}   
@RequestMapping(value = "/states/Illinois/counties/Kane-County", method = RequestMethod.GET)
	public String getIllinoisCountyKaneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17089");
		return "IllinoisCountyKaneCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Delaware-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyDelawareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42045");
		return "PennsylvaniaCountyDelawareCounty";
	}   
@RequestMapping(value = "/states/Missouri/micros/Lebanon", method = RequestMethod.GET)
	public String getMissouriMicroLebanon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30060");
		return "MissouriMicroLebanon";
	}   
@RequestMapping(value = "/states/Illinois/counties/Jersey-County", method = RequestMethod.GET)
	public String getIllinoisCountyJerseyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17083");
		return "IllinoisCountyJerseyCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Jo-Daviess-County", method = RequestMethod.GET)
	public String getIllinoisCountyJoDaviessCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17085");
		return "IllinoisCountyJoDaviessCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Hopkins-County", method = RequestMethod.GET)
	public String getKentuckyCountyHopkinsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21107");
		return "KentuckyCountyHopkinsCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Jefferson-County", method = RequestMethod.GET)
	public String getIllinoisCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17081");
		return "IllinoisCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Utah/cities/Logan-city", method = RequestMethod.GET)
	public String getUtahCityLogancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4945860");
		return "UtahCityLogancity";
	}   
@RequestMapping(value = "/states/Montana/counties/Missoula-County", method = RequestMethod.GET)
	public String getMontanaCountyMissoulaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30063");
		return "MontanaCountyMissoulaCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Plano-city", method = RequestMethod.GET)
	public String getTexasCityPlanocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4858016");
		return "TexasCityPlanocity";
	}   
@RequestMapping(value = "/states/Texas/micros/Mount-Pleasant", method = RequestMethod.GET)
	public String getTexasMicroMountPleasant(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34420");
		return "TexasMicroMountPleasant";
	}   
@RequestMapping(value = "/states/Missouri/counties/Dunklin-County", method = RequestMethod.GET)
	public String getMissouriCountyDunklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29069");
		return "MissouriCountyDunklinCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/micros/Laconia", method = RequestMethod.GET)
	public String getNew_HampshireMicroLaconia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29060");
		return "New_HampshireMicroLaconia";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Chicopee-city", method = RequestMethod.GET)
	public String getMassachusettsCityChicopeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2513660");
		return "MassachusettsCityChicopeecity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Cumberland-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyCumberlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42041");
		return "PennsylvaniaCountyCumberlandCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Cambridge-city", method = RequestMethod.GET)
	public String getMassachusettsCityCambridgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2511000");
		return "MassachusettsCityCambridgecity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Clinton-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42035");
		return "PennsylvaniaCountyClintonCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Perrysburg-city", method = RequestMethod.GET)
	public String getOhioCityPerrysburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3962148");
		return "OhioCityPerrysburgcity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Johnson-County", method = RequestMethod.GET)
	public String getKentuckyCountyJohnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21115");
		return "KentuckyCountyJohnsonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Columbia-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyColumbiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42037");
		return "PennsylvaniaCountyColumbiaCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Jessamine-County", method = RequestMethod.GET)
	public String getKentuckyCountyJessamineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21113");
		return "KentuckyCountyJessamineCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Lake-County", method = RequestMethod.GET)
	public String getIllinoisCountyLakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17097");
		return "IllinoisCountyLakeCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Clarion-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyClarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42031");
		return "PennsylvaniaCountyClarionCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Jefferson-County", method = RequestMethod.GET)
	public String getKentuckyCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21111");
		return "KentuckyCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/LaSalle-County", method = RequestMethod.GET)
	public String getIllinoisCountyLaSalleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17099");
		return "IllinoisCountyLaSalleCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Clearfield-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyClearfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42033");
		return "PennsylvaniaCountyClearfieldCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Alamogordo", method = RequestMethod.GET)
	public String getNew_MexicoMicroAlamogordo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10460");
		return "New_MexicoMicroAlamogordo";
	}   
@RequestMapping(value = "/states/Ohio/cities/Fairborn-city", method = RequestMethod.GET)
	public String getOhioCityFairborncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3925914");
		return "OhioCityFairborncity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Kendall-County", method = RequestMethod.GET)
	public String getIllinoisCountyKendallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17093");
		return "IllinoisCountyKendallCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Macomb", method = RequestMethod.GET)
	public String getIllinoisMicroMacomb(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31380");
		return "IllinoisMicroMacomb";
	}   
@RequestMapping(value = "/states/Illinois/counties/Knox-County", method = RequestMethod.GET)
	public String getIllinoisCountyKnoxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17095");
		return "IllinoisCountyKnoxCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Enterprise-city", method = RequestMethod.GET)
	public String getAlabamaCityEnterprisecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "124184");
		return "AlabamaCityEnterprisecity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Fall-River-city", method = RequestMethod.GET)
	public String getMassachusettsCityFallRivercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2523000");
		return "MassachusettsCityFallRivercity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Crawford-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyCrawfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42039");
		return "PennsylvaniaCountyCrawfordCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Virginia-Beach-city", method = RequestMethod.GET)
	public String getVirginiaCityVirginiaBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5182000");
		return "VirginiaCityVirginiaBeachcity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Kankakee-County", method = RequestMethod.GET)
	public String getIllinoisCountyKankakeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17091");
		return "IllinoisCountyKankakeeCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Kenton-County", method = RequestMethod.GET)
	public String getKentuckyCountyKentonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21117");
		return "KentuckyCountyKentonCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Brookfield-city", method = RequestMethod.GET)
	public String getWisconsinCityBrookfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5510025");
		return "WisconsinCityBrookfieldcity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Greene-County", method = RequestMethod.GET)
	public String getMissouriCountyGreeneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29077");
		return "MissouriCountyGreeneCounty";
	}   
@RequestMapping(value = "/states/California/cities/Atwater-city", method = RequestMethod.GET)
	public String getCaliforniaCityAtwatercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "603162");
		return "CaliforniaCityAtwatercity";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Norfolk", method = RequestMethod.GET)
	public String getNebraskaMicroNorfolk(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35740");
		return "NebraskaMicroNorfolk";
	}   
@RequestMapping(value = "/states/Missouri/counties/Franklin-County", method = RequestMethod.GET)
	public String getMissouriCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29071");
		return "MissouriCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Brevard", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroBrevard(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14820");
		return "North_CarolinaMicroBrevard";
	}   
@RequestMapping(value = "/states/California/cities/Suisun-City-city", method = RequestMethod.GET)
	public String getCaliforniaCitySuisunCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "675630");
		return "CaliforniaCitySuisunCitycity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Tualatin-city", method = RequestMethod.GET)
	public String getOregonCityTualatincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4174950");
		return "OregonCityTualatincity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Carbon-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyCarbonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42025");
		return "PennsylvaniaCountyCarbonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Centre-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyCentreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42027");
		return "PennsylvaniaCountyCentreCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Emporia-city", method = RequestMethod.GET)
	public String getKansasCityEmporiacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2021275");
		return "KansasCityEmporiacity";
	}   
@RequestMapping(value = "/states/California/metros/San-Luis-ObispoPaso-RoblesArroyo-Grande", method = RequestMethod.GET)
	public String getCaliforniaMetroSanLuisObispoPasoRoblesArroyoGrande(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42020");
		return "CaliforniaMetroSanLuisObispoPasoRoblesArroyoGrande";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Cambria-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyCambriaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42021");
		return "PennsylvaniaCountyCambriaCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Cheektowaga", method = RequestMethod.GET)
	public String getNew_YorkCityCheektowaga(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3615000");
		return "New_YorkCityCheektowaga";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Bayamon-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityBayamonzonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7206593");
		return "Puerto_RicoCityBayamonzonaurbana";
	}   
@RequestMapping(value = "/states/Ohio/micros/Chillicothe", method = RequestMethod.GET)
	public String getOhioMicroChillicothe(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17060");
		return "OhioMicroChillicothe";
	}   
@RequestMapping(value = "/states/Illinois/counties/Grundy-County", method = RequestMethod.GET)
	public String getIllinoisCountyGrundyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17063");
		return "IllinoisCountyGrundyCounty";
	}   
@RequestMapping(value = "/states/California/cities/Westminster-city", method = RequestMethod.GET)
	public String getCaliforniaCityWestminstercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684550");
		return "CaliforniaCityWestminstercity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Chester-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyChesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42029");
		return "PennsylvaniaCountyChesterCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Livonia-city", method = RequestMethod.GET)
	public String getMichiganCityLivoniacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2649000");
		return "MichiganCityLivoniacity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Christian-County", method = RequestMethod.GET)
	public String getMissouriCountyChristianCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29043");
		return "MissouriCountyChristianCounty";
	}   
@RequestMapping(value = "/states/Montana/counties/Lake-County", method = RequestMethod.GET)
	public String getMontanaCountyLakeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30047");
		return "MontanaCountyLakeCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Ilchester", method = RequestMethod.GET)
	public String getMarylandCityIlchester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2441475");
		return "MarylandCityIlchester";
	}   
@RequestMapping(value = "/states/Missouri/counties/Clinton-County", method = RequestMethod.GET)
	public String getMissouriCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29049");
		return "MissouriCountyClintonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Palm-Bay-city", method = RequestMethod.GET)
	public String getFloridaCityPalmBaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254000");
		return "FloridaCityPalmBaycity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Clay-County", method = RequestMethod.GET)
	public String getMissouriCountyClayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29047");
		return "MissouriCountyClayCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Apex-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityApextown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3701520");
		return "North_CarolinaCityApextown";
	}   
@RequestMapping(value = "/states/Montana/counties/Lewis-and-Clark-County", method = RequestMethod.GET)
	public String getMontanaCountyLewisandClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30049");
		return "MontanaCountyLewisandClarkCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/OFallon-city", method = RequestMethod.GET)
	public String getIllinoisCityOFalloncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1755249");
		return "IllinoisCityOFalloncity";
	}   
@RequestMapping(value = "/states/New-Hampshire/cities/Concord-city", method = RequestMethod.GET)
	public String getNew_HampshireCityConcordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3314200");
		return "New_HampshireCityConcordcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Blair-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyBlairCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42013");
		return "PennsylvaniaCountyBlairCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Bradford-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyBradfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42015");
		return "PennsylvaniaCountyBradfordCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Warsaw", method = RequestMethod.GET)
	public String getIndianaMicroWarsaw(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47700");
		return "IndianaMicroWarsaw";
	}   
@RequestMapping(value = "/states/Alabama/cities/Opelika-city", method = RequestMethod.GET)
	public String getAlabamaCityOpelikacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "157048");
		return "AlabamaCityOpelikacity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Iroquois-County", method = RequestMethod.GET)
	public String getIllinoisCountyIroquoisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17075");
		return "IllinoisCountyIroquoisCounty";
	}   
@RequestMapping(value = "/states/Louisiana/metros/ShreveportBossier-City", method = RequestMethod.GET)
	public String getLouisianaMetroShreveportBossierCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43340");
		return "LouisianaMetroShreveportBossierCity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Jackson-County", method = RequestMethod.GET)
	public String getIllinoisCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17077");
		return "IllinoisCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Berks-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyBerksCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42011");
		return "PennsylvaniaCountyBerksCounty";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Hilo", method = RequestMethod.GET)
	public String getHawaiiCityHilo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1514650");
		return "HawaiiCityHilo";
	}   
@RequestMapping(value = "/states/Illinois/cities/Libertyville-village", method = RequestMethod.GET)
	public String getIllinoisCityLibertyvillevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1743250");
		return "IllinoisCityLibertyvillevillage";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Minneapolis-city", method = RequestMethod.GET)
	public String getMinnesotaCityMinneapoliscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2743000");
		return "MinnesotaCityMinneapoliscity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Henry-County", method = RequestMethod.GET)
	public String getIllinoisCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17073");
		return "IllinoisCountyHenryCounty";
	}   
@RequestMapping(value = "/states/Michigan/metros/Flint", method = RequestMethod.GET)
	public String getMichiganMetroFlint(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22420");
		return "MichiganMetroFlint";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Bucks-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyBucksCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42017");
		return "PennsylvaniaCountyBucksCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Butler-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyButlerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42019");
		return "PennsylvaniaCountyButlerCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Crawford-County", method = RequestMethod.GET)
	public String getMissouriCountyCrawfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29055");
		return "MissouriCountyCrawfordCounty";
	}   
@RequestMapping(value = "/states/Montana/counties/Gallatin-County", method = RequestMethod.GET)
	public String getMontanaCountyGallatinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30031");
		return "MontanaCountyGallatinCounty";
	}   
@RequestMapping(value = "/states/California/cities/Port-Hueneme-city", method = RequestMethod.GET)
	public String getCaliforniaCityPortHuenemecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "658296");
		return "CaliforniaCityPortHuenemecity";
	}   
@RequestMapping(value = "/states/Illinois/cities/South-Holland-village", method = RequestMethod.GET)
	public String getIllinoisCitySouthHollandvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1770850");
		return "IllinoisCitySouthHollandvillage";
	}   
@RequestMapping(value = "/states/Michigan/cities/Inkster-city", method = RequestMethod.GET)
	public String getMichiganCityInkstercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2640680");
		return "MichiganCityInkstercity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Salem-city", method = RequestMethod.GET)
	public String getVirginiaCitySalemcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5170000");
		return "VirginiaCitySalemcity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Cole-County", method = RequestMethod.GET)
	public String getMissouriCountyColeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29051");
		return "MissouriCountyColeCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Knoxville-city", method = RequestMethod.GET)
	public String getTennesseeCityKnoxvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4740000");
		return "TennesseeCityKnoxvillecity";
	}   
@RequestMapping(value = "/states/California/cities/San-Jacinto-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanJacintocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "667112");
		return "CaliforniaCitySanJacintocity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Richland-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyRichlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45079");
		return "South_CarolinaCountyRichlandCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Yates-County", method = RequestMethod.GET)
	public String getNew_YorkCountyYatesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36123");
		return "New_YorkCountyYatesCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Wyoming-County", method = RequestMethod.GET)
	public String getNew_YorkCountyWyomingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36121");
		return "New_YorkCountyWyomingCounty";
	}   
@RequestMapping(value = "/states/California/cities/Pleasanton-city", method = RequestMethod.GET)
	public String getCaliforniaCityPleasantoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "657792");
		return "CaliforniaCityPleasantoncity";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Harrison", method = RequestMethod.GET)
	public String getArkansasMicroHarrison(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25460");
		return "ArkansasMicroHarrison";
	}   
@RequestMapping(value = "/states/Virginia/counties/Richmond-city", method = RequestMethod.GET)
	public String getVirginiaCountyRichmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51760");
		return "VirginiaCountyRichmondcity";
	}   
@RequestMapping(value = "/states/Nevada/metros/Las-VegasHendersonParadise", method = RequestMethod.GET)
	public String getNevadaMetroLasVegasHendersonParadise(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29820");
		return "NevadaMetroLasVegasHendersonParadise";
	}   
@RequestMapping(value = "/states/Florida/cities/Miami-Lakes-town", method = RequestMethod.GET)
	public String getFloridaCityMiamiLakestown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1245100");
		return "FloridaCityMiamiLakestown";
	}   
@RequestMapping(value = "/states/Virginia/cities/Fredericksburg-city", method = RequestMethod.GET)
	public String getVirginiaCityFredericksburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5129744");
		return "VirginiaCityFredericksburgcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Lakeside", method = RequestMethod.GET)
	public String getFloridaCityLakeside(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1238813");
		return "FloridaCityLakeside";
	}   
@RequestMapping(value = "/states/Florida/cities/Temple-Terrace-city", method = RequestMethod.GET)
	public String getFloridaCityTempleTerracecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271400");
		return "FloridaCityTempleTerracecity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Orangeburg-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyOrangeburgCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45075");
		return "South_CarolinaCountyOrangeburgCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Pickens-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyPickensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45077");
		return "South_CarolinaCountyPickensCounty";
	}   
@RequestMapping(value = "/states/Oregon/cities/Corvallis-city", method = RequestMethod.GET)
	public String getOregonCityCorvalliscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4115800");
		return "OregonCityCorvalliscity";
	}   
@RequestMapping(value = "/states/Florida/micros/Wauchula", method = RequestMethod.GET)
	public String getFloridaMicroWauchula(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48100");
		return "FloridaMicroWauchula";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Newberry-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyNewberryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45071");
		return "South_CarolinaCountyNewberryCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Lock-Haven", method = RequestMethod.GET)
	public String getPennsylvaniaMicroLockHaven(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30820");
		return "PennsylvaniaMicroLockHaven";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Oconee-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyOconeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45073");
		return "South_CarolinaCountyOconeeCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Erie-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityEriecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4224000");
		return "PennsylvaniaCityEriecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Brandon", method = RequestMethod.GET)
	public String getFloridaCityBrandon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1208150");
		return "FloridaCityBrandon";
	}   
@RequestMapping(value = "/states/Washington/cities/Redmond-city", method = RequestMethod.GET)
	public String getWashingtonCityRedmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5357535");
		return "WashingtonCityRedmondcity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Lakewood", method = RequestMethod.GET)
	public String getNew_JerseyCityLakewood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3438580");
		return "New_JerseyCityLakewood";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Marion-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45067");
		return "South_CarolinaCountyMarionCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Little-Elm-city", method = RequestMethod.GET)
	public String getTexasCityLittleElmcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4843012");
		return "TexasCityLittleElmcity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Marlboro-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyMarlboroCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45069");
		return "South_CarolinaCountyMarlboroCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Ulster-County", method = RequestMethod.GET)
	public String getNew_YorkCountyUlsterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36111");
		return "New_YorkCountyUlsterCounty";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Morristown-city", method = RequestMethod.GET)
	public String getTennesseeCityMorristowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4750280");
		return "TennesseeCityMorristowncity";
	}   
@RequestMapping(value = "/states/New-York/counties/Westchester-County", method = RequestMethod.GET)
	public String getNew_YorkCountyWestchesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36119");
		return "New_YorkCountyWestchesterCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Enid-city", method = RequestMethod.GET)
	public String getOklahomaCityEnidcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4023950");
		return "OklahomaCityEnidcity";
	}   
@RequestMapping(value = "/states/New-York/counties/Wayne-County", method = RequestMethod.GET)
	public String getNew_YorkCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36117");
		return "New_YorkCountyWayneCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Goldsboro", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroGoldsboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24140");
		return "North_CarolinaMetroGoldsboro";
	}   
@RequestMapping(value = "/states/New-York/counties/Washington-County", method = RequestMethod.GET)
	public String getNew_YorkCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36115");
		return "New_YorkCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Roanoke-city", method = RequestMethod.GET)
	public String getVirginiaCountyRoanokecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51770");
		return "VirginiaCountyRoanokecity";
	}   
@RequestMapping(value = "/states/Texas/micros/Kerrville", method = RequestMethod.GET)
	public String getTexasMicroKerrville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28500");
		return "TexasMicroKerrville";
	}   
@RequestMapping(value = "/states/New-York/counties/Warren-County", method = RequestMethod.GET)
	public String getNew_YorkCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36113");
		return "New_YorkCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Salem-city", method = RequestMethod.GET)
	public String getVirginiaCountySalemcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51775");
		return "VirginiaCountySalemcity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Lexington-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyLexingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45063");
		return "South_CarolinaCountyLexingtonCounty";
	}   
@RequestMapping(value = "/states/Washington/metros/Yakima", method = RequestMethod.GET)
	public String getWashingtonMetroYakima(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49420");
		return "WashingtonMetroYakima";
	}   
@RequestMapping(value = "/states/New-York/metros/Syracuse", method = RequestMethod.GET)
	public String getNew_YorkMetroSyracuse(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45060");
		return "New_YorkMetroSyracuse";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Lancaster-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyLancasterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45057");
		return "South_CarolinaCountyLancasterCounty";
	}   
@RequestMapping(value = "/states/California/cities/Seaside-city", method = RequestMethod.GET)
	public String getCaliforniaCitySeasidecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670742");
		return "CaliforniaCitySeasidecity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Greenup-County", method = RequestMethod.GET)
	public String getKentuckyCountyGreenupCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21089");
		return "KentuckyCountyGreenupCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Laurens-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyLaurensCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45059");
		return "South_CarolinaCountyLaurensCounty";
	}   
@RequestMapping(value = "/states/Oregon/metros/Bend-Redmond", method = RequestMethod.GET)
	public String getOregonMetroBendRedmond(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13460");
		return "OregonMetroBendRedmond";
	}   
@RequestMapping(value = "/states/Florida/counties/Walton-County", method = RequestMethod.GET)
	public String getFloridaCountyWaltonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12131");
		return "FloridaCountyWaltonCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Steuben-County", method = RequestMethod.GET)
	public String getNew_YorkCountySteubenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36101");
		return "New_YorkCountySteubenCounty";
	}   
@RequestMapping(value = "/states/Florida/metros/Ocala", method = RequestMethod.GET)
	public String getFloridaMetroOcala(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36100");
		return "FloridaMetroOcala";
	}   
@RequestMapping(value = "/states/Texas/cities/Burleson-city", method = RequestMethod.GET)
	public String getTexasCityBurlesoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4811428");
		return "TexasCityBurlesoncity";
	}   
@RequestMapping(value = "/states/California/cities/Isla-Vista", method = RequestMethod.GET)
	public String getCaliforniaCityIslaVista(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "636868");
		return "CaliforniaCityIslaVista";
	}   
@RequestMapping(value = "/states/New-York/cities/Uniondale", method = RequestMethod.GET)
	public String getNew_YorkCityUniondale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3676089");
		return "New_YorkCityUniondale";
	}   
@RequestMapping(value = "/states/Utah/cities/American-Fork-city", method = RequestMethod.GET)
	public String getUtahCityAmericanForkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4901310");
		return "UtahCityAmericanForkcity";
	}   
@RequestMapping(value = "/states/New-York/counties/Tompkins-County", method = RequestMethod.GET)
	public String getNew_YorkCountyTompkinsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36109");
		return "New_YorkCountyTompkinsCounty";
	}   
@RequestMapping(value = "/states/New-York/counties/Tioga-County", method = RequestMethod.GET)
	public String getNew_YorkCountyTiogaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36107");
		return "New_YorkCountyTiogaCounty";
	}   
@RequestMapping(value = "/states/California/cities/Carson-city", method = RequestMethod.GET)
	public String getCaliforniaCityCarsoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "611530");
		return "CaliforniaCityCarsoncity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Crystal-Lake-city", method = RequestMethod.GET)
	public String getIllinoisCityCrystalLakecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1717887");
		return "IllinoisCityCrystalLakecity";
	}   
@RequestMapping(value = "/states/New-York/counties/Sullivan-County", method = RequestMethod.GET)
	public String getNew_YorkCountySullivanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36105");
		return "New_YorkCountySullivanCounty";
	}   
@RequestMapping(value = "/states/California/cities/Palmdale-city", method = RequestMethod.GET)
	public String getCaliforniaCityPalmdalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "655156");
		return "CaliforniaCityPalmdalecity";
	}   
@RequestMapping(value = "/states/California/cities/Rancho-Palos-Verdes-city", method = RequestMethod.GET)
	public String getCaliforniaCityRanchoPalosVerdescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659514");
		return "CaliforniaCityRanchoPalosVerdescity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Odenton", method = RequestMethod.GET)
	public String getMarylandCityOdenton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2458300");
		return "MarylandCityOdenton";
	}   
@RequestMapping(value = "/states/New-York/counties/Suffolk-County", method = RequestMethod.GET)
	public String getNew_YorkCountySuffolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36103");
		return "New_YorkCountySuffolkCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Estero", method = RequestMethod.GET)
	public String getFloridaCityEstero(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1221150");
		return "FloridaCityEstero";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Carolina-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityCarolinazonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7214290");
		return "Puerto_RicoCityCarolinazonaurbana";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Jasper-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyJasperCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45053");
		return "South_CarolinaCountyJasperCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Coram", method = RequestMethod.GET)
	public String getNew_YorkCityCoram(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3618157");
		return "New_YorkCityCoram";
	}   
@RequestMapping(value = "/states/Florida/counties/Washington-County", method = RequestMethod.GET)
	public String getFloridaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12133");
		return "FloridaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Grayson-County", method = RequestMethod.GET)
	public String getKentuckyCountyGraysonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21085");
		return "KentuckyCountyGraysonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Kershaw-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyKershawCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45055");
		return "South_CarolinaCountyKershawCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Graves-County", method = RequestMethod.GET)
	public String getKentuckyCountyGravesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21083");
		return "KentuckyCountyGravesCounty";
	}   
@RequestMapping(value = "/states/Colorado/metros/Colorado-Springs", method = RequestMethod.GET)
	public String getColoradoMetroColoradoSprings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17820");
		return "ColoradoMetroColoradoSprings";
	}   
@RequestMapping(value = "/states/Indiana/cities/Kokomo-city", method = RequestMethod.GET)
	public String getIndianaCityKokomocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1840392");
		return "IndianaCityKokomocity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Grant-County", method = RequestMethod.GET)
	public String getKentuckyCountyGrantCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21081");
		return "KentuckyCountyGrantCounty";
	}   
@RequestMapping(value = "/states/California/cities/Alhambra-city", method = RequestMethod.GET)
	public String getCaliforniaCityAlhambracity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "600884");
		return "CaliforniaCityAlhambracity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Horry-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyHorryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45051");
		return "South_CarolinaCountyHorryCounty";
	}   
@RequestMapping(value = "/states/California/micros/Ukiah", method = RequestMethod.GET)
	public String getCaliforniaMicroUkiah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46380");
		return "CaliforniaMicroUkiah";
	}   
@RequestMapping(value = "/states/Hawaii/cities/East-Honolulu", method = RequestMethod.GET)
	public String getHawaiiCityEastHonolulu(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1506290");
		return "HawaiiCityEastHonolulu";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Hampton-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyHamptonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45049");
		return "South_CarolinaCountyHamptonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Greenville-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyGreenvilleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45045");
		return "South_CarolinaCountyGreenvilleCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Auburn", method = RequestMethod.GET)
	public String getIndianaMicroAuburn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12140");
		return "IndianaMicroAuburn";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Hobbs-city", method = RequestMethod.GET)
	public String getNew_MexicoCityHobbscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3532520");
		return "New_MexicoCityHobbscity";
	}   
@RequestMapping(value = "/states/Texas/micros/Pampa", method = RequestMethod.GET)
	public String getTexasMicroPampa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37420");
		return "TexasMicroPampa";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Greenwood-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyGreenwoodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45047");
		return "South_CarolinaCountyGreenwoodCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Miami", method = RequestMethod.GET)
	public String getOklahomaMicroMiami(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33060");
		return "OklahomaMicroMiami";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Hutchinson", method = RequestMethod.GET)
	public String getMinnesotaMicroHutchinson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26780");
		return "MinnesotaMicroHutchinson";
	}   
@RequestMapping(value = "/states/Virginia/counties/Staunton-city", method = RequestMethod.GET)
	public String getVirginiaCountyStauntoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51790");
		return "VirginiaCountyStauntoncity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Wilmette-village", method = RequestMethod.GET)
	public String getIllinoisCityWilmettevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1782075");
		return "IllinoisCityWilmettevillage";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Nashville", method = RequestMethod.GET)
	public String getTennesseeCityNashville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4752006");
		return "TennesseeCityNashville";
	}   
@RequestMapping(value = "/states/Nevada/cities/Enterprise", method = RequestMethod.GET)
	public String getNevadaCityEnterprise(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3223770");
		return "NevadaCityEnterprise";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Florence-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyFlorenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45041");
		return "South_CarolinaCountyFlorenceCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Reading-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityReadingcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4263624");
		return "PennsylvaniaCityReadingcity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Harlan-County", method = RequestMethod.GET)
	public String getKentuckyCountyHarlanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21095");
		return "KentuckyCountyHarlanCounty";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Frankfort-city", method = RequestMethod.GET)
	public String getKentuckyCityFrankfortcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2128900");
		return "KentuckyCityFrankfortcity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Georgetown-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyGeorgetownCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45043");
		return "South_CarolinaCountyGeorgetownCounty";
	}   
@RequestMapping(value = "/states/Washington/micros/Centralia", method = RequestMethod.GET)
	public String getWashingtonMicroCentralia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16500");
		return "WashingtonMicroCentralia";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Hardin-County", method = RequestMethod.GET)
	public String getKentuckyCountyHardinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21093");
		return "KentuckyCountyHardinCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Fairfield-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyFairfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45039");
		return "South_CarolinaCountyFairfieldCounty";
	}   
@RequestMapping(value = "/states/California/cities/El-Cerrito-city", method = RequestMethod.GET)
	public String getCaliforniaCityElCerritocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "621796");
		return "CaliforniaCityElCerritocity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Dorchester-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyDorchesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45035");
		return "South_CarolinaCountyDorchesterCounty";
	}   
@RequestMapping(value = "/states/California/cities/Monterey-city", method = RequestMethod.GET)
	public String getCaliforniaCityMontereycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "648872");
		return "CaliforniaCityMontereycity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Fayette-County", method = RequestMethod.GET)
	public String getKentuckyCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21067");
		return "KentuckyCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Idaho/cities/Caldwell-city", method = RequestMethod.GET)
	public String getIdahoCityCaldwellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1612250");
		return "IdahoCityCaldwellcity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Edgefield-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyEdgefieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45037");
		return "South_CarolinaCountyEdgefieldCounty";
	}   
@RequestMapping(value = "/states/Missouri/micros/Poplar-Bluff", method = RequestMethod.GET)
	public String getMissouriMicroPoplarBluff(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38740");
		return "MissouriMicroPoplarBluff";
	}   
@RequestMapping(value = "/states/Colorado/cities/Commerce-City-city", method = RequestMethod.GET)
	public String getColoradoCityCommerceCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "816495");
		return "ColoradoCityCommerceCitycity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Gilbert-town", method = RequestMethod.GET)
	public String getArizonaCityGilberttown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "427400");
		return "ArizonaCityGilberttown";
	}   
@RequestMapping(value = "/states/Michigan/micros/Mount-Pleasant", method = RequestMethod.GET)
	public String getMichiganMicroMountPleasant(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34380");
		return "MichiganMicroMountPleasant";
	}   
@RequestMapping(value = "/states/Colorado/cities/Clifton", method = RequestMethod.GET)
	public String getColoradoCityClifton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "815165");
		return "ColoradoCityClifton";
	}   
@RequestMapping(value = "/states/Indiana/cities/New-Albany-city", method = RequestMethod.GET)
	public String getIndianaCityNewAlbanycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1852326");
		return "IndianaCityNewAlbanycity";
	}   
@RequestMapping(value = "/states/Florida/counties/Sumter-County", method = RequestMethod.GET)
	public String getFloridaCountySumterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12119");
		return "FloridaCountySumterCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Harrisburg-Carlisle", method = RequestMethod.GET)
	public String getPennsylvaniaMetroHarrisburgCarlisle(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25420");
		return "PennsylvaniaMetroHarrisburgCarlisle";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Darlington-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyDarlingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45031");
		return "South_CarolinaCountyDarlingtonCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/St-Lucie-County", method = RequestMethod.GET)
	public String getFloridaCountyStLucieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12111");
		return "FloridaCountyStLucieCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Dillon-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyDillonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45033");
		return "South_CarolinaCountyDillonCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Santa-Rosa-County", method = RequestMethod.GET)
	public String getFloridaCountySantaRosaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12113");
		return "FloridaCountySantaRosaCounty";
	}   
@RequestMapping(value = "/states/Kentucky/metros/ElizabethtownFort-Knox", method = RequestMethod.GET)
	public String getKentuckyMetroElizabethtownFortKnox(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21060");
		return "KentuckyMetroElizabethtownFortKnox";
	}   
@RequestMapping(value = "/states/Florida/counties/Sarasota-County", method = RequestMethod.GET)
	public String getFloridaCountySarasotaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12115");
		return "FloridaCountySarasotaCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Euless-city", method = RequestMethod.GET)
	public String getTexasCityEulesscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4824768");
		return "TexasCityEulesscity";
	}   
@RequestMapping(value = "/states/Florida/counties/Seminole-County", method = RequestMethod.GET)
	public String getFloridaCountySeminoleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12117");
		return "FloridaCountySeminoleCounty";
	}   
@RequestMapping(value = "/states/California/cities/El-Centro-city", method = RequestMethod.GET)
	public String getCaliforniaCityElCentrocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "621782");
		return "CaliforniaCityElCentrocity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Clarendon-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyClarendonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45027");
		return "South_CarolinaCountyClarendonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Colleton-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyColletonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45029");
		return "South_CarolinaCountyColletonCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Chester-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyChesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45023");
		return "South_CarolinaCountyChesterCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Suwannee-County", method = RequestMethod.GET)
	public String getFloridaCountySuwanneeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12121");
		return "FloridaCountySuwanneeCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Brenham", method = RequestMethod.GET)
	public String getTexasMicroBrenham(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14780");
		return "TexasMicroBrenham";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Chesterfield-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyChesterfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45025");
		return "South_CarolinaCountyChesterfieldCounty";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Nicholasville-city", method = RequestMethod.GET)
	public String getKentuckyCityNicholasvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2156136");
		return "KentuckyCityNicholasvillecity";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Prairieville", method = RequestMethod.GET)
	public String getLouisianaCityPrairieville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2262385");
		return "LouisianaCityPrairieville";
	}   
@RequestMapping(value = "/states/Washington/cities/Lake-Stevens-city", method = RequestMethod.GET)
	public String getWashingtonCityLakeStevenscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5337900");
		return "WashingtonCityLakeStevenscity";
	}   
@RequestMapping(value = "/states/Texas/cities/Harlingen-city", method = RequestMethod.GET)
	public String getTexasCityHarlingencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4832372");
		return "TexasCityHarlingencity";
	}   
@RequestMapping(value = "/states/New-York/micros/Gloversville", method = RequestMethod.GET)
	public String getNew_YorkMicroGloversville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24100");
		return "New_YorkMicroGloversville";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Taunton-city", method = RequestMethod.GET)
	public String getMassachusettsCityTauntoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2569170");
		return "MassachusettsCityTauntoncity";
	}   
@RequestMapping(value = "/states/Florida/counties/Taylor-County", method = RequestMethod.GET)
	public String getFloridaCountyTaylorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12123");
		return "FloridaCountyTaylorCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Mountain-Brook-city", method = RequestMethod.GET)
	public String getAlabamaCityMountainBrookcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "151696");
		return "AlabamaCityMountainBrookcity";
	}   
@RequestMapping(value = "/states/New-York/cities/Copiague", method = RequestMethod.GET)
	public String getNew_YorkCityCopiague(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3618146");
		return "New_YorkCityCopiague";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Franklin-County", method = RequestMethod.GET)
	public String getKentuckyCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21073");
		return "KentuckyCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Cherokee-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyCherokeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45021");
		return "South_CarolinaCountyCherokeeCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Volusia-County", method = RequestMethod.GET)
	public String getFloridaCountyVolusiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12127");
		return "FloridaCountyVolusiaCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Floyd-County", method = RequestMethod.GET)
	public String getKentuckyCountyFloydCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21071");
		return "KentuckyCountyFloydCounty";
	}   
@RequestMapping(value = "/states/Florida/counties/Wakulla-County", method = RequestMethod.GET)
	public String getFloridaCountyWakullaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12129");
		return "FloridaCountyWakullaCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Somerville-city", method = RequestMethod.GET)
	public String getMassachusettsCitySomervillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2562535");
		return "MassachusettsCitySomervillecity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Clark-County", method = RequestMethod.GET)
	public String getKentuckyCountyClarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21049");
		return "KentuckyCountyClarkCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Charleston-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyCharlestonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45019");
		return "South_CarolinaCountyCharlestonCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Christian-County", method = RequestMethod.GET)
	public String getKentuckyCountyChristianCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21047");
		return "KentuckyCountyChristianCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Doral-city", method = RequestMethod.GET)
	public String getFloridaCityDoralcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1217935");
		return "FloridaCityDoralcity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Beaufort-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyBeaufortCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45013");
		return "South_CarolinaCountyBeaufortCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Berkeley-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyBerkeleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45015");
		return "South_CarolinaCountyBerkeleyCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Carter-County", method = RequestMethod.GET)
	public String getKentuckyCountyCarterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21043");
		return "KentuckyCountyCarterCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Barnwell-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyBarnwellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45011");
		return "South_CarolinaCountyBarnwellCounty";
	}   
@RequestMapping(value = "/states/Minnesota/micros/Bemidji", method = RequestMethod.GET)
	public String getMinnesotaMicroBemidji(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13420");
		return "MinnesotaMicroBemidji";
	}   
@RequestMapping(value = "/states/Illinois/cities/Streamwood-village", method = RequestMethod.GET)
	public String getIllinoisCityStreamwoodvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1773157");
		return "IllinoisCityStreamwoodvillage";
	}   
@RequestMapping(value = "/states/Oregon/cities/Hillsboro-city", method = RequestMethod.GET)
	public String getOregonCityHillsborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4134100");
		return "OregonCityHillsborocity";
	}   
@RequestMapping(value = "/states/Texas/metros/Tyler", method = RequestMethod.GET)
	public String getTexasMetroTyler(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46340");
		return "TexasMetroTyler";
	}   
@RequestMapping(value = "/states/California/cities/Rancho-San-Diego", method = RequestMethod.GET)
	public String getCaliforniaCityRanchoSanDiego(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659550");
		return "CaliforniaCityRanchoSanDiego";
	}   
@RequestMapping(value = "/states/Texas/cities/Weslaco-city", method = RequestMethod.GET)
	public String getTexasCityWeslacocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4877272");
		return "TexasCityWeslacocity";
	}   
@RequestMapping(value = "/states/Washington/cities/Vancouver-city", method = RequestMethod.GET)
	public String getWashingtonCityVancouvercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5374060");
		return "WashingtonCityVancouvercity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Daviess-County", method = RequestMethod.GET)
	public String getKentuckyCountyDaviessCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21059");
		return "KentuckyCountyDaviessCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Anderson-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyAndersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45007");
		return "South_CarolinaCountyAndersonCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Westland-city", method = RequestMethod.GET)
	public String getMichiganCityWestlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2686000");
		return "MichiganCityWestlandcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Pearland-city", method = RequestMethod.GET)
	public String getTexasCityPearlandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4856348");
		return "TexasCityPearlandcity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Abbeville-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyAbbevilleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45001");
		return "South_CarolinaCountyAbbevilleCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Loves-Park-city", method = RequestMethod.GET)
	public String getIllinoisCityLovesParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1745031");
		return "IllinoisCityLovesParkcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Huber-Heights-city", method = RequestMethod.GET)
	public String getOhioCityHuberHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3936610");
		return "OhioCityHuberHeightscity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/New-Bern-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityNewBerncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3746340");
		return "North_CarolinaCityNewBerncity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Aiken-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyAikenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45003");
		return "South_CarolinaCountyAikenCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Palm-Beach-Gardens-city", method = RequestMethod.GET)
	public String getFloridaCityPalmBeachGardenscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254075");
		return "FloridaCityPalmBeachGardenscity";
	}   
@RequestMapping(value = "/states/Missouri/micros/Mexico", method = RequestMethod.GET)
	public String getMissouriMicroMexico(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33020");
		return "MissouriMicroMexico";
	}   
@RequestMapping(value = "/states/Washington/cities/Wenatchee-city", method = RequestMethod.GET)
	public String getWashingtonCityWenatcheecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5377105");
		return "WashingtonCityWenatcheecity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Centerville-city", method = RequestMethod.GET)
	public String getOhioCityCentervillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3913190");
		return "OhioCityCentervillecity";
	}   
@RequestMapping(value = "/states/Florida/counties/St-Johns-County", method = RequestMethod.GET)
	public String getFloridaCountyStJohnsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12109");
		return "FloridaCountyStJohnsCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Pittsburgh-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityPittsburghcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4261000");
		return "PennsylvaniaCityPittsburghcity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Troy-city", method = RequestMethod.GET)
	public String getMichiganCityTroycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2680700");
		return "MichiganCityTroycity";
	}   
@RequestMapping(value = "/states/Arizona/metros/Flagstaff", method = RequestMethod.GET)
	public String getArizonaMetroFlagstaff(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22380");
		return "ArizonaMetroFlagstaff";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Eden-Prairie-city", method = RequestMethod.GET)
	public String getMinnesotaCityEdenPrairiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2718116");
		return "MinnesotaCityEdenPrairiecity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Burnsville-city", method = RequestMethod.GET)
	public String getMinnesotaCityBurnsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2708794");
		return "MinnesotaCityBurnsvillecity";
	}   
@RequestMapping(value = "/states/Kansas/micros/Hutchinson", method = RequestMethod.GET)
	public String getKansasMicroHutchinson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26740");
		return "KansasMicroHutchinson";
	}   
@RequestMapping(value = "/states/Florida/counties/Pasco-County", method = RequestMethod.GET)
	public String getFloridaCountyPascoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12101");
		return "FloridaCountyPascoCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Rock-Hill-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityRockHillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4561405");
		return "South_CarolinaCityRockHillcity";
	}   
@RequestMapping(value = "/states/New-Jersey/metros/Atlantic-CityHammonton", method = RequestMethod.GET)
	public String getNew_JerseyMetroAtlanticCityHammonton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12100");
		return "New_JerseyMetroAtlanticCityHammonton";
	}   
@RequestMapping(value = "/states/Florida/counties/Pinellas-County", method = RequestMethod.GET)
	public String getFloridaCountyPinellasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12103");
		return "FloridaCountyPinellasCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Clay-County", method = RequestMethod.GET)
	public String getKentuckyCountyClayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21051");
		return "KentuckyCountyClayCounty";
	}   
@RequestMapping(value = "/states/California/micros/Susanville", method = RequestMethod.GET)
	public String getCaliforniaMicroSusanville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45000");
		return "CaliforniaMicroSusanville";
	}   
@RequestMapping(value = "/states/Missouri/micros/Warrensburg", method = RequestMethod.GET)
	public String getMissouriMicroWarrensburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47660");
		return "MissouriMicroWarrensburg";
	}   
@RequestMapping(value = "/states/Florida/counties/Polk-County", method = RequestMethod.GET)
	public String getFloridaCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12105");
		return "FloridaCountyPolkCounty";
	}   
@RequestMapping(value = "/states/California/cities/Palm-Desert-city", method = RequestMethod.GET)
	public String getCaliforniaCityPalmDesertcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "655184");
		return "CaliforniaCityPalmDesertcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Country-Club", method = RequestMethod.GET)
	public String getFloridaCityCountryClub(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1214895");
		return "FloridaCityCountryClub";
	}   
@RequestMapping(value = "/states/Florida/counties/Putnam-County", method = RequestMethod.GET)
	public String getFloridaCountyPutnamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12107");
		return "FloridaCountyPutnamCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Del-Rio", method = RequestMethod.GET)
	public String getTexasMicroDelRio(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19620");
		return "TexasMicroDelRio";
	}   
@RequestMapping(value = "/states/Texas/cities/Tyler-city", method = RequestMethod.GET)
	public String getTexasCityTylercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4874144");
		return "TexasCityTylercity";
	}   
@RequestMapping(value = "/states/Nebraska/cities/Grand-Island-city", method = RequestMethod.GET)
	public String getNebraskaCityGrandIslandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3119595");
		return "NebraskaCityGrandIslandcity";
	}   
@RequestMapping(value = "/states/Georgia/metros/Brunswick", method = RequestMethod.GET)
	public String getGeorgiaMetroBrunswick(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15260");
		return "GeorgiaMetroBrunswick";
	}   
@RequestMapping(value = "/states/California/cities/La-Mirada-city", method = RequestMethod.GET)
	public String getCaliforniaCityLaMiradacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640032");
		return "CaliforniaCityLaMiradacity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Avondale-city", method = RequestMethod.GET)
	public String getArizonaCityAvondalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "404720");
		return "ArizonaCityAvondalecity";
	}   
@RequestMapping(value = "/states/Virginia/metros/Roanoke", method = RequestMethod.GET)
	public String getVirginiaMetroRoanoke(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40220");
		return "VirginiaMetroRoanoke";
	}   
@RequestMapping(value = "/states/California/cities/Sacramento-city", method = RequestMethod.GET)
	public String getCaliforniaCitySacramentocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "664000");
		return "CaliforniaCitySacramentocity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Braintree-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityBraintreeTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2507740");
		return "MassachusettsCityBraintreeTowncity";
	}   
@RequestMapping(value = "/states/Texas/counties/Grayson-County", method = RequestMethod.GET)
	public String getTexasCountyGraysonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48181");
		return "TexasCountyGraysonCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Clovis-city", method = RequestMethod.GET)
	public String getNew_MexicoCityCloviscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3516420");
		return "New_MexicoCityCloviscity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/State-College-borough", method = RequestMethod.GET)
	public String getPennsylvaniaCityStateCollegeborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4273808");
		return "PennsylvaniaCityStateCollegeborough";
	}   
@RequestMapping(value = "/states/Georgia/micros/Waycross", method = RequestMethod.GET)
	public String getGeorgiaMicroWaycross(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48180");
		return "GeorgiaMicroWaycross";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Wilmington-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityWilmingtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3774440");
		return "North_CarolinaCityWilmingtoncity";
	}   
@RequestMapping(value = "/states/Texas/counties/Hale-County", method = RequestMethod.GET)
	public String getTexasCountyHaleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48189");
		return "TexasCountyHaleCounty";
	}   
@RequestMapping(value = "/states/Missouri/cities/Ballwin-city", method = RequestMethod.GET)
	public String getMissouriCityBallwincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2903160");
		return "MissouriCityBallwincity";
	}   
@RequestMapping(value = "/states/California/cities/La-CrescentaMontrose", method = RequestMethod.GET)
	public String getCaliforniaCityLaCrescentaMontrose(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639045");
		return "CaliforniaCityLaCrescentaMontrose";
	}   
@RequestMapping(value = "/states/Georgia/cities/Dalton-city", method = RequestMethod.GET)
	public String getGeorgiaCityDaltoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1321380");
		return "GeorgiaCityDaltoncity";
	}   
@RequestMapping(value = "/states/Texas/counties/Guadalupe-County", method = RequestMethod.GET)
	public String getTexasCountyGuadalupeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48187");
		return "TexasCountyGuadalupeCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Grimes-County", method = RequestMethod.GET)
	public String getTexasCountyGrimesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48185");
		return "TexasCountyGrimesCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Longview-city", method = RequestMethod.GET)
	public String getTexasCityLongviewcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4843888");
		return "TexasCityLongviewcity";
	}   
@RequestMapping(value = "/states/Texas/counties/Gregg-County", method = RequestMethod.GET)
	public String getTexasCountyGreggCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48183");
		return "TexasCountyGreggCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Des-Plaines-city", method = RequestMethod.GET)
	public String getIllinoisCityDesPlainescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1719642");
		return "IllinoisCityDesPlainescity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Northport-city", method = RequestMethod.GET)
	public String getAlabamaCityNorthportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "155200");
		return "AlabamaCityNorthportcity";
	}   
@RequestMapping(value = "/states/Oregon/micros/Coos-Bay", method = RequestMethod.GET)
	public String getOregonMicroCoosBay(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18300");
		return "OregonMicroCoosBay";
	}   
@RequestMapping(value = "/states/Utah/micros/Price", method = RequestMethod.GET)
	public String getUtahMicroPrice(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39220");
		return "UtahMicroPrice";
	}   
@RequestMapping(value = "/states/Maryland/cities/Bel-Air-North", method = RequestMethod.GET)
	public String getMarylandCityBelAirNorth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2405825");
		return "MarylandCityBelAirNorth";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Somerset", method = RequestMethod.GET)
	public String getNew_JerseyCitySomerset(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3468370");
		return "New_JerseyCitySomerset";
	}   
@RequestMapping(value = "/states/Maryland/metros/Salisbury", method = RequestMethod.GET)
	public String getMarylandMetroSalisbury(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41540");
		return "MarylandMetroSalisbury";
	}   
@RequestMapping(value = "/states/Michigan/micros/Traverse-City", method = RequestMethod.GET)
	public String getMichiganMicroTraverseCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45900");
		return "MichiganMicroTraverseCity";
	}   
@RequestMapping(value = "/states/Nevada/cities/North-Las-Vegas-city", method = RequestMethod.GET)
	public String getNevadaCityNorthLasVegascity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3251800");
		return "NevadaCityNorthLasVegascity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Albertville-city", method = RequestMethod.GET)
	public String getAlabamaCityAlbertvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "100988");
		return "AlabamaCityAlbertvillecity";
	}   
@RequestMapping(value = "/states/Texas/counties/Gillespie-County", method = RequestMethod.GET)
	public String getTexasCountyGillespieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48171");
		return "TexasCountyGillespieCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Gray-County", method = RequestMethod.GET)
	public String getTexasCountyGrayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48179");
		return "TexasCountyGrayCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/North-Chicago-city", method = RequestMethod.GET)
	public String getIllinoisCityNorthChicagocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1753559");
		return "IllinoisCityNorthChicagocity";
	}   
@RequestMapping(value = "/states/Florida/micros/Key-West", method = RequestMethod.GET)
	public String getFloridaMicroKeyWest(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28580");
		return "FloridaMicroKeyWest";
	}   
@RequestMapping(value = "/states/Illinois/cities/Oak-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityOakParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1754885");
		return "IllinoisCityOakParkvillage";
	}   
@RequestMapping(value = "/states/South-Carolina/micros/Seneca", method = RequestMethod.GET)
	public String getSouth_CarolinaMicroSeneca(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42860");
		return "South_CarolinaMicroSeneca";
	}   
@RequestMapping(value = "/states/Georgia/cities/East-Point-city", method = RequestMethod.GET)
	public String getGeorgiaCityEastPointcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1325720");
		return "GeorgiaCityEastPointcity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Clinton-city", method = RequestMethod.GET)
	public String getIowaCityClintoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1914430");
		return "IowaCityClintoncity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Waukegan-city", method = RequestMethod.GET)
	public String getIllinoisCityWaukegancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1779293");
		return "IllinoisCityWaukegancity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Belmont", method = RequestMethod.GET)
	public String getMassachusettsCityBelmont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2505105");
		return "MassachusettsCityBelmont";
	}   
@RequestMapping(value = "/states/Tennessee/cities/Murfreesboro-city", method = RequestMethod.GET)
	public String getTennesseeCityMurfreesborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4751560");
		return "TennesseeCityMurfreesborocity";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Madison-city", method = RequestMethod.GET)
	public String getMississippiCityMadisoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2844520");
		return "MississippiCityMadisoncity";
	}   
@RequestMapping(value = "/states/Wyoming/micros/Jackson", method = RequestMethod.GET)
	public String getWyomingMicroJackson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27220");
		return "WyomingMicroJackson";
	}   
@RequestMapping(value = "/states/Nevada/cities/Sunrise-Manor", method = RequestMethod.GET)
	public String getNevadaCitySunriseManor(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3271400");
		return "NevadaCitySunriseManor";
	}   
@RequestMapping(value = "/states/Texas/counties/Galveston-County", method = RequestMethod.GET)
	public String getTexasCountyGalvestonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48167");
		return "TexasCountyGalvestonCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Newport-News-city", method = RequestMethod.GET)
	public String getVirginiaCountyNewportNewscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51700");
		return "VirginiaCountyNewportNewscity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Hudson-city", method = RequestMethod.GET)
	public String getOhioCityHudsoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3936651");
		return "OhioCityHudsoncity";
	}   
@RequestMapping(value = "/states/Illinois/metros/Champaign-Urbana", method = RequestMethod.GET)
	public String getIllinoisMetroChampaignUrbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16580");
		return "IllinoisMetroChampaignUrbana";
	}   
@RequestMapping(value = "/states/Ohio/cities/Maple-Heights-city", method = RequestMethod.GET)
	public String getOhioCityMapleHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3947306");
		return "OhioCityMapleHeightscity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Nogales-city", method = RequestMethod.GET)
	public String getArizonaCityNogalescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "449640");
		return "ArizonaCityNogalescity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Westfield-town", method = RequestMethod.GET)
	public String getNew_JerseyCityWestfieldtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3479040");
		return "New_JerseyCityWestfieldtown";
	}   
@RequestMapping(value = "/states/Texas/cities/Duncanville-city", method = RequestMethod.GET)
	public String getTexasCityDuncanvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4821628");
		return "TexasCityDuncanvillecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Wesley-Chapel", method = RequestMethod.GET)
	public String getFloridaCityWesleyChapel(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1275875");
		return "FloridaCityWesleyChapel";
	}   
@RequestMapping(value = "/states/Texas/cities/Lancaster-city", method = RequestMethod.GET)
	public String getTexasCityLancastercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4841212");
		return "TexasCityLancastercity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Weymouth-Town-city", method = RequestMethod.GET)
	public String getMassachusettsCityWeymouthTowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2578972");
		return "MassachusettsCityWeymouthTowncity";
	}   
@RequestMapping(value = "/states/Texas/counties/Fort-Bend-County", method = RequestMethod.GET)
	public String getTexasCountyFortBendCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48157");
		return "TexasCountyFortBendCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Norfolk-city", method = RequestMethod.GET)
	public String getVirginiaCountyNorfolkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51710");
		return "VirginiaCountyNorfolkcity";
	}   
@RequestMapping(value = "/states/Texas/counties/Fayette-County", method = RequestMethod.GET)
	public String getTexasCountyFayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48149");
		return "TexasCountyFayetteCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Fannin-County", method = RequestMethod.GET)
	public String getTexasCountyFanninCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48147");
		return "TexasCountyFanninCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Brownwood", method = RequestMethod.GET)
	public String getTexasMicroBrownwood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15220");
		return "TexasMicroBrownwood";
	}   
@RequestMapping(value = "/states/Georgia/cities/Acworth-city", method = RequestMethod.GET)
	public String getGeorgiaCityAcworthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1300408");
		return "GeorgiaCityAcworthcity";
	}   
@RequestMapping(value = "/states/West-Virginia/micros/Fairmont", method = RequestMethod.GET)
	public String getWest_VirginiaMicroFairmont(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21900");
		return "West_VirginiaMicroFairmont";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Laurel", method = RequestMethod.GET)
	public String getMississippiMicroLaurel(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29860");
		return "MississippiMicroLaurel";
	}   
@RequestMapping(value = "/states/Utah/metros/Logan", method = RequestMethod.GET)
	public String getUtahMetroLogan(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30860");
		return "UtahMetroLogan";
	}   
@RequestMapping(value = "/states/Ohio/cities/Stow-city", method = RequestMethod.GET)
	public String getOhioCityStowcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3974944");
		return "OhioCityStowcity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Overland-Park-city", method = RequestMethod.GET)
	public String getKansasCityOverlandParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2053775");
		return "KansasCityOverlandParkcity";
	}   
@RequestMapping(value = "/states/Texas/counties/Erath-County", method = RequestMethod.GET)
	public String getTexasCountyErathCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48143");
		return "TexasCountyErathCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Surprise-city", method = RequestMethod.GET)
	public String getArizonaCitySurprisecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "471510");
		return "ArizonaCitySurprisecity";
	}   
@RequestMapping(value = "/states/Texas/counties/El-Paso-County", method = RequestMethod.GET)
	public String getTexasCountyElPasoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48141");
		return "TexasCountyElPasoCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Wausau", method = RequestMethod.GET)
	public String getWisconsinMetroWausau(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48140");
		return "WisconsinMetroWausau";
	}   
@RequestMapping(value = "/states/California/cities/El-Monte-city", method = RequestMethod.GET)
	public String getCaliforniaCityElMontecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "622230");
		return "CaliforniaCityElMontecity";
	}   
@RequestMapping(value = "/states/Texas/counties/Ellis-County", method = RequestMethod.GET)
	public String getTexasCountyEllisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48139");
		return "TexasCountyEllisCounty";
	}   
@RequestMapping(value = "/states/California/metros/Salinas", method = RequestMethod.GET)
	public String getCaliforniaMetroSalinas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41500");
		return "CaliforniaMetroSalinas";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Midwest-City-city", method = RequestMethod.GET)
	public String getOklahomaCityMidwestCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4048350");
		return "OklahomaCityMidwestCitycity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Woodstock-city", method = RequestMethod.GET)
	public String getIllinoisCityWoodstockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1783349");
		return "IllinoisCityWoodstockcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Oakland-Park-city", method = RequestMethod.GET)
	public String getFloridaCityOaklandParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1250575");
		return "FloridaCityOaklandParkcity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Garner-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityGarnertown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3725480");
		return "North_CarolinaCityGarnertown";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/La-Crosse-city", method = RequestMethod.GET)
	public String getWisconsinCityLaCrossecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5540775");
		return "WisconsinCityLaCrossecity";
	}   
@RequestMapping(value = "/states/Florida/cities/Wellington-village", method = RequestMethod.GET)
	public String getFloridaCityWellingtonvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1275812");
		return "FloridaCityWellingtonvillage";
	}   
@RequestMapping(value = "/states/Texas/counties/Ector-County", method = RequestMethod.GET)
	public String getTexasCountyEctorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48135");
		return "TexasCountyEctorCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Petersburg-city", method = RequestMethod.GET)
	public String getVirginiaCountyPetersburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51730");
		return "VirginiaCountyPetersburgcity";
	}   
@RequestMapping(value = "/states/South-Dakota/micros/Yankton", method = RequestMethod.GET)
	public String getSouth_DakotaMicroYankton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "49460");
		return "South_DakotaMicroYankton";
	}   
@RequestMapping(value = "/states/Missouri/metros/Columbia", method = RequestMethod.GET)
	public String getMissouriMetroColumbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17860");
		return "MissouriMetroColumbia";
	}   
@RequestMapping(value = "/states/Georgia/cities/Columbus-city", method = RequestMethod.GET)
	public String getGeorgiaCityColumbuscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1319000");
		return "GeorgiaCityColumbuscity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Springfield-city", method = RequestMethod.GET)
	public String getOregonCitySpringfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4169600");
		return "OregonCitySpringfieldcity";
	}   
@RequestMapping(value = "/states/Montana/cities/Bozeman-city", method = RequestMethod.GET)
	public String getMontanaCityBozemancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3008950");
		return "MontanaCityBozemancity";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Wethersfield", method = RequestMethod.GET)
	public String getConnecticutCityWethersfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "984970");
		return "ConnecticutCityWethersfield";
	}   
@RequestMapping(value = "/states/Michigan/cities/Saginaw-city", method = RequestMethod.GET)
	public String getMichiganCitySaginawcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2670520");
		return "MichiganCitySaginawcity";
	}   
@RequestMapping(value = "/states/Alabama/micros/Selma", method = RequestMethod.GET)
	public String getAlabamaMicroSelma(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42820");
		return "AlabamaMicroSelma";
	}   
@RequestMapping(value = "/states/New-Jersey/metros/Ocean-City", method = RequestMethod.GET)
	public String getNew_JerseyMetroOceanCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36140");
		return "New_JerseyMetroOceanCity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/York-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyYorkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45091");
		return "South_CarolinaCountyYorkCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Portsmouth-city", method = RequestMethod.GET)
	public String getVirginiaCountyPortsmouthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51740");
		return "VirginiaCountyPortsmouthcity";
	}   
@RequestMapping(value = "/states/Texas/counties/DeWitt-County", method = RequestMethod.GET)
	public String getTexasCountyDeWittCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48123");
		return "TexasCountyDeWittCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Denton-County", method = RequestMethod.GET)
	public String getTexasCountyDentonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48121");
		return "TexasCountyDentonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/McKeesport-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityMcKeesportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4246256");
		return "PennsylvaniaCityMcKeesportcity";
	}   
@RequestMapping(value = "/states/New-York/micros/Auburn", method = RequestMethod.GET)
	public String getNew_YorkMicroAuburn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12180");
		return "New_YorkMicroAuburn";
	}   
@RequestMapping(value = "/states/Florida/metros/Panama-City", method = RequestMethod.GET)
	public String getFloridaMetroPanamaCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37460");
		return "FloridaMetroPanamaCity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Williamsburg-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyWilliamsburgCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45089");
		return "South_CarolinaCountyWilliamsburgCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Chambersburg-Waynesboro", method = RequestMethod.GET)
	public String getPennsylvaniaMetroChambersburgWaynesboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16540");
		return "PennsylvaniaMetroChambersburgWaynesboro";
	}   
@RequestMapping(value = "/states/Texas/cities/Harker-Heights-city", method = RequestMethod.GET)
	public String getTexasCityHarkerHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4832312");
		return "TexasCityHarkerHeightscity";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Gallup-city", method = RequestMethod.GET)
	public String getNew_MexicoCityGallupcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3528460");
		return "New_MexicoCityGallupcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Greenacres-city", method = RequestMethod.GET)
	public String getFloridaCityGreenacrescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1227322");
		return "FloridaCityGreenacrescity";
	}   
@RequestMapping(value = "/states/California/cities/Pleasant-Hill-city", method = RequestMethod.GET)
	public String getCaliforniaCityPleasantHillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "657764");
		return "CaliforniaCityPleasantHillcity";
	}   
@RequestMapping(value = "/states/California/cities/Twentynine-Palms-city", method = RequestMethod.GET)
	public String getCaliforniaCityTwentyninePalmscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "680994");
		return "CaliforniaCityTwentyninePalmscity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Kingman-city", method = RequestMethod.GET)
	public String getArizonaCityKingmancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "437620");
		return "ArizonaCityKingmancity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Sumter-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountySumterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45085");
		return "South_CarolinaCountySumterCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Dallas-County", method = RequestMethod.GET)
	public String getTexasCountyDallasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48113");
		return "TexasCountyDallasCounty";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Union-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45087");
		return "South_CarolinaCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Oak-Lawn-village", method = RequestMethod.GET)
	public String getIllinoisCityOakLawnvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1754820");
		return "IllinoisCityOakLawnvillage";
	}   
@RequestMapping(value = "/states/California/cities/Montebello-city", method = RequestMethod.GET)
	public String getCaliforniaCityMontebellocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "648816");
		return "CaliforniaCityMontebellocity";
	}   
@RequestMapping(value = "/states/South-Carolina/counties/Spartanburg-County", method = RequestMethod.GET)
	public String getSouth_CarolinaCountySpartanburgCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45083");
		return "South_CarolinaCountySpartanburgCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/New-Castle-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityNewCastlecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4253368");
		return "PennsylvaniaCityNewCastlecity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Sangamon-County", method = RequestMethod.GET)
	public String getIllinoisCountySangamonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17167");
		return "IllinoisCountySangamonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Warren-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42123");
		return "PennsylvaniaCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Buffalo-Grove-village", method = RequestMethod.GET)
	public String getIllinoisCityBuffaloGrovevillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1709447");
		return "IllinoisCityBuffaloGrovevillage";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Washington-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyWashingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42125");
		return "PennsylvaniaCountyWashingtonCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/St-Clair-County", method = RequestMethod.GET)
	public String getIllinoisCountyStClairCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17163");
		return "IllinoisCountyStClairCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Saline-County", method = RequestMethod.GET)
	public String getIllinoisCountySalineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17165");
		return "IllinoisCountySalineCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Venango-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyVenangoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42121");
		return "PennsylvaniaCountyVenangoCounty";
	}   
@RequestMapping(value = "/states/Kansas/cities/Shawnee-city", method = RequestMethod.GET)
	public String getKansasCityShawneecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2064500");
		return "KansasCityShawneecity";
	}   
@RequestMapping(value = "/states/Maine/cities/Bangor-city", method = RequestMethod.GET)
	public String getMaineCityBangorcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2302795");
		return "MaineCityBangorcity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Rock-Island-County", method = RequestMethod.GET)
	public String getIllinoisCountyRockIslandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17161");
		return "IllinoisCountyRockIslandCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Wayne-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42127");
		return "PennsylvaniaCountyWayneCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Westmoreland-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyWestmorelandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42129");
		return "PennsylvaniaCountyWestmorelandCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Halifax-County", method = RequestMethod.GET)
	public String getVirginiaCountyHalifaxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51083");
		return "VirginiaCountyHalifaxCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/Granger", method = RequestMethod.GET)
	public String getIndianaCityGranger(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1828800");
		return "IndianaCityGranger";
	}   
@RequestMapping(value = "/states/Missouri/counties/Newton-County", method = RequestMethod.GET)
	public String getMissouriCountyNewtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29145");
		return "MissouriCountyNewtonCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Hanover-County", method = RequestMethod.GET)
	public String getVirginiaCountyHanoverCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51085");
		return "VirginiaCountyHanoverCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Coon-Rapids-city", method = RequestMethod.GET)
	public String getMinnesotaCityCoonRapidscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2713114");
		return "MinnesotaCityCoonRapidscity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Shakopee-city", method = RequestMethod.GET)
	public String getMinnesotaCityShakopeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2759350");
		return "MinnesotaCityShakopeecity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Henrico-County", method = RequestMethod.GET)
	public String getVirginiaCountyHenricoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51087");
		return "VirginiaCountyHenricoCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Mount-Vernon", method = RequestMethod.GET)
	public String getIllinoisMicroMountVernon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34500");
		return "IllinoisMicroMountVernon";
	}   
@RequestMapping(value = "/states/California/cities/Hanford-city", method = RequestMethod.GET)
	public String getCaliforniaCityHanfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "631960");
		return "CaliforniaCityHanfordcity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Watertown-city", method = RequestMethod.GET)
	public String getWisconsinCityWatertowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5583975");
		return "WisconsinCityWatertowncity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Henry-County", method = RequestMethod.GET)
	public String getVirginiaCountyHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51089");
		return "VirginiaCountyHenryCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/Lebanon", method = RequestMethod.GET)
	public String getPennsylvaniaMetroLebanon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30140");
		return "PennsylvaniaMetroLebanon";
	}   
@RequestMapping(value = "/states/Missouri/counties/Nodaway-County", method = RequestMethod.GET)
	public String getMissouriCountyNodawayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29147");
		return "MissouriCountyNodawayCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Belvidere-city", method = RequestMethod.GET)
	public String getIllinoisCityBelviderecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1705092");
		return "IllinoisCityBelviderecity";
	}   
@RequestMapping(value = "/states/Michigan/micros/Sturgis", method = RequestMethod.GET)
	public String getMichiganMicroSturgis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44780");
		return "MichiganMicroSturgis";
	}   
@RequestMapping(value = "/states/Missouri/counties/Morgan-County", method = RequestMethod.GET)
	public String getMissouriCountyMorganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29141");
		return "MissouriCountyMorganCounty";
	}   
@RequestMapping(value = "/states/Louisiana/cities/New-Orleans-city", method = RequestMethod.GET)
	public String getLouisianaCityNewOrleanscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2255000");
		return "LouisianaCityNewOrleanscity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Tazewell-County", method = RequestMethod.GET)
	public String getIllinoisCountyTazewellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17179");
		return "IllinoisCountyTazewellCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Susquehanna-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountySusquehannaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42115");
		return "PennsylvaniaCountySusquehannaCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Haltom-City-city", method = RequestMethod.GET)
	public String getTexasCityHaltomCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4831928");
		return "TexasCityHaltomCitycity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Stephenson-County", method = RequestMethod.GET)
	public String getIllinoisCountyStephensonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17177");
		return "IllinoisCountyStephensonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Somerset-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountySomersetCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42111");
		return "PennsylvaniaCountySomersetCounty";
	}   
@RequestMapping(value = "/states/Maine/cities/Lewiston-city", method = RequestMethod.GET)
	public String getMaineCityLewistoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2338740");
		return "MaineCityLewistoncity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Shelby-County", method = RequestMethod.GET)
	public String getIllinoisCountyShelbyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17173");
		return "IllinoisCountyShelbyCounty";
	}   
@RequestMapping(value = "/states/Alabama/metros/FlorenceMuscle-Shoals", method = RequestMethod.GET)
	public String getAlabamaMetroFlorenceMuscleShoals(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22520");
		return "AlabamaMetroFlorenceMuscleShoals";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Stutsman-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyStutsmanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38093");
		return "North_DakotaCountyStutsmanCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Tioga-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyTiogaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42117");
		return "PennsylvaniaCountyTiogaCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Union-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyUnionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42119");
		return "PennsylvaniaCountyUnionCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Isle-of-Wight-County", method = RequestMethod.GET)
	public String getVirginiaCountyIsleofWightCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51093");
		return "VirginiaCountyIsleofWightCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/James-City-County", method = RequestMethod.GET)
	public String getVirginiaCountyJamesCityCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51095");
		return "VirginiaCountyJamesCityCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Lansing-village", method = RequestMethod.GET)
	public String getIllinoisCityLansingvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1742028");
		return "IllinoisCityLansingvillage";
	}   
@RequestMapping(value = "/states/Nebraska/micros/North-Platte", method = RequestMethod.GET)
	public String getNebraskaMicroNorthPlatte(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35820");
		return "NebraskaMicroNorthPlatte";
	}   
@RequestMapping(value = "/states/Ohio/cities/Akron-city", method = RequestMethod.GET)
	public String getOhioCityAkroncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3901000");
		return "OhioCityAkroncity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Pettis-County", method = RequestMethod.GET)
	public String getMissouriCountyPettisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29159");
		return "MissouriCountyPettisCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/King-George-County", method = RequestMethod.GET)
	public String getVirginiaCountyKingGeorgeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51099");
		return "VirginiaCountyKingGeorgeCounty";
	}   
@RequestMapping(value = "/states/California/metros/Madera", method = RequestMethod.GET)
	public String getCaliforniaMetroMadera(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31460");
		return "CaliforniaMetroMadera";
	}   
@RequestMapping(value = "/states/California/cities/Norco-city", method = RequestMethod.GET)
	public String getCaliforniaCityNorcocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "651560");
		return "CaliforniaCityNorcocity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Evans", method = RequestMethod.GET)
	public String getGeorgiaCityEvans(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1328044");
		return "GeorgiaCityEvans";
	}   
@RequestMapping(value = "/states/Oregon/metros/Albany", method = RequestMethod.GET)
	public String getOregonMetroAlbany(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10540");
		return "OregonMetroAlbany";
	}   
@RequestMapping(value = "/states/Arizona/cities/Tucson-city", method = RequestMethod.GET)
	public String getArizonaCityTucsoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "477000");
		return "ArizonaCityTucsoncity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Boston-city", method = RequestMethod.GET)
	public String getMassachusettsCityBostoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2507000");
		return "MassachusettsCityBostoncity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Perry-County", method = RequestMethod.GET)
	public String getIllinoisCountyPerryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17145");
		return "IllinoisCountyPerryCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Philadelphia-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyPhiladelphiaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42101");
		return "PennsylvaniaCountyPhiladelphiaCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Peabody-city", method = RequestMethod.GET)
	public String getMassachusettsCityPeabodycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2552490");
		return "MassachusettsCityPeabodycity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Pike-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyPikeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42103");
		return "PennsylvaniaCountyPikeCounty";
	}   
@RequestMapping(value = "/states/California/cities/Napa-city", method = RequestMethod.GET)
	public String getCaliforniaCityNapacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "650258");
		return "CaliforniaCityNapacity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Ogle-County", method = RequestMethod.GET)
	public String getIllinoisCountyOgleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17141");
		return "IllinoisCountyOgleCounty";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Stark-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyStarkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38089");
		return "North_DakotaCountyStarkCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Amarillo-city", method = RequestMethod.GET)
	public String getTexasCityAmarillocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4803000");
		return "TexasCityAmarillocity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Peoria-County", method = RequestMethod.GET)
	public String getIllinoisCountyPeoriaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17143");
		return "IllinoisCountyPeoriaCounty";
	}   
@RequestMapping(value = "/states/California/metros/Santa-CruzWatsonville", method = RequestMethod.GET)
	public String getCaliforniaMetroSantaCruzWatsonville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42100");
		return "CaliforniaMetroSantaCruzWatsonville";
	}   
@RequestMapping(value = "/states/Michigan/cities/Mount-Pleasant-city", method = RequestMethod.GET)
	public String getMichiganCityMountPleasantcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2656020");
		return "MichiganCityMountPleasantcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Snyder-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountySnyderCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42109");
		return "PennsylvaniaCountySnyderCounty";
	}   
@RequestMapping(value = "/states/Ohio/metros/Cincinnati", method = RequestMethod.GET)
	public String getOhioMetroCincinnati(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17140");
		return "OhioMetroCincinnati";
	}   
@RequestMapping(value = "/states/Nevada/micros/Gardnerville-Ranchos", method = RequestMethod.GET)
	public String getNevadaMicroGardnervilleRanchos(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23820");
		return "NevadaMicroGardnervilleRanchos";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Schuylkill-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountySchuylkillCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42107");
		return "PennsylvaniaCountySchuylkillCounty";
	}   
@RequestMapping(value = "/states/California/cities/Altadena", method = RequestMethod.GET)
	public String getCaliforniaCityAltadena(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "601290");
		return "CaliforniaCityAltadena";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Havelock-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityHavelockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3730120");
		return "North_CarolinaCityHavelockcity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Marion-County", method = RequestMethod.GET)
	public String getMissouriCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29127");
		return "MissouriCountyMarionCounty";
	}   
@RequestMapping(value = "/states/California/cities/Fresno-city", method = RequestMethod.GET)
	public String getCaliforniaCityFresnocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "627000");
		return "CaliforniaCityFresnocity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Macomb-County", method = RequestMethod.GET)
	public String getMichiganCountyMacombCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26099");
		return "MichiganCountyMacombCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/University-Park", method = RequestMethod.GET)
	public String getFloridaCityUniversityPark(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1273287");
		return "FloridaCityUniversityPark";
	}   
@RequestMapping(value = "/states/Oregon/metros/Medford", method = RequestMethod.GET)
	public String getOregonMetroMedford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32780");
		return "OregonMetroMedford";
	}   
@RequestMapping(value = "/states/Michigan/counties/Lenawee-County", method = RequestMethod.GET)
	public String getMichiganCountyLenaweeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26091");
		return "MichiganCountyLenaweeCounty";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Richmond-city", method = RequestMethod.GET)
	public String getKentuckyCityRichmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2165226");
		return "KentuckyCityRichmondcity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/St-Paul-city", method = RequestMethod.GET)
	public String getMinnesotaCityStPaulcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2758000");
		return "MinnesotaCityStPaulcity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Livingston-County", method = RequestMethod.GET)
	public String getMichiganCountyLivingstonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26093");
		return "MichiganCountyLivingstonCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Randolph-County", method = RequestMethod.GET)
	public String getIllinoisCountyRandolphCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17157");
		return "IllinoisCountyRandolphCounty";
	}   
@RequestMapping(value = "/states/California/cities/Morgan-Hill-city", method = RequestMethod.GET)
	public String getCaliforniaCityMorganHillcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "649278");
		return "CaliforniaCityMorganHillcity";
	}   
@RequestMapping(value = "/states/Arizona/metros/Sierra-VistaDouglas", method = RequestMethod.GET)
	public String getArizonaMetroSierraVistaDouglas(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43420");
		return "ArizonaMetroSierraVistaDouglas";
	}   
@RequestMapping(value = "/states/Texas/cities/Waxahachie-city", method = RequestMethod.GET)
	public String getTexasCityWaxahachiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4876816");
		return "TexasCityWaxahachiecity";
	}   
@RequestMapping(value = "/states/Washington/cities/University-Place-city", method = RequestMethod.GET)
	public String getWashingtonCityUniversityPlacecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5373465");
		return "WashingtonCityUniversityPlacecity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Fairland", method = RequestMethod.GET)
	public String getMarylandCityFairland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2427250");
		return "MarylandCityFairland";
	}   
@RequestMapping(value = "/states/Wyoming/cities/Laramie-city", method = RequestMethod.GET)
	public String getWyomingCityLaramiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5645050");
		return "WyomingCityLaramiecity";
	}   
@RequestMapping(value = "/states/California/cities/Moreno-Valley-city", method = RequestMethod.GET)
	public String getCaliforniaCityMorenoValleycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "649270");
		return "CaliforniaCityMorenoValleycity";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/Florence", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroFlorence(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22500");
		return "South_CarolinaMetroFlorence";
	}   
@RequestMapping(value = "/states/Ohio/cities/Oxford-city", method = RequestMethod.GET)
	public String getOhioCityOxfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3959234");
		return "OhioCityOxfordcity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/New-Berlin-city", method = RequestMethod.GET)
	public String getWisconsinCityNewBerlincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5556375");
		return "WisconsinCityNewBerlincity";
	}   
@RequestMapping(value = "/states/Texas/cities/Round-Rock-city", method = RequestMethod.GET)
	public String getTexasCityRoundRockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4863500");
		return "TexasCityRoundRockcity";
	}   
@RequestMapping(value = "/states/Montana/counties/Yellowstone-County", method = RequestMethod.GET)
	public String getMontanaCountyYellowstoneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30111");
		return "MontanaCountyYellowstoneCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Syracuse-city", method = RequestMethod.GET)
	public String getNew_YorkCitySyracusecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3673000");
		return "New_YorkCitySyracusecity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Miller-County", method = RequestMethod.GET)
	public String getMissouriCountyMillerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29131");
		return "MissouriCountyMillerCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Asheboro-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityAsheborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3702080");
		return "North_CarolinaCityAsheborocity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/WinstonSalem-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityWinstonSalemcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3775000");
		return "North_CarolinaCityWinstonSalemcity";
	}   
@RequestMapping(value = "/states/Montana/cities/Helena-city", method = RequestMethod.GET)
	public String getMontanaCityHelenacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3035600");
		return "MontanaCityHelenacity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Orland-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityOrlandParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1756640");
		return "IllinoisCityOrlandParkvillage";
	}   
@RequestMapping(value = "/states/Colorado/cities/Loveland-city", method = RequestMethod.GET)
	public String getColoradoCityLovelandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "846465");
		return "ColoradoCityLovelandcity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Laurel-city", method = RequestMethod.GET)
	public String getMarylandCityLaurelcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2445900");
		return "MarylandCityLaurelcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Nacogdoches-city", method = RequestMethod.GET)
	public String getTexasCityNacogdochescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4850256");
		return "TexasCityNacogdochescity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Marion-County", method = RequestMethod.GET)
	public String getIllinoisCountyMarionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17121");
		return "IllinoisCountyMarionCounty";
	}   
@RequestMapping(value = "/states/Iowa/micros/Storm-Lake", method = RequestMethod.GET)
	public String getIowaMicroStormLake(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44740");
		return "IowaMicroStormLake";
	}   
@RequestMapping(value = "/states/Missouri/counties/Lawrence-County", method = RequestMethod.GET)
	public String getMissouriCountyLawrenceCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29109");
		return "MissouriCountyLawrenceCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Lafayette-County", method = RequestMethod.GET)
	public String getMissouriCountyLafayetteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29107");
		return "MissouriCountyLafayetteCounty";
	}   
@RequestMapping(value = "/states/Iowa/metros/Des-MoinesWest-Des-Moines", method = RequestMethod.GET)
	public String getIowaMetroDesMoinesWestDesMoines(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19780");
		return "IowaMetroDesMoinesWestDesMoines";
	}   
@RequestMapping(value = "/states/California/cities/Cupertino-city", method = RequestMethod.GET)
	public String getCaliforniaCityCupertinocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "617610");
		return "CaliforniaCityCupertinocity";
	}   
@RequestMapping(value = "/states/Texas/cities/Rowlett-city", method = RequestMethod.GET)
	public String getTexasCityRowlettcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4863572");
		return "TexasCityRowlettcity";
	}   
@RequestMapping(value = "/states/Texas/cities/Grapevine-city", method = RequestMethod.GET)
	public String getTexasCityGrapevinecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4830644");
		return "TexasCityGrapevinecity";
	}   
@RequestMapping(value = "/states/Arizona/metros/Phoenix-Mesa-Scottsdale", method = RequestMethod.GET)
	public String getArizonaMetroPhoenixMesaScottsdale(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38060");
		return "ArizonaMetroPhoenixMesaScottsdale";
	}   
@RequestMapping(value = "/states/Arizona/cities/Scottsdale-city", method = RequestMethod.GET)
	public String getArizonaCityScottsdalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "465000");
		return "ArizonaCityScottsdalecity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Johnson-County", method = RequestMethod.GET)
	public String getMissouriCountyJohnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29101");
		return "MissouriCountyJohnsonCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Isabella-County", method = RequestMethod.GET)
	public String getMichiganCountyIsabellaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26073");
		return "MichiganCountyIsabellaCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/La-CrosseOnalaska", method = RequestMethod.GET)
	public String getWisconsinMetroLaCrosseOnalaska(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29100");
		return "WisconsinMetroLaCrosseOnalaska";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Camden-city", method = RequestMethod.GET)
	public String getNew_JerseyCityCamdencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3410000");
		return "New_JerseyCityCamdencity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Jackson-County", method = RequestMethod.GET)
	public String getMichiganCountyJacksonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26075");
		return "MichiganCountyJacksonCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Laclede-County", method = RequestMethod.GET)
	public String getMissouriCountyLacledeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29105");
		return "MissouriCountyLacledeCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Kalamazoo-County", method = RequestMethod.GET)
	public String getMichiganCountyKalamazooCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26077");
		return "MichiganCountyKalamazooCounty";
	}   
@RequestMapping(value = "/states/California/cities/La-Canada-Flintridge-city", method = RequestMethod.GET)
	public String getCaliforniaCityLaCanadaFlintridgecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639003");
		return "CaliforniaCityLaCanadaFlintridgecity";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Fayetteville-city", method = RequestMethod.GET)
	public String getArkansasCityFayettevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "523290");
		return "ArkansasCityFayettevillecity";
	}   
@RequestMapping(value = "/states/Connecticut/cities/North-Haven", method = RequestMethod.GET)
	public String getConnecticutCityNorthHaven(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "954940");
		return "ConnecticutCityNorthHaven";
	}   
@RequestMapping(value = "/states/New-York/metros/Rochester", method = RequestMethod.GET)
	public String getNew_YorkMetroRochester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40380");
		return "New_YorkMetroRochester";
	}   
@RequestMapping(value = "/states/Oregon/micros/Astoria", method = RequestMethod.GET)
	public String getOregonMicroAstoria(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "11820");
		return "OregonMicroAstoria";
	}   
@RequestMapping(value = "/states/New-York/cities/Centereach", method = RequestMethod.GET)
	public String getNew_YorkCityCentereach(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3613376");
		return "New_YorkCityCentereach";
	}   
@RequestMapping(value = "/states/Illinois/counties/Montgomery-County", method = RequestMethod.GET)
	public String getIllinoisCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17135");
		return "IllinoisCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Morgan-County", method = RequestMethod.GET)
	public String getIllinoisCountyMorganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17137");
		return "IllinoisCountyMorganCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Delray-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityDelrayBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1217100");
		return "FloridaCityDelrayBeachcity";
	}   
@RequestMapping(value = "/states/Florida/cities/St-Petersburg-city", method = RequestMethod.GET)
	public String getFloridaCityStPetersburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1263000");
		return "FloridaCityStPetersburgcity";
	}   
@RequestMapping(value = "/states/Colorado/micros/Edwards", method = RequestMethod.GET)
	public String getColoradoMicroEdwards(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20780");
		return "ColoradoMicroEdwards";
	}   
@RequestMapping(value = "/states/Illinois/counties/Monroe-County", method = RequestMethod.GET)
	public String getIllinoisCountyMonroeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17133");
		return "IllinoisCountyMonroeCounty";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Morton-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyMortonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38059");
		return "North_DakotaCountyMortonCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/McDonald-County", method = RequestMethod.GET)
	public String getMissouriCountyMcDonaldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29119");
		return "MissouriCountyMcDonaldCounty";
	}   
@RequestMapping(value = "/states/Georgia/micros/Cornelia", method = RequestMethod.GET)
	public String getGeorgiaMicroCornelia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18460");
		return "GeorgiaMicroCornelia";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/High-Point-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityHighPointcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3731400");
		return "North_CarolinaCityHighPointcity";
	}   
@RequestMapping(value = "/states/Colorado/metros/Pueblo", method = RequestMethod.GET)
	public String getColoradoMetroPueblo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39380");
		return "ColoradoMetroPueblo";
	}   
@RequestMapping(value = "/states/Missouri/cities/Hazelwood-city", method = RequestMethod.GET)
	public String getMissouriCityHazelwoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2931276");
		return "MissouriCityHazelwoodcity";
	}   
@RequestMapping(value = "/states/Georgia/metros/Macon", method = RequestMethod.GET)
	public String getGeorgiaMetroMacon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "31420");
		return "GeorgiaMetroMacon";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Hoboken-city", method = RequestMethod.GET)
	public String getNew_JerseyCityHobokencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3432250");
		return "New_JerseyCityHobokencity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Lapeer-County", method = RequestMethod.GET)
	public String getMichiganCountyLapeerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26087");
		return "MichiganCountyLapeerCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Leelanau-County", method = RequestMethod.GET)
	public String getMichiganCountyLeelanauCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26089");
		return "MichiganCountyLeelanauCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Chapel-Hill-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityChapelHilltown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3711800");
		return "North_CarolinaCityChapelHilltown";
	}   
@RequestMapping(value = "/states/Illinois/cities/Elmwood-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityElmwoodParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1723724");
		return "IllinoisCityElmwoodParkvillage";
	}   
@RequestMapping(value = "/states/Missouri/counties/Lincoln-County", method = RequestMethod.GET)
	public String getMissouriCountyLincolnCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29113");
		return "MissouriCountyLincolnCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Kent-County", method = RequestMethod.GET)
	public String getMichiganCountyKentCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26081");
		return "MichiganCountyKentCounty";
	}   
@RequestMapping(value = "/states/Georgia/metros/Albany", method = RequestMethod.GET)
	public String getGeorgiaMetroAlbany(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10500");
		return "GeorgiaMetroAlbany";
	}   
@RequestMapping(value = "/states/Texas/cities/Weatherford-city", method = RequestMethod.GET)
	public String getTexasCityWeatherfordcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4876864");
		return "TexasCityWeatherfordcity";
	}   
@RequestMapping(value = "/states/Utah/cities/West-Jordan-city", method = RequestMethod.GET)
	public String getUtahCityWestJordancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4982950");
		return "UtahCityWestJordancity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Lee-County", method = RequestMethod.GET)
	public String getIllinoisCountyLeeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17103");
		return "IllinoisCountyLeeCounty";
	}   
@RequestMapping(value = "/states/Louisiana/micros/DeRidder", method = RequestMethod.GET)
	public String getLouisianaMicroDeRidder(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19760");
		return "LouisianaMicroDeRidder";
	}   
@RequestMapping(value = "/states/Maryland/cities/Suitland", method = RequestMethod.GET)
	public String getMarylandCitySuitland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2475725");
		return "MarylandCitySuitland";
	}   
@RequestMapping(value = "/states/Michigan/counties/Hillsdale-County", method = RequestMethod.GET)
	public String getMichiganCountyHillsdaleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26059");
		return "MichiganCountyHillsdaleCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Gladwin-County", method = RequestMethod.GET)
	public String getMichiganCountyGladwinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26051");
		return "MichiganCountyGladwinCounty";
	}   
@RequestMapping(value = "/states/Washington/cities/Kenmore-city", method = RequestMethod.GET)
	public String getWashingtonCityKenmorecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5335170");
		return "WashingtonCityKenmorecity";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Meadville", method = RequestMethod.GET)
	public String getPennsylvaniaMicroMeadville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32740");
		return "PennsylvaniaMicroMeadville";
	}   
@RequestMapping(value = "/states/Michigan/counties/Grand-Traverse-County", method = RequestMethod.GET)
	public String getMichiganCountyGrandTraverseCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26055");
		return "MichiganCountyGrandTraverseCounty";
	}   
@RequestMapping(value = "/states/California/cities/Granite-Bay", method = RequestMethod.GET)
	public String getCaliforniaCityGraniteBay(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "630693");
		return "CaliforniaCityGraniteBay";
	}   
@RequestMapping(value = "/states/New-Mexico/cities/Roswell-city", method = RequestMethod.GET)
	public String getNew_MexicoCityRoswellcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3564930");
		return "New_MexicoCityRoswellcity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Gratiot-County", method = RequestMethod.GET)
	public String getMichiganCountyGratiotCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26057");
		return "MichiganCountyGratiotCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/McDonough-County", method = RequestMethod.GET)
	public String getIllinoisCountyMcDonoughCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17109");
		return "IllinoisCountyMcDonoughCounty";
	}   
@RequestMapping(value = "/states/California/cities/La-Mesa-city", method = RequestMethod.GET)
	public String getCaliforniaCityLaMesacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640004");
		return "CaliforniaCityLaMesacity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Livingston-County", method = RequestMethod.GET)
	public String getIllinoisCountyLivingstonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17105");
		return "IllinoisCountyLivingstonCounty";
	}   
@RequestMapping(value = "/states/Texas/micros/Jacksonville", method = RequestMethod.GET)
	public String getTexasMicroJacksonville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27380");
		return "TexasMicroJacksonville";
	}   
@RequestMapping(value = "/states/Illinois/counties/Logan-County", method = RequestMethod.GET)
	public String getIllinoisCountyLoganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17107");
		return "IllinoisCountyLoganCounty";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Biloxi-city", method = RequestMethod.GET)
	public String getMississippiCityBiloxicity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2806220");
		return "MississippiCityBiloxicity";
	}   
@RequestMapping(value = "/states/Illinois/counties/McLean-County", method = RequestMethod.GET)
	public String getIllinoisCountyMcLeanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17113");
		return "IllinoisCountyMcLeanCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Macon-County", method = RequestMethod.GET)
	public String getIllinoisCountyMaconCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17115");
		return "IllinoisCountyMaconCounty";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Grand-Forks-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyGrandForksCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38035");
		return "North_DakotaCountyGrandForksCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/McHenry-County", method = RequestMethod.GET)
	public String getIllinoisCountyMcHenryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17111");
		return "IllinoisCountyMcHenryCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Fort-Worth-city", method = RequestMethod.GET)
	public String getTexasCityFortWorthcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4827000");
		return "TexasCityFortWorthcity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Huron-County", method = RequestMethod.GET)
	public String getMichiganCountyHuronCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26063");
		return "MichiganCountyHuronCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Ingham-County", method = RequestMethod.GET)
	public String getMichiganCountyInghamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26065");
		return "MichiganCountyInghamCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Ionia-County", method = RequestMethod.GET)
	public String getMichiganCountyIoniaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26067");
		return "MichiganCountyIoniaCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Iosco-County", method = RequestMethod.GET)
	public String getMichiganCountyIoscoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26069");
		return "MichiganCountyIoscoCounty";
	}   
@RequestMapping(value = "/states/California/cities/Oceanside-city", method = RequestMethod.GET)
	public String getCaliforniaCityOceansidecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "653322");
		return "CaliforniaCityOceansidecity";
	}   
@RequestMapping(value = "/states/California/cities/Oxnard-city", method = RequestMethod.GET)
	public String getCaliforniaCityOxnardcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "654652");
		return "CaliforniaCityOxnardcity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Macoupin-County", method = RequestMethod.GET)
	public String getIllinoisCountyMacoupinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17117");
		return "IllinoisCountyMacoupinCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Houghton-County", method = RequestMethod.GET)
	public String getMichiganCountyHoughtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26061");
		return "MichiganCountyHoughtonCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Madison-County", method = RequestMethod.GET)
	public String getIllinoisCountyMadisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17119");
		return "IllinoisCountyMadisonCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Mission-Bend", method = RequestMethod.GET)
	public String getTexasCityMissionBend(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4848772");
		return "TexasCityMissionBend";
	}   
@RequestMapping(value = "/states/California/cities/Davis-city", method = RequestMethod.GET)
	public String getCaliforniaCityDaviscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "618100");
		return "CaliforniaCityDaviscity";
	}   
@RequestMapping(value = "/states/Mississippi/metros/Hattiesburg", method = RequestMethod.GET)
	public String getMississippiMetroHattiesburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25620");
		return "MississippiMetroHattiesburg";
	}   
@RequestMapping(value = "/states/Maryland/cities/Glen-Burnie", method = RequestMethod.GET)
	public String getMarylandCityGlenBurnie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2432650");
		return "MarylandCityGlenBurnie";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Jackson-city", method = RequestMethod.GET)
	public String getMississippiCityJacksoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2836000");
		return "MississippiCityJacksoncity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Stevens-Point-city", method = RequestMethod.GET)
	public String getWisconsinCityStevensPointcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5577200");
		return "WisconsinCityStevensPointcity";
	}   
@RequestMapping(value = "/states/Washington/metros/Mount-VernonAnacortes", method = RequestMethod.GET)
	public String getWashingtonMetroMountVernonAnacortes(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34580");
		return "WashingtonMetroMountVernonAnacortes";
	}   
@RequestMapping(value = "/states/California/cities/Buena-Park-city", method = RequestMethod.GET)
	public String getCaliforniaCityBuenaParkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "608786");
		return "CaliforniaCityBuenaParkcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Ocoee-city", method = RequestMethod.GET)
	public String getFloridaCityOcoeecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1251075");
		return "FloridaCityOcoeecity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Accomack-County", method = RequestMethod.GET)
	public String getVirginiaCountyAccomackCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51001");
		return "VirginiaCountyAccomackCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Albemarle-County", method = RequestMethod.GET)
	public String getVirginiaCountyAlbemarleCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51003");
		return "VirginiaCountyAlbemarleCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Fair-Oaks", method = RequestMethod.GET)
	public String getVirginiaCityFairOaks(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5126875");
		return "VirginiaCityFairOaks";
	}   
@RequestMapping(value = "/states/Florida/metros/Port-St-Lucie", method = RequestMethod.GET)
	public String getFloridaMetroPortStLucie(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38940");
		return "FloridaMetroPortStLucie";
	}   
@RequestMapping(value = "/states/Washington/micros/Ellensburg", method = RequestMethod.GET)
	public String getWashingtonMicroEllensburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21260");
		return "WashingtonMicroEllensburg";
	}   
@RequestMapping(value = "/states/Virginia/counties/Amherst-County", method = RequestMethod.GET)
	public String getVirginiaCountyAmherstCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51009");
		return "VirginiaCountyAmherstCounty";
	}   
@RequestMapping(value = "/states/California/cities/Rancho-Cucamonga-city", method = RequestMethod.GET)
	public String getCaliforniaCityRanchoCucamongacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659451");
		return "CaliforniaCityRanchoCucamongacity";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Lodi-borough", method = RequestMethod.GET)
	public String getNew_JerseyCityLodiborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3441100");
		return "New_JerseyCityLodiborough";
	}   
@RequestMapping(value = "/states/Georgia/cities/Atlanta-city", method = RequestMethod.GET)
	public String getGeorgiaCityAtlantacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1304000");
		return "GeorgiaCityAtlantacity";
	}   
@RequestMapping(value = "/states/Mississippi/cities/Gulfport-city", method = RequestMethod.GET)
	public String getMississippiCityGulfportcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2829700");
		return "MississippiCityGulfportcity";
	}   
@RequestMapping(value = "/states/Colorado/metros/Grand-Junction", method = RequestMethod.GET)
	public String getColoradoMetroGrandJunction(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24300");
		return "ColoradoMetroGrandJunction";
	}   
@RequestMapping(value = "/states/Oregon/cities/Albany-city", method = RequestMethod.GET)
	public String getOregonCityAlbanycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4101000");
		return "OregonCityAlbanycity";
	}   
@RequestMapping(value = "/states/California/cities/Rancho-Cordova-city", method = RequestMethod.GET)
	public String getCaliforniaCityRanchoCordovacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "659444");
		return "CaliforniaCityRanchoCordovacity";
	}   
@RequestMapping(value = "/states/California/cities/West-Hollywood-city", method = RequestMethod.GET)
	public String getCaliforniaCityWestHollywoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "684410");
		return "CaliforniaCityWestHollywoodcity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Arlington-County", method = RequestMethod.GET)
	public String getVirginiaCountyArlingtonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51013");
		return "VirginiaCountyArlingtonCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Augusta-County", method = RequestMethod.GET)
	public String getVirginiaCountyAugustaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51015");
		return "VirginiaCountyAugustaCounty";
	}   
@RequestMapping(value = "/states/California/cities/La-Verne-city", method = RequestMethod.GET)
	public String getCaliforniaCityLaVernecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640830");
		return "CaliforniaCityLaVernecity";
	}   
@RequestMapping(value = "/states/Florida/metros/Tallahassee", method = RequestMethod.GET)
	public String getFloridaMetroTallahassee(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45220");
		return "FloridaMetroTallahassee";
	}   
@RequestMapping(value = "/states/Virginia/cities/Oakton", method = RequestMethod.GET)
	public String getVirginiaCityOakton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5158472");
		return "VirginiaCityOakton";
	}   
@RequestMapping(value = "/states/Virginia/counties/Bedford-County", method = RequestMethod.GET)
	public String getVirginiaCountyBedfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51019");
		return "VirginiaCountyBedfordCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Pekin-city", method = RequestMethod.GET)
	public String getIllinoisCityPekincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1758447");
		return "IllinoisCityPekincity";
	}   
@RequestMapping(value = "/states/Georgia/cities/Lawrenceville-city", method = RequestMethod.GET)
	public String getGeorgiaCityLawrencevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1345488");
		return "GeorgiaCityLawrencevillecity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Prattville-city", method = RequestMethod.GET)
	public String getAlabamaCityPrattvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "162328");
		return "AlabamaCityPrattvillecity";
	}   
@RequestMapping(value = "/states/California/cities/Millbrae-city", method = RequestMethod.GET)
	public String getCaliforniaCityMillbraecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "647486");
		return "CaliforniaCityMillbraecity";
	}   
@RequestMapping(value = "/states/Kansas/cities/Salina-city", method = RequestMethod.GET)
	public String getKansasCitySalinacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2062700");
		return "KansasCitySalinacity";
	}   
@RequestMapping(value = "/states/Virginia/cities/Christiansburg-town", method = RequestMethod.GET)
	public String getVirginiaCityChristiansburgtown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5116608");
		return "VirginiaCityChristiansburgtown";
	}   
@RequestMapping(value = "/states/Kansas/cities/Pittsburg-city", method = RequestMethod.GET)
	public String getKansasCityPittsburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2056025");
		return "KansasCityPittsburgcity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Salisbury-city", method = RequestMethod.GET)
	public String getMarylandCitySalisburycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2469925");
		return "MarylandCitySalisburycity";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Edmond-city", method = RequestMethod.GET)
	public String getOklahomaCityEdmondcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4023200");
		return "OklahomaCityEdmondcity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Botetourt-County", method = RequestMethod.GET)
	public String getVirginiaCountyBotetourtCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51023");
		return "VirginiaCountyBotetourtCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Buchanan-County", method = RequestMethod.GET)
	public String getVirginiaCountyBuchananCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51027");
		return "VirginiaCountyBuchananCounty";
	}   
@RequestMapping(value = "/states/New-Hampshire/micros/Berlin", method = RequestMethod.GET)
	public String getNew_HampshireMicroBerlin(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13620");
		return "New_HampshireMicroBerlin";
	}   
@RequestMapping(value = "/states/New-York/metros/Utica-Rome", method = RequestMethod.GET)
	public String getNew_YorkMetroUticaRome(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46540");
		return "New_YorkMetroUticaRome";
	}   
@RequestMapping(value = "/states/Puerto-Rico/micros/Santa-Isabel", method = RequestMethod.GET)
	public String getPuerto_RicoMicroSantaIsabel(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42180");
		return "Puerto_RicoMicroSantaIsabel";
	}   
@RequestMapping(value = "/states/Connecticut/cities/Danbury-city", method = RequestMethod.GET)
	public String getConnecticutCityDanburycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "918430");
		return "ConnecticutCityDanburycity";
	}   
@RequestMapping(value = "/states/Arizona/counties/Apache-County", method = RequestMethod.GET)
	public String getArizonaCountyApacheCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4001");
		return "ArizonaCountyApacheCounty";
	}   
@RequestMapping(value = "/states/California/cities/Compton-city", method = RequestMethod.GET)
	public String getCaliforniaCityComptoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "615044");
		return "CaliforniaCityComptoncity";
	}   
@RequestMapping(value = "/states/Arizona/counties/Cochise-County", method = RequestMethod.GET)
	public String getArizonaCountyCochiseCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4003");
		return "ArizonaCountyCochiseCounty";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Indianola", method = RequestMethod.GET)
	public String getMississippiMicroIndianola(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26940");
		return "MississippiMicroIndianola";
	}   
@RequestMapping(value = "/states/Illinois/cities/Maywood-village", method = RequestMethod.GET)
	public String getIllinoisCityMaywoodvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1747774");
		return "IllinoisCityMaywoodvillage";
	}   
@RequestMapping(value = "/states/Illinois/cities/Addison-village", method = RequestMethod.GET)
	public String getIllinoisCityAddisonvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1700243");
		return "IllinoisCityAddisonvillage";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Green-Bay-city", method = RequestMethod.GET)
	public String getWisconsinCityGreenBaycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5531000");
		return "WisconsinCityGreenBaycity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Campbell-County", method = RequestMethod.GET)
	public String getVirginiaCountyCampbellCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51031");
		return "VirginiaCountyCampbellCounty";
	}   
@RequestMapping(value = "/states/New-York/cities/Syosset", method = RequestMethod.GET)
	public String getNew_YorkCitySyosset(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3672554");
		return "New_YorkCitySyosset";
	}   
@RequestMapping(value = "/states/Utah/cities/Provo-city", method = RequestMethod.GET)
	public String getUtahCityProvocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4962470");
		return "UtahCityProvocity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Caroline-County", method = RequestMethod.GET)
	public String getVirginiaCountyCarolineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51033");
		return "VirginiaCountyCarolineCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Forest-City", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroForestCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22580");
		return "North_CarolinaMicroForestCity";
	}   
@RequestMapping(value = "/states/Michigan/metros/Midland", method = RequestMethod.GET)
	public String getMichiganMetroMidland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33220");
		return "MichiganMetroMidland";
	}   
@RequestMapping(value = "/states/California/cities/Atascadero-city", method = RequestMethod.GET)
	public String getCaliforniaCityAtascaderocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "603064");
		return "CaliforniaCityAtascaderocity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Carroll-County", method = RequestMethod.GET)
	public String getVirginiaCountyCarrollCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51035");
		return "VirginiaCountyCarrollCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Round-Lake-Beach-village", method = RequestMethod.GET)
	public String getIllinoisCityRoundLakeBeachvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1766040");
		return "IllinoisCityRoundLakeBeachvillage";
	}   
@RequestMapping(value = "/states/Texas/cities/Mission-city", method = RequestMethod.GET)
	public String getTexasCityMissioncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4848768");
		return "TexasCityMissioncity";
	}   
@RequestMapping(value = "/states/Maine/micros/Augusta-Waterville", method = RequestMethod.GET)
	public String getMaineMicroAugustaWaterville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12300");
		return "MaineMicroAugustaWaterville";
	}   
@RequestMapping(value = "/states/California/cities/El-Cajon-city", method = RequestMethod.GET)
	public String getCaliforniaCityElCajoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "621712");
		return "CaliforniaCityElCajoncity";
	}   
@RequestMapping(value = "/states/Texas/cities/Wichita-Falls-city", method = RequestMethod.GET)
	public String getTexasCityWichitaFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4879000");
		return "TexasCityWichitaFallscity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Norristown-borough", method = RequestMethod.GET)
	public String getPennsylvaniaCityNorristownborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4254656");
		return "PennsylvaniaCityNorristownborough";
	}   
@RequestMapping(value = "/states/West-Virginia/cities/Parkersburg-city", method = RequestMethod.GET)
	public String getWest_VirginiaCityParkersburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5462140");
		return "West_VirginiaCityParkersburgcity";
	}   
@RequestMapping(value = "/states/Arizona/counties/La-Paz-County", method = RequestMethod.GET)
	public String getArizonaCountyLaPazCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4012");
		return "ArizonaCountyLaPazCounty";
	}   
@RequestMapping(value = "/states/Arizona/counties/Maricopa-County", method = RequestMethod.GET)
	public String getArizonaCountyMaricopaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4013");
		return "ArizonaCountyMaricopaCounty";
	}   
@RequestMapping(value = "/states/Nevada/micros/Elko", method = RequestMethod.GET)
	public String getNevadaMicroElko(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21220");
		return "NevadaMicroElko";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Winchester", method = RequestMethod.GET)
	public String getMassachusettsCityWinchester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2580545");
		return "MassachusettsCityWinchester";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Warren-County", method = RequestMethod.GET)
	public String getKentuckyCountyWarrenCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21227");
		return "KentuckyCountyWarrenCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/St-Louis-County", method = RequestMethod.GET)
	public String getMissouriCountyStLouisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29189");
		return "MissouriCountyStLouisCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Chesterfield-County", method = RequestMethod.GET)
	public String getVirginiaCountyChesterfieldCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51041");
		return "VirginiaCountyChesterfieldCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/St-Francois-County", method = RequestMethod.GET)
	public String getMissouriCountyStFrancoisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29187");
		return "MissouriCountyStFrancoisCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Richardson-city", method = RequestMethod.GET)
	public String getTexasCityRichardsoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4861796");
		return "TexasCityRichardsoncity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Culpeper-County", method = RequestMethod.GET)
	public String getVirginiaCountyCulpeperCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51047");
		return "VirginiaCountyCulpeperCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Mount-Vernon", method = RequestMethod.GET)
	public String getOhioMicroMountVernon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "34540");
		return "OhioMicroMountVernon";
	}   
@RequestMapping(value = "/states/Arizona/counties/Coconino-County", method = RequestMethod.GET)
	public String getArizonaCountyCoconinoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4005");
		return "ArizonaCountyCoconinoCounty";
	}   
@RequestMapping(value = "/states/Louisiana/metros/Lafayette", method = RequestMethod.GET)
	public String getLouisianaMetroLafayette(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29180");
		return "LouisianaMetroLafayette";
	}   
@RequestMapping(value = "/states/Arizona/counties/Gila-County", method = RequestMethod.GET)
	public String getArizonaCountyGilaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4007");
		return "ArizonaCountyGilaCounty";
	}   
@RequestMapping(value = "/states/Oregon/metros/Portland-Vancouver-Hillsboro", method = RequestMethod.GET)
	public String getOregonMetroPortlandVancouverHillsboro(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38900");
		return "OregonMetroPortlandVancouverHillsboro";
	}   
@RequestMapping(value = "/states/Arizona/counties/Graham-County", method = RequestMethod.GET)
	public String getArizonaCountyGrahamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4009");
		return "ArizonaCountyGrahamCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/St-Charles-County", method = RequestMethod.GET)
	public String getMissouriCountyStCharlesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29183");
		return "MissouriCountyStCharlesCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Mentor-city", method = RequestMethod.GET)
	public String getOhioCityMentorcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3949056");
		return "OhioCityMentorcity";
	}   
@RequestMapping(value = "/states/California/cities/Corona-city", method = RequestMethod.GET)
	public String getCaliforniaCityCoronacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "616350");
		return "CaliforniaCityCoronacity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Whitley-County", method = RequestMethod.GET)
	public String getKentuckyCountyWhitleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21235");
		return "KentuckyCountyWhitleyCounty";
	}   
@RequestMapping(value = "/states/Arizona/counties/Pinal-County", method = RequestMethod.GET)
	public String getArizonaCountyPinalCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4021");
		return "ArizonaCountyPinalCounty";
	}   
@RequestMapping(value = "/states/Arizona/counties/Santa-Cruz-County", method = RequestMethod.GET)
	public String getArizonaCountySantaCruzCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4023");
		return "ArizonaCountySantaCruzCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Wayne-County", method = RequestMethod.GET)
	public String getKentuckyCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21231");
		return "KentuckyCountyWayneCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Norton-Shores-city", method = RequestMethod.GET)
	public String getMichiganCityNortonShorescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2659140");
		return "MichiganCityNortonShorescity";
	}   
@RequestMapping(value = "/states/Arizona/counties/Yavapai-County", method = RequestMethod.GET)
	public String getArizonaCountyYavapaiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4025");
		return "ArizonaCountyYavapaiCounty";
	}   
@RequestMapping(value = "/states/New-York/metros/Albany-Schenectady-Troy", method = RequestMethod.GET)
	public String getNew_YorkMetroAlbanySchenectadyTroy(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "10580");
		return "New_YorkMetroAlbanySchenectadyTroy";
	}   
@RequestMapping(value = "/states/Ohio/cities/Delaware-city", method = RequestMethod.GET)
	public String getOhioCityDelawarecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3921434");
		return "OhioCityDelawarecity";
	}   
@RequestMapping(value = "/states/Missouri/cities/Gladstone-city", method = RequestMethod.GET)
	public String getMissouriCityGladstonecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2927190");
		return "MissouriCityGladstonecity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Woodford-County", method = RequestMethod.GET)
	public String getKentuckyCountyWoodfordCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21239");
		return "KentuckyCountyWoodfordCounty";
	}   
@RequestMapping(value = "/states/Arkansas/cities/Fort-Smith-city", method = RequestMethod.GET)
	public String getArkansasCityFortSmithcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "524550");
		return "ArkansasCityFortSmithcity";
	}   
@RequestMapping(value = "/states/Maryland/cities/Woodlawn--Baltimore-County", method = RequestMethod.GET)
	public String getMarylandCityWoodlawnBaltimoreCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2486475");
		return "MarylandCityWoodlawnBaltimoreCounty";
	}   
@RequestMapping(value = "/states/California/cities/Rialto-city", method = RequestMethod.GET)
	public String getCaliforniaCityRialtocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "660466");
		return "CaliforniaCityRialtocity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Dinwiddie-County", method = RequestMethod.GET)
	public String getVirginiaCountyDinwiddieCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51053");
		return "VirginiaCountyDinwiddieCounty";
	}   
@RequestMapping(value = "/states/Virginia/cities/Ashburn", method = RequestMethod.GET)
	public String getVirginiaCityAshburn(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5103320");
		return "VirginiaCityAshburn";
	}   
@RequestMapping(value = "/states/Indiana/micros/North-Vernon", method = RequestMethod.GET)
	public String getIndianaMicroNorthVernon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35860");
		return "IndianaMicroNorthVernon";
	}   
@RequestMapping(value = "/states/Florida/cities/Jupiter-town", method = RequestMethod.GET)
	public String getFloridaCityJupitertown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1235875");
		return "FloridaCityJupitertown";
	}   
@RequestMapping(value = "/states/Arizona/counties/Mohave-County", method = RequestMethod.GET)
	public String getArizonaCountyMohaveCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4015");
		return "ArizonaCountyMohaveCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Fairfax-County", method = RequestMethod.GET)
	public String getVirginiaCountyFairfaxCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51059");
		return "VirginiaCountyFairfaxCounty";
	}   
@RequestMapping(value = "/states/California/cities/Lakewood-city", method = RequestMethod.GET)
	public String getCaliforniaCityLakewoodcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "639892");
		return "CaliforniaCityLakewoodcity";
	}   
@RequestMapping(value = "/states/Arizona/counties/Navajo-County", method = RequestMethod.GET)
	public String getArizonaCountyNavajoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4017");
		return "ArizonaCountyNavajoCounty";
	}   
@RequestMapping(value = "/states/Michigan/cities/Port-Huron-city", method = RequestMethod.GET)
	public String getMichiganCityPortHuroncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2665820");
		return "MichiganCityPortHuroncity";
	}   
@RequestMapping(value = "/states/Arizona/counties/Pima-County", method = RequestMethod.GET)
	public String getArizonaCountyPimaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4019");
		return "ArizonaCountyPimaCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Saline-County", method = RequestMethod.GET)
	public String getMissouriCountySalineCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29195");
		return "MissouriCountySalineCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Mint-Hill-town", method = RequestMethod.GET)
	public String getNorth_CarolinaCityMintHilltown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3743480");
		return "North_CarolinaCityMintHilltown";
	}   
@RequestMapping(value = "/states/Ohio/micros/Urbana", method = RequestMethod.GET)
	public String getOhioMicroUrbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46500");
		return "OhioMicroUrbana";
	}   
@RequestMapping(value = "/states/Utah/cities/Bountiful-city", method = RequestMethod.GET)
	public String getUtahCityBountifulcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4907690");
		return "UtahCityBountifulcity";
	}   
@RequestMapping(value = "/states/South-Carolina/micros/Georgetown", method = RequestMethod.GET)
	public String getSouth_CarolinaMicroGeorgetown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "23860");
		return "South_CarolinaMicroGeorgetown";
	}   
@RequestMapping(value = "/states/Illinois/counties/Vermilion-County", method = RequestMethod.GET)
	public String getIllinoisCountyVermilionCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17183");
		return "IllinoisCountyVermilionCounty";
	}   
@RequestMapping(value = "/states/New-Jersey/cities/Trenton-city", method = RequestMethod.GET)
	public String getNew_JerseyCityTrentoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3474000");
		return "New_JerseyCityTrentoncity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Scott-County", method = RequestMethod.GET)
	public String getKentuckyCountyScottCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21209");
		return "KentuckyCountyScottCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Fauquier-County", method = RequestMethod.GET)
	public String getVirginiaCountyFauquierCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51061");
		return "VirginiaCountyFauquierCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Rowan-County", method = RequestMethod.GET)
	public String getKentuckyCountyRowanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21205");
		return "KentuckyCountyRowanCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Polk-County", method = RequestMethod.GET)
	public String getMissouriCountyPolkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29167");
		return "MissouriCountyPolkCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Platte-County", method = RequestMethod.GET)
	public String getMissouriCountyPlatteCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29165");
		return "MissouriCountyPlatteCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Fluvanna-County", method = RequestMethod.GET)
	public String getVirginiaCountyFluvannaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51065");
		return "VirginiaCountyFluvannaCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Paris-city", method = RequestMethod.GET)
	public String getTexasCityPariscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4855080");
		return "TexasCityPariscity";
	}   
@RequestMapping(value = "/states/Virginia/counties/Franklin-County", method = RequestMethod.GET)
	public String getVirginiaCountyFranklinCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51067");
		return "VirginiaCountyFranklinCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Pulaski-County", method = RequestMethod.GET)
	public String getMissouriCountyPulaskiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29169");
		return "MissouriCountyPulaskiCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Frederick-County", method = RequestMethod.GET)
	public String getVirginiaCountyFrederickCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51069");
		return "VirginiaCountyFrederickCounty";
	}   
@RequestMapping(value = "/states/Arizona/counties/Yuma-County", method = RequestMethod.GET)
	public String getArizonaCountyYumaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4027");
		return "ArizonaCountyYumaCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/metros/Santa-Fe", method = RequestMethod.GET)
	public String getNew_MexicoMetroSantaFe(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42140");
		return "New_MexicoMetroSantaFe";
	}   
@RequestMapping(value = "/states/California/cities/Lawndale-city", method = RequestMethod.GET)
	public String getCaliforniaCityLawndalecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "640886");
		return "CaliforniaCityLawndalecity";
	}   
@RequestMapping(value = "/states/Missouri/counties/Phelps-County", method = RequestMethod.GET)
	public String getMissouriCountyPhelpsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29161");
		return "MissouriCountyPhelpsCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Shelby-County", method = RequestMethod.GET)
	public String getKentuckyCountyShelbyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21211");
		return "KentuckyCountyShelbyCounty";
	}   
@RequestMapping(value = "/states/Illinois/counties/Will-County", method = RequestMethod.GET)
	public String getIllinoisCountyWillCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17197");
		return "IllinoisCountyWillCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Wyoming-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyWyomingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42131");
		return "PennsylvaniaCountyWyomingCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Washington", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroWashington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47820");
		return "North_CarolinaMicroWashington";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Thomasville-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityThomasvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3767420");
		return "North_CarolinaCityThomasvillecity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Williamson-County", method = RequestMethod.GET)
	public String getIllinoisCountyWilliamsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17199");
		return "IllinoisCountyWilliamsonCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/York-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyYorkCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42133");
		return "PennsylvaniaCountyYorkCounty";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Fond-du-Lac", method = RequestMethod.GET)
	public String getWisconsinMetroFondduLac(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "22540");
		return "WisconsinMetroFondduLac";
	}   
@RequestMapping(value = "/states/California/cities/Desert-Hot-Springs-city", method = RequestMethod.GET)
	public String getCaliforniaCityDesertHotSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "618996");
		return "CaliforniaCityDesertHotSpringscity";
	}   
@RequestMapping(value = "/states/Illinois/counties/Whiteside-County", method = RequestMethod.GET)
	public String getIllinoisCountyWhitesideCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17195");
		return "IllinoisCountyWhitesideCounty";
	}   
@RequestMapping(value = "/states/Indiana/metros/Indianapolis-Carmel-Anderson", method = RequestMethod.GET)
	public String getIndianaMetroIndianapolisCarmelAnderson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26900");
		return "IndianaMetroIndianapolisCarmelAnderson";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Taylor-County", method = RequestMethod.GET)
	public String getKentuckyCountyTaylorCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21217");
		return "KentuckyCountyTaylorCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Ray-County", method = RequestMethod.GET)
	public String getMissouriCountyRayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29177");
		return "MissouriCountyRayCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Gloucester-County", method = RequestMethod.GET)
	public String getVirginiaCountyGloucesterCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51073");
		return "VirginiaCountyGloucesterCounty";
	}   
@RequestMapping(value = "/states/Missouri/counties/Randolph-County", method = RequestMethod.GET)
	public String getMissouriCountyRandolphCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29175");
		return "MissouriCountyRandolphCounty";
	}   
@RequestMapping(value = "/states/Virginia/counties/Goochland-County", method = RequestMethod.GET)
	public String getVirginiaCountyGoochlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51075");
		return "VirginiaCountyGoochlandCounty";
	}   
@RequestMapping(value = "/states/Florida/metros/North-PortSarasotaBradenton", method = RequestMethod.GET)
	public String getFloridaMetroNorthPortSarasotaBradenton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "35840");
		return "FloridaMetroNorthPortSarasotaBradenton";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Wyoming-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyWyomingCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54109");
		return "West_VirginiaCountyWyomingCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Calumet-City-city", method = RequestMethod.GET)
	public String getIllinoisCityCalumetCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1710487");
		return "IllinoisCityCalumetCitycity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Wood-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyWoodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54107");
		return "West_VirginiaCountyWoodCounty";
	}   
@RequestMapping(value = "/states/Missouri/micros/Sikeston", method = RequestMethod.GET)
	public String getMissouriMicroSikeston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "43460");
		return "MissouriMicroSikeston";
	}   
@RequestMapping(value = "/states/Texas/counties/Howard-County", method = RequestMethod.GET)
	public String getTexasCountyHowardCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48227");
		return "TexasCountyHowardCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Houston-County", method = RequestMethod.GET)
	public String getTexasCountyHoustonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48225");
		return "TexasCountyHoustonCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Sachse-city", method = RequestMethod.GET)
	public String getTexasCitySachsecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4864064");
		return "TexasCitySachsecity";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Mayaguez-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityMayaguezzonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7252431");
		return "Puerto_RicoCityMayaguezzonaurbana";
	}   
@RequestMapping(value = "/states/Nebraska/micros/Hastings", method = RequestMethod.GET)
	public String getNebraskaMicroHastings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25580");
		return "NebraskaMicroHastings";
	}   
@RequestMapping(value = "/states/Kansas/metros/Lawrence", method = RequestMethod.GET)
	public String getKansasMetroLawrence(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29940");
		return "KansasMetroLawrence";
	}   
@RequestMapping(value = "/states/Texas/counties/Hopkins-County", method = RequestMethod.GET)
	public String getTexasCountyHopkinsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48223");
		return "TexasCountyHopkinsCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Goldsboro-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityGoldsborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3726880");
		return "North_CarolinaCityGoldsborocity";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Weatherford", method = RequestMethod.GET)
	public String getOklahomaMicroWeatherford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48220");
		return "OklahomaMicroWeatherford";
	}   
@RequestMapping(value = "/states/Texas/counties/Hood-County", method = RequestMethod.GET)
	public String getTexasCountyHoodCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48221");
		return "TexasCountyHoodCounty";
	}   
@RequestMapping(value = "/states/Kentucky/micros/London", method = RequestMethod.GET)
	public String getKentuckyMicroLondon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30940");
		return "KentuckyMicroLondon";
	}   
@RequestMapping(value = "/states/Iowa/cities/Ames-city", method = RequestMethod.GET)
	public String getIowaCityAmescity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1901855");
		return "IowaCityAmescity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Buckeye-town", method = RequestMethod.GET)
	public String getArizonaCityBuckeyetown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "407940");
		return "ArizonaCityBuckeyetown";
	}   
@RequestMapping(value = "/states/Texas/counties/Hockley-County", method = RequestMethod.GET)
	public String getTexasCountyHockleyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48219");
		return "TexasCountyHockleyCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Hill-County", method = RequestMethod.GET)
	public String getTexasCountyHillCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48217");
		return "TexasCountyHillCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Melrose-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityMelroseParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1748242");
		return "IllinoisCityMelroseParkvillage";
	}   
@RequestMapping(value = "/states/Texas/counties/Hidalgo-County", method = RequestMethod.GET)
	public String getTexasCountyHidalgoCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48215");
		return "TexasCountyHidalgoCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Henderson-County", method = RequestMethod.GET)
	public String getTexasCountyHendersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48213");
		return "TexasCountyHendersonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Palm-City", method = RequestMethod.GET)
	public String getFloridaCityPalmCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1254175");
		return "FloridaCityPalmCity";
	}   
@RequestMapping(value = "/states/New-York/cities/Brentwood", method = RequestMethod.GET)
	public String getNew_YorkCityBrentwood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3608026");
		return "New_YorkCityBrentwood";
	}   
@RequestMapping(value = "/states/Nebraska/metros/Grand-Island", method = RequestMethod.GET)
	public String getNebraskaMetroGrandIsland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24260");
		return "NebraskaMetroGrandIsland";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Kill-Devil-Hills", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroKillDevilHills(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28620");
		return "North_CarolinaMicroKillDevilHills";
	}   
@RequestMapping(value = "/states/Alabama/micros/Talladega-Sylacauga", method = RequestMethod.GET)
	public String getAlabamaMicroTalladegaSylacauga(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45180");
		return "AlabamaMicroTalladegaSylacauga";
	}   
@RequestMapping(value = "/states/California/cities/Foothill-Farms", method = RequestMethod.GET)
	public String getCaliforniaCityFoothillFarms(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "624722");
		return "CaliforniaCityFoothillFarms";
	}   
@RequestMapping(value = "/states/Texas/counties/Hays-County", method = RequestMethod.GET)
	public String getTexasCountyHaysCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48209");
		return "TexasCountyHaysCounty";
	}   
@RequestMapping(value = "/states/Hawaii/cities/Ewa-Gentry", method = RequestMethod.GET)
	public String getHawaiiCityEwaGentry(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1507470");
		return "HawaiiCityEwaGentry";
	}   
@RequestMapping(value = "/states/Texas/cities/Odessa-city", method = RequestMethod.GET)
	public String getTexasCityOdessacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4853388");
		return "TexasCityOdessacity";
	}   
@RequestMapping(value = "/states/Texas/counties/Harrison-County", method = RequestMethod.GET)
	public String getTexasCountyHarrisonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48203");
		return "TexasCountyHarrisonCounty";
	}   
@RequestMapping(value = "/states/Texas/metros/Odessa", method = RequestMethod.GET)
	public String getTexasMetroOdessa(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36220");
		return "TexasMetroOdessa";
	}   
@RequestMapping(value = "/states/Florida/cities/Fort-Pierce-city", method = RequestMethod.GET)
	public String getFloridaCityFortPiercecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1224300");
		return "FloridaCityFortPiercecity";
	}   
@RequestMapping(value = "/states/New-York/micros/Seneca-Falls", method = RequestMethod.GET)
	public String getNew_YorkMicroSenecaFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42900");
		return "New_YorkMicroSenecaFalls";
	}   
@RequestMapping(value = "/states/Maryland/cities/Aspen-Hill", method = RequestMethod.GET)
	public String getMarylandCityAspenHill(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2402825");
		return "MarylandCityAspenHill";
	}   
@RequestMapping(value = "/states/Texas/counties/Harris-County", method = RequestMethod.GET)
	public String getTexasCountyHarrisCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48201");
		return "TexasCountyHarrisCounty";
	}   
@RequestMapping(value = "/states/Ohio/cities/Lebanon-city", method = RequestMethod.GET)
	public String getOhioCityLebanoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3942364");
		return "OhioCityLebanoncity";
	}   
@RequestMapping(value = "/states/Kentucky/cities/LexingtonFayette-urban-county", method = RequestMethod.GET)
	public String getKentuckyCityLexingtonFayetteurbancounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2146027");
		return "KentuckyCityLexingtonFayetteurbancounty";
	}   
@RequestMapping(value = "/states/California/cities/San-Francisco-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanFranciscocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "667000");
		return "CaliforniaCitySanFranciscocity";
	}   
@RequestMapping(value = "/states/Georgia/metros/AugustaRichmond-County", method = RequestMethod.GET)
	public String getGeorgiaMetroAugustaRichmondCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12260");
		return "GeorgiaMetroAugustaRichmondCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/metros/Charleston", method = RequestMethod.GET)
	public String getWest_VirginiaMetroCharleston(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16620");
		return "West_VirginiaMetroCharleston";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Paris", method = RequestMethod.GET)
	public String getTennesseeMicroParis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37540");
		return "TennesseeMicroParis";
	}   
@RequestMapping(value = "/states/Puerto-Rico/cities/Vega-Baja-zona-urbana", method = RequestMethod.GET)
	public String getPuerto_RicoCityVegaBajazonaurbana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "7285326");
		return "Puerto_RicoCityVegaBajazonaurbana";
	}   
@RequestMapping(value = "/states/Kentucky/micros/Middlesborough", method = RequestMethod.GET)
	public String getKentuckyMicroMiddlesborough(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33180");
		return "KentuckyMicroMiddlesborough";
	}   
@RequestMapping(value = "/states/Illinois/cities/Chicago-city", method = RequestMethod.GET)
	public String getIllinoisCityChicagocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1714000");
		return "IllinoisCityChicagocity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/New-Hope-city", method = RequestMethod.GET)
	public String getMinnesotaCityNewHopecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2745628");
		return "MinnesotaCityNewHopecity";
	}   
@RequestMapping(value = "/states/Michigan/cities/Auburn-Hills-city", method = RequestMethod.GET)
	public String getMichiganCityAuburnHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2604105");
		return "MichiganCityAuburnHillscity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Gastonia-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityGastoniacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3725580");
		return "North_CarolinaCityGastoniacity";
	}   
@RequestMapping(value = "/states/Pennsylvania/cities/Chester-city", method = RequestMethod.GET)
	public String getPennsylvaniaCityChestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4213208");
		return "PennsylvaniaCityChestercity";
	}   
@RequestMapping(value = "/states/Texas/cities/Missouri-City-city", method = RequestMethod.GET)
	public String getTexasCityMissouriCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4848804");
		return "TexasCityMissouriCitycity";
	}   
@RequestMapping(value = "/states/California/cities/San-Rafael-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanRafaelcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668364");
		return "CaliforniaCitySanRafaelcity";
	}   
@RequestMapping(value = "/states/New-York/cities/Poughkeepsie-city", method = RequestMethod.GET)
	public String getNew_YorkCityPoughkeepsiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3659641");
		return "New_YorkCityPoughkeepsiecity";
	}   
@RequestMapping(value = "/states/Maine/metros/PortlandSouth-Portland", method = RequestMethod.GET)
	public String getMaineMetroPortlandSouthPortland(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38860");
		return "MaineMetroPortlandSouthPortland";
	}   
@RequestMapping(value = "/states/California/cities/Seal-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCitySealBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "670686");
		return "CaliforniaCitySealBeachcity";
	}   
@RequestMapping(value = "/states/North-Carolina/micros/Laurinburg", method = RequestMethod.GET)
	public String getNorth_CarolinaMicroLaurinburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29900");
		return "North_CarolinaMicroLaurinburg";
	}   
@RequestMapping(value = "/states/Illinois/cities/Granite-City-city", method = RequestMethod.GET)
	public String getIllinoisCityGraniteCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1730926");
		return "IllinoisCityGraniteCitycity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Oregon-city", method = RequestMethod.GET)
	public String getOhioCityOregoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3958730");
		return "OhioCityOregoncity";
	}   
@RequestMapping(value = "/states/California/cities/Torrance-city", method = RequestMethod.GET)
	public String getCaliforniaCityTorrancecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "680000");
		return "CaliforniaCityTorrancecity";
	}   
@RequestMapping(value = "/states/Illinois/cities/Glenview-village", method = RequestMethod.GET)
	public String getIllinoisCityGlenviewvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1729938");
		return "IllinoisCityGlenviewvillage";
	}   
@RequestMapping(value = "/states/Connecticut/metros/HartfordWest-HartfordEast-Hartford", method = RequestMethod.GET)
	public String getConnecticutMetroHartfordWestHartfordEastHartford(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "25540");
		return "ConnecticutMetroHartfordWestHartfordEastHartford";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Oldham-County", method = RequestMethod.GET)
	public String getKentuckyCountyOldhamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21185");
		return "KentuckyCountyOldhamCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Logansport", method = RequestMethod.GET)
	public String getIndianaMicroLogansport(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30900");
		return "IndianaMicroLogansport";
	}   
@RequestMapping(value = "/states/California/cities/Irvine-city", method = RequestMethod.GET)
	public String getCaliforniaCityIrvinecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "636770");
		return "CaliforniaCityIrvinecity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Ohio-County", method = RequestMethod.GET)
	public String getKentuckyCountyOhioCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21183");
		return "KentuckyCountyOhioCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Northfield-city", method = RequestMethod.GET)
	public String getMinnesotaCityNorthfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2746924");
		return "MinnesotaCityNorthfieldcity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Pulaski-County", method = RequestMethod.GET)
	public String getKentuckyCountyPulaskiCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21199");
		return "KentuckyCountyPulaskiCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Port-Orange-city", method = RequestMethod.GET)
	public String getFloridaCityPortOrangecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1258575");
		return "FloridaCityPortOrangecity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Milwaukie-city", method = RequestMethod.GET)
	public String getOregonCityMilwaukiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4148650");
		return "OregonCityMilwaukiecity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Sun-Prairie-city", method = RequestMethod.GET)
	public String getWisconsinCitySunPrairiecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5578600");
		return "WisconsinCitySunPrairiecity";
	}   
@RequestMapping(value = "/states/New-York/cities/West-Babylon", method = RequestMethod.GET)
	public String getNew_YorkCityWestBabylon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3679246");
		return "New_YorkCityWestBabylon";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Chaska-city", method = RequestMethod.GET)
	public String getMinnesotaCityChaskacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2710972");
		return "MinnesotaCityChaskacity";
	}   
@RequestMapping(value = "/states/Texas/cities/Huntsville-city", method = RequestMethod.GET)
	public String getTexasCityHuntsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4835528");
		return "TexasCityHuntsvillecity";
	}   
@RequestMapping(value = "/states/California/cities/Hollister-city", method = RequestMethod.GET)
	public String getCaliforniaCityHollistercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "634120");
		return "CaliforniaCityHollistercity";
	}   
@RequestMapping(value = "/states/California/cities/Upland-city", method = RequestMethod.GET)
	public String getCaliforniaCityUplandcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "681344");
		return "CaliforniaCityUplandcity";
	}   
@RequestMapping(value = "/states/North-Dakota/metros/Grand-Forks", method = RequestMethod.GET)
	public String getNorth_DakotaMetroGrandForks(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "24220");
		return "North_DakotaMetroGrandForks";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Pike-County", method = RequestMethod.GET)
	public String getKentuckyCountyPikeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21195");
		return "KentuckyCountyPikeCounty";
	}   
@RequestMapping(value = "/states/Oklahoma/micros/Tahlequah", method = RequestMethod.GET)
	public String getOklahomaMicroTahlequah(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "45140");
		return "OklahomaMicroTahlequah";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Perry-County", method = RequestMethod.GET)
	public String getKentuckyCountyPerryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21193");
		return "KentuckyCountyPerryCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Alabaster-city", method = RequestMethod.GET)
	public String getAlabamaCityAlabastercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "100820");
		return "AlabamaCityAlabastercity";
	}   
@RequestMapping(value = "/states/Oregon/cities/Klamath-Falls-city", method = RequestMethod.GET)
	public String getOregonCityKlamathFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4139700");
		return "OregonCityKlamathFallscity";
	}   
@RequestMapping(value = "/states/Alabama/cities/Auburn-city", method = RequestMethod.GET)
	public String getAlabamaCityAuburncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "103076");
		return "AlabamaCityAuburncity";
	}   
@RequestMapping(value = "/states/California/cities/Sanger-city", method = RequestMethod.GET)
	public String getCaliforniaCitySangercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "667056");
		return "CaliforniaCitySangercity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Mercer-County", method = RequestMethod.GET)
	public String getKentuckyCountyMercerCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21167");
		return "KentuckyCountyMercerCounty";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Roseville-city", method = RequestMethod.GET)
	public String getMinnesotaCityRosevillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2755852");
		return "MinnesotaCityRosevillecity";
	}   
@RequestMapping(value = "/states/Vermont/micros/Bennington", method = RequestMethod.GET)
	public String getVermontMicroBennington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "13540");
		return "VermontMicroBennington";
	}   
@RequestMapping(value = "/states/California/cities/Martinez-city", method = RequestMethod.GET)
	public String getCaliforniaCityMartinezcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "646114");
		return "CaliforniaCityMartinezcity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Garfield-Heights-city", method = RequestMethod.GET)
	public String getOhioCityGarfieldHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3929428");
		return "OhioCityGarfieldHeightscity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Meade-County", method = RequestMethod.GET)
	public String getKentuckyCountyMeadeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21163");
		return "KentuckyCountyMeadeCounty";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Union-City", method = RequestMethod.GET)
	public String getTennesseeMicroUnionCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "46460");
		return "TennesseeMicroUnionCity";
	}   
@RequestMapping(value = "/states/Florida/cities/Deerfield-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityDeerfieldBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1216725");
		return "FloridaCityDeerfieldBeachcity";
	}   
@RequestMapping(value = "/states/South-Carolina/metros/Columbia", method = RequestMethod.GET)
	public String getSouth_CarolinaMetroColumbia(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17900");
		return "South_CarolinaMetroColumbia";
	}   
@RequestMapping(value = "/states/Tennessee/cities/La-Vergne-city", method = RequestMethod.GET)
	public String getTennesseeCityLaVergnecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4741200");
		return "TennesseeCityLaVergnecity";
	}   
@RequestMapping(value = "/states/California/cities/Montclair-city", method = RequestMethod.GET)
	public String getCaliforniaCityMontclaircity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "648788");
		return "CaliforniaCityMontclaircity";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Nelson-County", method = RequestMethod.GET)
	public String getKentuckyCountyNelsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21179");
		return "KentuckyCountyNelsonCounty";
	}   
@RequestMapping(value = "/states/California/cities/San-Ramon-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanRamoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "668378");
		return "CaliforniaCitySanRamoncity";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Northumberland-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyNorthumberlandCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42097");
		return "PennsylvaniaCountyNorthumberlandCounty";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Muhlenberg-County", method = RequestMethod.GET)
	public String getKentuckyCountyMuhlenbergCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21177");
		return "KentuckyCountyMuhlenbergCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Milton", method = RequestMethod.GET)
	public String getMassachusettsCityMilton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2541725");
		return "MassachusettsCityMilton";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Perry-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyPerryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42099");
		return "PennsylvaniaCountyPerryCounty";
	}   
@RequestMapping(value = "/states/Alabama/metros/Auburn-Opelika", method = RequestMethod.GET)
	public String getAlabamaMetroAuburnOpelika(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "12220");
		return "AlabamaMetroAuburnOpelika";
	}   
@RequestMapping(value = "/states/Ohio/cities/Toledo-city", method = RequestMethod.GET)
	public String getOhioCityToledocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3977000");
		return "OhioCityToledocity";
	}   
@RequestMapping(value = "/states/Indiana/metros/Michigan-CityLa-Porte", method = RequestMethod.GET)
	public String getIndianaMetroMichiganCityLaPorte(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "33140");
		return "IndianaMetroMichiganCityLaPorte";
	}   
@RequestMapping(value = "/states/California/cities/San-Gabriel-city", method = RequestMethod.GET)
	public String getCaliforniaCitySanGabrielcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "667042");
		return "CaliforniaCitySanGabrielcity";
	}   
@RequestMapping(value = "/states/Pennsylvania/micros/Indiana", method = RequestMethod.GET)
	public String getPennsylvaniaMicroIndiana(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26860");
		return "PennsylvaniaMicroIndiana";
	}   
@RequestMapping(value = "/states/Kentucky/counties/Montgomery-County", method = RequestMethod.GET)
	public String getKentuckyCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "21173");
		return "KentuckyCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Arkansas/micros/Paragould", method = RequestMethod.GET)
	public String getArkansasMicroParagould(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37500");
		return "ArkansasMicroParagould";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Northampton-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyNorthamptonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42095");
		return "PennsylvaniaCountyNorthamptonCounty";
	}   
@RequestMapping(value = "/states/Indiana/micros/Washington", method = RequestMethod.GET)
	public String getIndianaMicroWashington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "47780");
		return "IndianaMicroWashington";
	}   
@RequestMapping(value = "/states/Pennsylvania/counties/Montgomery-County", method = RequestMethod.GET)
	public String getPennsylvaniaCountyMontgomeryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42091");
		return "PennsylvaniaCountyMontgomeryCounty";
	}   
@RequestMapping(value = "/states/Minnesota/metros/Rochester", method = RequestMethod.GET)
	public String getMinnesotaMetroRochester(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40340");
		return "MinnesotaMetroRochester";
	}   
@RequestMapping(value = "/states/California/metros/Stockton-Lodi", method = RequestMethod.GET)
	public String getCaliforniaMetroStocktonLodi(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "44700");
		return "CaliforniaMetroStocktonLodi";
	}   
@RequestMapping(value = "/states/Illinois/cities/Hanover-Park-village", method = RequestMethod.GET)
	public String getIllinoisCityHanoverParkvillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1732746");
		return "IllinoisCityHanoverParkvillage";
	}   
@RequestMapping(value = "/states/Colorado/metros/Denver-Aurora-Lakewood", method = RequestMethod.GET)
	public String getColoradoMetroDenverAuroraLakewood(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19740");
		return "ColoradoMetroDenverAuroraLakewood";
	}   
@RequestMapping(value = "/states/Florida/cities/Casselberry-city", method = RequestMethod.GET)
	public String getFloridaCityCasselberrycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1211050");
		return "FloridaCityCasselberrycity";
	}   
@RequestMapping(value = "/states/California/cities/Chino-city", method = RequestMethod.GET)
	public String getCaliforniaCityChinocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "613210");
		return "CaliforniaCityChinocity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Clinton-County", method = RequestMethod.GET)
	public String getMichiganCountyClintonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26037");
		return "MichiganCountyClintonCounty";
	}   
@RequestMapping(value = "/states/New-York/metros/BuffaloCheektowagaNiagara-Falls", method = RequestMethod.GET)
	public String getNew_YorkMetroBuffaloCheektowagaNiagaraFalls(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15380");
		return "New_YorkMetroBuffaloCheektowagaNiagaraFalls";
	}   
@RequestMapping(value = "/states/California/cities/Chino-Hills-city", method = RequestMethod.GET)
	public String getCaliforniaCityChinoHillscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "613214");
		return "CaliforniaCityChinoHillscity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Reynoldsburg-city", method = RequestMethod.GET)
	public String getOhioCityReynoldsburgcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3966390");
		return "OhioCityReynoldsburgcity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Putnam-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyPutnamCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54079");
		return "West_VirginiaCountyPutnamCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Preston-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyPrestonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54077");
		return "West_VirginiaCountyPrestonCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Cheboygan-County", method = RequestMethod.GET)
	public String getMichiganCountyCheboyganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26031");
		return "MichiganCountyCheboyganCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Prescott-city", method = RequestMethod.GET)
	public String getArizonaCityPrescottcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "457380");
		return "ArizonaCityPrescottcity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Chippewa-County", method = RequestMethod.GET)
	public String getMichiganCountyChippewaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26033");
		return "MichiganCountyChippewaCounty";
	}   
@RequestMapping(value = "/states/Texas/cities/Seguin-city", method = RequestMethod.GET)
	public String getTexasCitySeguincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4866644");
		return "TexasCitySeguincity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Clare-County", method = RequestMethod.GET)
	public String getMichiganCountyClareCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26035");
		return "MichiganCountyClareCounty";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Saugus", method = RequestMethod.GET)
	public String getMassachusettsCitySaugus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2560050");
		return "MassachusettsCitySaugus";
	}   
@RequestMapping(value = "/states/Maryland/cities/Bel-Air-South", method = RequestMethod.GET)
	public String getMarylandCityBelAirSouth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2405950");
		return "MarylandCityBelAirSouth";
	}   
@RequestMapping(value = "/states/Virginia/counties/Suffolk-city", method = RequestMethod.GET)
	public String getVirginiaCountySuffolkcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51800");
		return "VirginiaCountySuffolkcity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Ankeny-city", method = RequestMethod.GET)
	public String getIowaCityAnkenycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1902305");
		return "IowaCityAnkenycity";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Hopkinsville-city", method = RequestMethod.GET)
	public String getKentuckyCityHopkinsvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2137918");
		return "KentuckyCityHopkinsvillecity";
	}   
@RequestMapping(value = "/states/Utah/metros/Provo-Orem", method = RequestMethod.GET)
	public String getUtahMetroProvoOrem(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39340");
		return "UtahMetroProvoOrem";
	}   
@RequestMapping(value = "/states/Texas/metros/San-Angelo", method = RequestMethod.GET)
	public String getTexasMetroSanAngelo(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41660");
		return "TexasMetroSanAngelo";
	}   
@RequestMapping(value = "/states/Wisconsin/metros/Eau-Claire", method = RequestMethod.GET)
	public String getWisconsinMetroEauClaire(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20740");
		return "WisconsinMetroEauClaire";
	}   
@RequestMapping(value = "/states/Maryland/cities/Eldersburg", method = RequestMethod.GET)
	public String getMarylandCityEldersburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2425575");
		return "MarylandCityEldersburg";
	}   
@RequestMapping(value = "/states/New-York/cities/Hicksville", method = RequestMethod.GET)
	public String getNew_YorkCityHicksville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3634374");
		return "New_YorkCityHicksville";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Gloucester-city", method = RequestMethod.GET)
	public String getMassachusettsCityGloucestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2526150");
		return "MassachusettsCityGloucestercity";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Burleigh-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyBurleighCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38015");
		return "North_DakotaCountyBurleighCounty";
	}   
@RequestMapping(value = "/states/Mississippi/micros/Corinth", method = RequestMethod.GET)
	public String getMississippiMicroCorinth(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "18420");
		return "MississippiMicroCorinth";
	}   
@RequestMapping(value = "/states/Michigan/counties/Genesee-County", method = RequestMethod.GET)
	public String getMichiganCountyGeneseeCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26049");
		return "MichiganCountyGeneseeCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Raleigh-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyRaleighCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54081");
		return "West_VirginiaCountyRaleighCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Randolph-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyRandolphCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54083");
		return "West_VirginiaCountyRandolphCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Delta-County", method = RequestMethod.GET)
	public String getMichiganCountyDeltaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26041");
		return "MichiganCountyDeltaCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Liberty-County", method = RequestMethod.GET)
	public String getTexasCountyLibertyCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48291");
		return "TexasCountyLibertyCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Dickinson-County", method = RequestMethod.GET)
	public String getMichiganCountyDickinsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26043");
		return "MichiganCountyDickinsonCounty";
	}   
@RequestMapping(value = "/states/Georgia/cities/Woodstock-city", method = RequestMethod.GET)
	public String getGeorgiaCityWoodstockcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1384176");
		return "GeorgiaCityWoodstockcity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Moorhead-city", method = RequestMethod.GET)
	public String getMinnesotaCityMoorheadcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2743864");
		return "MinnesotaCityMoorheadcity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Eaton-County", method = RequestMethod.GET)
	public String getMichiganCountyEatonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26045");
		return "MichiganCountyEatonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/North-Port-city", method = RequestMethod.GET)
	public String getFloridaCityNorthPortcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1249675");
		return "FloridaCityNorthPortcity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Emmet-County", method = RequestMethod.GET)
	public String getMichiganCountyEmmetCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26047");
		return "MichiganCountyEmmetCounty";
	}   
@RequestMapping(value = "/states/California/cities/Tustin-city", method = RequestMethod.GET)
	public String getCaliforniaCityTustincity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "680854");
		return "CaliforniaCityTustincity";
	}   
@RequestMapping(value = "/states/North-Dakota/counties/Cass-County", method = RequestMethod.GET)
	public String getNorth_DakotaCountyCassCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "38017");
		return "North_DakotaCountyCassCounty";
	}   
@RequestMapping(value = "/states/California/cities/Arden-Arcade", method = RequestMethod.GET)
	public String getCaliforniaCityArdenArcade(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "602553");
		return "CaliforniaCityArdenArcade";
	}   
@RequestMapping(value = "/states/Virginia/counties/Virginia-Beach-city", method = RequestMethod.GET)
	public String getVirginiaCountyVirginiaBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51810");
		return "VirginiaCountyVirginiaBeachcity";
	}   
@RequestMapping(value = "/states/Texas/counties/Limestone-County", method = RequestMethod.GET)
	public String getTexasCountyLimestoneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48293");
		return "TexasCountyLimestoneCounty";
	}   
@RequestMapping(value = "/states/Arizona/cities/Sun-City-West", method = RequestMethod.GET)
	public String getArizonaCitySunCityWest(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "470355");
		return "ArizonaCitySunCityWest";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/North-Augusta-city", method = RequestMethod.GET)
	public String getSouth_CarolinaCityNorthAugustacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4550695");
		return "South_CarolinaCityNorthAugustacity";
	}   
@RequestMapping(value = "/states/Florida/cities/Jacksonville-city", method = RequestMethod.GET)
	public String getFloridaCityJacksonvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1235000");
		return "FloridaCityJacksonvillecity";
	}   
@RequestMapping(value = "/states/Massachusetts/cities/Leominster-city", method = RequestMethod.GET)
	public String getMassachusettsCityLeominstercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2535075");
		return "MassachusettsCityLeominstercity";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Wilson-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityWilsoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3774540");
		return "North_CarolinaCityWilsoncity";
	}   
@RequestMapping(value = "/states/Indiana/micros/Seymour", method = RequestMethod.GET)
	public String getIndianaMicroSeymour(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42980");
		return "IndianaMicroSeymour";
	}   
@RequestMapping(value = "/states/Florida/cities/St-Cloud-city", method = RequestMethod.GET)
	public String getFloridaCityStCloudcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1262625");
		return "FloridaCityStCloudcity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Barry-County", method = RequestMethod.GET)
	public String getMichiganCountyBarryCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26015");
		return "MichiganCountyBarryCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Bay-County", method = RequestMethod.GET)
	public String getMichiganCountyBayCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26017");
		return "MichiganCountyBayCounty";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Upshur-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyUpshurCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54097");
		return "West_VirginiaCountyUpshurCounty";
	}   
@RequestMapping(value = "/states/Wyoming/cities/Rock-Springs-city", method = RequestMethod.GET)
	public String getWyomingCityRockSpringscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5667235");
		return "WyomingCityRockSpringscity";
	}   
@RequestMapping(value = "/states/North-Carolina/metros/Jacksonville", method = RequestMethod.GET)
	public String getNorth_CarolinaMetroJacksonville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27340");
		return "North_CarolinaMetroJacksonville";
	}   
@RequestMapping(value = "/states/Texas/counties/Lampasas-County", method = RequestMethod.GET)
	public String getTexasCountyLampasasCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48281");
		return "TexasCountyLampasasCounty";
	}   
@RequestMapping(value = "/states/Alabama/cities/Madison-city", method = RequestMethod.GET)
	public String getAlabamaCityMadisoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "145784");
		return "AlabamaCityMadisoncity";
	}   
@RequestMapping(value = "/states/West-Virginia/counties/Wayne-County", method = RequestMethod.GET)
	public String getWest_VirginiaCountyWayneCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "54099");
		return "West_VirginiaCountyWayneCounty";
	}   
@RequestMapping(value = "/states/Illinois/cities/Skokie-village", method = RequestMethod.GET)
	public String getIllinoisCitySkokievillage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1770122");
		return "IllinoisCitySkokievillage";
	}   
@RequestMapping(value = "/states/Virginia/counties/Waynesboro-city", method = RequestMethod.GET)
	public String getVirginiaCountyWaynesborocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51820");
		return "VirginiaCountyWaynesborocity";
	}   
@RequestMapping(value = "/states/Arizona/cities/Sun-City", method = RequestMethod.GET)
	public String getArizonaCitySunCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "470320");
		return "ArizonaCitySunCity";
	}   
@RequestMapping(value = "/states/Florida/cities/Sun-City-Center", method = RequestMethod.GET)
	public String getFloridaCitySunCityCenter(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1269250");
		return "FloridaCitySunCityCenter";
	}   
@RequestMapping(value = "/states/Kansas/micros/McPherson", method = RequestMethod.GET)
	public String getKansasMicroMcPherson(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "32700");
		return "KansasMicroMcPherson";
	}   
@RequestMapping(value = "/states/South-Carolina/cities/Summerville-town", method = RequestMethod.GET)
	public String getSouth_CarolinaCitySummervilletown(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4570270");
		return "South_CarolinaCitySummervilletown";
	}   
@RequestMapping(value = "/states/Virginia/cities/Linton-Hall", method = RequestMethod.GET)
	public String getVirginiaCityLintonHall(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5145957");
		return "VirginiaCityLintonHall";
	}   
@RequestMapping(value = "/states/California/cities/Fallbrook", method = RequestMethod.GET)
	public String getCaliforniaCityFallbrook(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "623462");
		return "CaliforniaCityFallbrook";
	}   
@RequestMapping(value = "/states/Michigan/counties/Cass-County", method = RequestMethod.GET)
	public String getMichiganCountyCassCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26027");
		return "MichiganCountyCassCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Charlevoix-County", method = RequestMethod.GET)
	public String getMichiganCountyCharlevoixCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26029");
		return "MichiganCountyCharlevoixCounty";
	}   
@RequestMapping(value = "/states/Maryland/cities/Clinton", method = RequestMethod.GET)
	public String getMarylandCityClinton(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2417900");
		return "MarylandCityClinton";
	}   
@RequestMapping(value = "/states/Louisiana/cities/Marrero", method = RequestMethod.GET)
	public String getLouisianaCityMarrero(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2248785");
		return "LouisianaCityMarrero";
	}   
@RequestMapping(value = "/states/Ohio/cities/Middletown-city", method = RequestMethod.GET)
	public String getOhioCityMiddletowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3949840");
		return "OhioCityMiddletowncity";
	}   
@RequestMapping(value = "/states/Michigan/counties/Berrien-County", method = RequestMethod.GET)
	public String getMichiganCountyBerrienCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26021");
		return "MichiganCountyBerrienCounty";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Hobbs", method = RequestMethod.GET)
	public String getNew_MexicoMicroHobbs(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26020");
		return "New_MexicoMicroHobbs";
	}   
@RequestMapping(value = "/states/Michigan/counties/Branch-County", method = RequestMethod.GET)
	public String getMichiganCountyBranchCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26023");
		return "MichiganCountyBranchCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Calhoun-County", method = RequestMethod.GET)
	public String getMichiganCountyCalhounCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26025");
		return "MichiganCountyCalhounCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Lamar-County", method = RequestMethod.GET)
	public String getTexasCountyLamarCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48277");
		return "TexasCountyLamarCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Oak-Ridge", method = RequestMethod.GET)
	public String getFloridaCityOakRidge(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1250638");
		return "FloridaCityOakRidge";
	}   
@RequestMapping(value = "/states/Kansas/cities/Olathe-city", method = RequestMethod.GET)
	public String getKansasCityOlathecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2052575");
		return "KansasCityOlathecity";
	}   
@RequestMapping(value = "/states/Idaho/cities/Twin-Falls-city", method = RequestMethod.GET)
	public String getIdahoCityTwinFallscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1682810");
		return "IdahoCityTwinFallscity";
	}   
@RequestMapping(value = "/states/Texas/cities/Baytown-city", method = RequestMethod.GET)
	public String getTexasCityBaytowncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4806128");
		return "TexasCityBaytowncity";
	}   
@RequestMapping(value = "/states/Texas/counties/Kleberg-County", method = RequestMethod.GET)
	public String getTexasCountyKlebergCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48273");
		return "TexasCountyKlebergCounty";
	}   
@RequestMapping(value = "/states/Ohio/micros/Bucyrus", method = RequestMethod.GET)
	public String getOhioMicroBucyrus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "15340");
		return "OhioMicroBucyrus";
	}   
@RequestMapping(value = "/states/New-Mexico/micros/Deming", method = RequestMethod.GET)
	public String getNew_MexicoMicroDeming(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "19700");
		return "New_MexicoMicroDeming";
	}   
@RequestMapping(value = "/states/Illinois/micros/Rochelle", method = RequestMethod.GET)
	public String getIllinoisMicroRochelle(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "40300");
		return "IllinoisMicroRochelle";
	}   
@RequestMapping(value = "/states/Missouri/cities/Springfield-city", method = RequestMethod.GET)
	public String getMissouriCitySpringfieldcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2970000");
		return "MissouriCitySpringfieldcity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Lawrenceburg", method = RequestMethod.GET)
	public String getTennesseeMicroLawrenceburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "29980");
		return "TennesseeMicroLawrenceburg";
	}   
@RequestMapping(value = "/states/Texas/metros/Longview", method = RequestMethod.GET)
	public String getTexasMetroLongview(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "30980");
		return "TexasMetroLongview";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Norman-city", method = RequestMethod.GET)
	public String getOklahomaCityNormancity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4052500");
		return "OklahomaCityNormancity";
	}   
@RequestMapping(value = "/states/Iowa/cities/Waterloo-city", method = RequestMethod.GET)
	public String getIowaCityWaterloocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1982425");
		return "IowaCityWaterloocity";
	}   
@RequestMapping(value = "/states/Florida/cities/The-Acreage", method = RequestMethod.GET)
	public String getFloridaCityTheAcreage(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271564");
		return "FloridaCityTheAcreage";
	}   
@RequestMapping(value = "/states/Virginia/counties/Winchester-city", method = RequestMethod.GET)
	public String getVirginiaCountyWinchestercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "51840");
		return "VirginiaCountyWinchestercity";
	}   
@RequestMapping(value = "/states/Florida/cities/The-Crossings", method = RequestMethod.GET)
	public String getFloridaCityTheCrossings(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271567");
		return "FloridaCityTheCrossings";
	}   
@RequestMapping(value = "/states/Oklahoma/cities/Lawton-city", method = RequestMethod.GET)
	public String getOklahomaCityLawtoncity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4041850");
		return "OklahomaCityLawtoncity";
	}   
@RequestMapping(value = "/states/Texas/cities/McKinney-city", method = RequestMethod.GET)
	public String getTexasCityMcKinneycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4845744");
		return "TexasCityMcKinneycity";
	}   
@RequestMapping(value = "/states/Texas/counties/Kerr-County", method = RequestMethod.GET)
	public String getTexasCountyKerrCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48265");
		return "TexasCountyKerrCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/The-Hammocks", method = RequestMethod.GET)
	public String getFloridaCityTheHammocks(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1271569");
		return "FloridaCityTheHammocks";
	}   
@RequestMapping(value = "/states/Florida/cities/Largo-city", method = RequestMethod.GET)
	public String getFloridaCityLargocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1239425");
		return "FloridaCityLargocity";
	}   
@RequestMapping(value = "/states/Florida/cities/Cooper-City-city", method = RequestMethod.GET)
	public String getFloridaCityCooperCitycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1214125");
		return "FloridaCityCooperCitycity";
	}   
@RequestMapping(value = "/states/Texas/cities/Waco-city", method = RequestMethod.GET)
	public String getTexasCityWacocity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4876000");
		return "TexasCityWacocity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Winona-city", method = RequestMethod.GET)
	public String getMinnesotaCityWinonacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2771032");
		return "MinnesotaCityWinonacity";
	}   
@RequestMapping(value = "/states/Indiana/metros/Bloomington", method = RequestMethod.GET)
	public String getIndianaMetroBloomington(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "14020");
		return "IndianaMetroBloomington";
	}   
@RequestMapping(value = "/states/Kentucky/cities/Paducah-city", method = RequestMethod.GET)
	public String getKentuckyCityPaducahcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2158836");
		return "KentuckyCityPaducahcity";
	}   
@RequestMapping(value = "/states/Texas/counties/Kendall-County", method = RequestMethod.GET)
	public String getTexasCountyKendallCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48259");
		return "TexasCountyKendallCounty";
	}   
@RequestMapping(value = "/states/Rhode-Island/metros/Providence-Warwick", method = RequestMethod.GET)
	public String getRhode_IslandMetroProvidenceWarwick(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "39300");
		return "Rhode_IslandMetroProvidenceWarwick";
	}   
@RequestMapping(value = "/states/Utah/metros/Salt-Lake-City", method = RequestMethod.GET)
	public String getUtahMetroSaltLakeCity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "41620");
		return "UtahMetroSaltLakeCity";
	}   
@RequestMapping(value = "/states/Texas/counties/Kaufman-County", method = RequestMethod.GET)
	public String getTexasCountyKaufmanCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48257");
		return "TexasCountyKaufmanCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Allegan-County", method = RequestMethod.GET)
	public String getMichiganCountyAlleganCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26005");
		return "MichiganCountyAlleganCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Alpena-County", method = RequestMethod.GET)
	public String getMichiganCountyAlpenaCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26007");
		return "MichiganCountyAlpenaCounty";
	}   
@RequestMapping(value = "/states/Michigan/counties/Antrim-County", method = RequestMethod.GET)
	public String getMichiganCountyAntrimCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "26009");
		return "MichiganCountyAntrimCounty";
	}   
@RequestMapping(value = "/states/Pennsylvania/metros/East-Stroudsburg", method = RequestMethod.GET)
	public String getPennsylvaniaMetroEastStroudsburg(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "20700");
		return "PennsylvaniaMetroEastStroudsburg";
	}   
@RequestMapping(value = "/states/Texas/metros/Killeen-Temple", method = RequestMethod.GET)
	public String getTexasMetroKilleenTemple(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "28660");
		return "TexasMetroKilleenTemple";
	}   
@RequestMapping(value = "/states/Texas/counties/Jones-County", method = RequestMethod.GET)
	public String getTexasCountyJonesCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48253");
		return "TexasCountyJonesCounty";
	}   
@RequestMapping(value = "/states/Indiana/cities/La-Porte-city", method = RequestMethod.GET)
	public String getIndianaCityLaPortecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1842246");
		return "IndianaCityLaPortecity";
	}   
@RequestMapping(value = "/states/Texas/counties/Johnson-County", method = RequestMethod.GET)
	public String getTexasCountyJohnsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48251");
		return "TexasCountyJohnsonCounty";
	}   
@RequestMapping(value = "/states/Florida/cities/Pace", method = RequestMethod.GET)
	public String getFloridaCityPace(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1253725");
		return "FloridaCityPace";
	}   
@RequestMapping(value = "/states/Illinois/cities/Chicago-Heights-city", method = RequestMethod.GET)
	public String getIllinoisCityChicagoHeightscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1714026");
		return "IllinoisCityChicagoHeightscity";
	}   
@RequestMapping(value = "/states/Texas/cities/Kerrville-city", method = RequestMethod.GET)
	public String getTexasCityKerrvillecity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "4839040");
		return "TexasCityKerrvillecity";
	}   
@RequestMapping(value = "/states/Wisconsin/cities/Wausau-city", method = RequestMethod.GET)
	public String getWisconsinCityWausaucity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "5584475");
		return "WisconsinCityWausaucity";
	}   
@RequestMapping(value = "/states/California/cities/Thousand-Oaks-city", method = RequestMethod.GET)
	public String getCaliforniaCityThousandOakscity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "678582");
		return "CaliforniaCityThousandOakscity";
	}   
@RequestMapping(value = "/states/California/cities/Long-Beach-city", method = RequestMethod.GET)
	public String getCaliforniaCityLongBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "643000");
		return "CaliforniaCityLongBeachcity";
	}   
@RequestMapping(value = "/states/Florida/cities/Crestview-city", method = RequestMethod.GET)
	public String getFloridaCityCrestviewcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1215475");
		return "FloridaCityCrestviewcity";
	}   
@RequestMapping(value = "/states/Tennessee/micros/Sevierville", method = RequestMethod.GET)
	public String getTennesseeMicroSevierville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "42940");
		return "TennesseeMicroSevierville";
	}   
@RequestMapping(value = "/states/Texas/counties/Jim-Wells-County", method = RequestMethod.GET)
	public String getTexasCountyJimWellsCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48249");
		return "TexasCountyJimWellsCounty";
	}   
@RequestMapping(value = "/states/Georgia/metros/Columbus", method = RequestMethod.GET)
	public String getGeorgiaMetroColumbus(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "17980");
		return "GeorgiaMetroColumbus";
	}   
@RequestMapping(value = "/states/Utah/metros/Ogden-Clearfield", method = RequestMethod.GET)
	public String getUtahMetroOgdenClearfield(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "36260");
		return "UtahMetroOgdenClearfield";
	}   
@RequestMapping(value = "/states/Illinois/micros/Jacksonville", method = RequestMethod.GET)
	public String getIllinoisMicroJacksonville(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "27300");
		return "IllinoisMicroJacksonville";
	}   
@RequestMapping(value = "/states/Texas/counties/Jefferson-County", method = RequestMethod.GET)
	public String getTexasCountyJeffersonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48245");
		return "TexasCountyJeffersonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Jasper-County", method = RequestMethod.GET)
	public String getTexasCountyJasperCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48241");
		return "TexasCountyJasperCounty";
	}   
@RequestMapping(value = "/states/Illinois/micros/Charleston-Mattoon", method = RequestMethod.GET)
	public String getIllinoisMicroCharlestonMattoon(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "16660");
		return "IllinoisMicroCharlestonMattoon";
	}   
@RequestMapping(value = "/states/Texas/micros/Paris", method = RequestMethod.GET)
	public String getTexasMicroParis(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "37580");
		return "TexasMicroParis";
	}   
@RequestMapping(value = "/states/Florida/cities/Edgewater-city", method = RequestMethod.GET)
	public String getFloridaCityEdgewatercity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1219825");
		return "FloridaCityEdgewatercity";
	}   
@RequestMapping(value = "/states/Florida/cities/Jacksonville-Beach-city", method = RequestMethod.GET)
	public String getFloridaCityJacksonvilleBeachcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "1235050");
		return "FloridaCityJacksonvilleBeachcity";
	}   
@RequestMapping(value = "/states/Minnesota/cities/Chanhassen-city", method = RequestMethod.GET)
	public String getMinnesotaCityChanhassencity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "2710918");
		return "MinnesotaCityChanhassencity";
	}   
@RequestMapping(value = "/states/Ohio/cities/Piqua-city", method = RequestMethod.GET)
	public String getOhioCityPiquacity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3962848");
		return "OhioCityPiquacity";
	}   
@RequestMapping(value = "/states/Texas/counties/Hutchinson-County", method = RequestMethod.GET)
	public String getTexasCountyHutchinsonCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48233");
		return "TexasCountyHutchinsonCounty";
	}   
@RequestMapping(value = "/states/Texas/counties/Hunt-County", method = RequestMethod.GET)
	public String getTexasCountyHuntCounty(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "48231");
		return "TexasCountyHuntCounty";
	}   
@RequestMapping(value = "/states/North-Carolina/cities/Shelby-city", method = RequestMethod.GET)
	public String getNorth_CarolinaCityShelbycity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "3761200");
		return "North_CarolinaCityShelbycity";
	}   
@RequestMapping(value = "/states/Colorado/cities/Longmont-city", method = RequestMethod.GET)
	public String getColoradoCityLongmontcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "845970");
		return "ColoradoCityLongmontcity";
	}   
@RequestMapping(value = "/states/California/cities/Banning-city", method = RequestMethod.GET)
	public String getCaliforniaCityBanningcity(Locale locale, Model model) {
	
		model.addAttribute("fipcode", "603820");
		return "CaliforniaCityBanningcity";
	}   
   	
	}         		